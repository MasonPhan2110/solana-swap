/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/@coral-xyz/borsh/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@coral-xyz/borsh/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = __webpack_require__(/*! buffer-layout */ \"./node_modules/buffer-layout/lib/Layout.js\");\nconst web3_js_1 = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\"));\nvar buffer_layout_2 = __webpack_require__(/*! buffer-layout */ \"./node_modules/buffer-layout/lib/Layout.js\");\nObject.defineProperty(exports, \"u8\", ({ enumerable: true, get: function () { return buffer_layout_2.u8; } }));\nObject.defineProperty(exports, \"i8\", ({ enumerable: true, get: function () { return buffer_layout_2.s8; } }));\nObject.defineProperty(exports, \"u16\", ({ enumerable: true, get: function () { return buffer_layout_2.u16; } }));\nObject.defineProperty(exports, \"i16\", ({ enumerable: true, get: function () { return buffer_layout_2.s16; } }));\nObject.defineProperty(exports, \"u32\", ({ enumerable: true, get: function () { return buffer_layout_2.u32; } }));\nObject.defineProperty(exports, \"i32\", ({ enumerable: true, get: function () { return buffer_layout_2.s32; } }));\nObject.defineProperty(exports, \"f32\", ({ enumerable: true, get: function () { return buffer_layout_2.f32; } }));\nObject.defineProperty(exports, \"f64\", ({ enumerable: true, get: function () { return buffer_layout_2.f64; } }));\nObject.defineProperty(exports, \"struct\", ({ enumerable: true, get: function () { return buffer_layout_2.struct; } }));\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@coral-xyz/borsh/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@project-serum/anchor/dist/browser/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/browser/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"web3\": function() { return /* reexport module object */ _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__; },\n/* harmony export */   \"BN\": function() { return /* reexport default from dynamic */ bn_js__WEBPACK_IMPORTED_MODULE_2___default.a; },\n/* harmony export */   \"ACCOUNT_DISCRIMINATOR_SIZE\": function() { return /* binding */ ACCOUNT_DISCRIMINATOR_SIZE; },\n/* harmony export */   \"AccountClient\": function() { return /* binding */ AccountClient; },\n/* harmony export */   \"AnchorError\": function() { return /* binding */ AnchorError; },\n/* harmony export */   \"AnchorProvider\": function() { return /* binding */ AnchorProvider; },\n/* harmony export */   \"BorshAccountsCoder\": function() { return /* binding */ BorshAccountsCoder; },\n/* harmony export */   \"BorshCoder\": function() { return /* binding */ BorshCoder; },\n/* harmony export */   \"BorshEventCoder\": function() { return /* binding */ BorshEventCoder; },\n/* harmony export */   \"BorshInstructionCoder\": function() { return /* binding */ BorshInstructionCoder; },\n/* harmony export */   \"BorshStateCoder\": function() { return /* binding */ BorshStateCoder; },\n/* harmony export */   \"EventManager\": function() { return /* binding */ EventManager; },\n/* harmony export */   \"EventParser\": function() { return /* binding */ EventParser; },\n/* harmony export */   \"IdlError\": function() { return /* binding */ IdlError; },\n/* harmony export */   \"LangErrorCode\": function() { return /* binding */ LangErrorCode; },\n/* harmony export */   \"LangErrorMessage\": function() { return /* binding */ LangErrorMessage; },\n/* harmony export */   \"MethodsBuilderFactory\": function() { return /* binding */ MethodsBuilderFactory; },\n/* harmony export */   \"Native\": function() { return /* binding */ Native; },\n/* harmony export */   \"Program\": function() { return /* binding */ Program; },\n/* harmony export */   \"ProgramError\": function() { return /* binding */ ProgramError; },\n/* harmony export */   \"ProgramErrorStack\": function() { return /* binding */ ProgramErrorStack; },\n/* harmony export */   \"StateClient\": function() { return /* binding */ StateClient; },\n/* harmony export */   \"SystemCoder\": function() { return /* binding */ SystemCoder; },\n/* harmony export */   \"eventDiscriminator\": function() { return /* binding */ eventDiscriminator; },\n/* harmony export */   \"getProvider\": function() { return /* binding */ getProvider; },\n/* harmony export */   \"parseIdlErrors\": function() { return /* binding */ parseIdlErrors; },\n/* harmony export */   \"setProvider\": function() { return /* binding */ setProvider; },\n/* harmony export */   \"splitArgsAndCtx\": function() { return /* binding */ splitArgsAndCtx; },\n/* harmony export */   \"stateDiscriminator\": function() { return /* binding */ stateDiscriminator; },\n/* harmony export */   \"toInstruction\": function() { return /* binding */ toInstruction; },\n/* harmony export */   \"translateAddress\": function() { return /* binding */ translateAddress; },\n/* harmony export */   \"translateError\": function() { return /* binding */ translateError; },\n/* harmony export */   \"utils\": function() { return /* binding */ index; },\n/* harmony export */   \"validateAccounts\": function() { return /* binding */ validateAccounts; }\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! camelcase */ \"./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! js-sha256 */ \"./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @coral-xyz/borsh */ \"./node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! pako */ \"./node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! assert */ \"./node_modules/next/dist/compiled/assert/assert.js\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_10__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */\nfunction chunks(array, size) {\n    return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n\nfunction encode$3(data) {\n    return data.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nfunction decode$3(data) {\n    if (data.indexOf(\"0x\") === 0) {\n        data = data.substr(2);\n    }\n    if (data.length % 2 === 1) {\n        data = \"0\" + data;\n    }\n    let key = data.match(/.{2}/g);\n    if (key === null) {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([]);\n    }\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(key.map((byte) => parseInt(byte, 16)));\n}\n\nvar hex = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode$3,\n    decode: decode$3\n});\n\nfunction decode$2(array) {\n    const decoder = new TextDecoder(\"utf-8\") // Browser https://caniuse.com/textencoder.\n        ; // Node.\n    return decoder.decode(array);\n}\nfunction encode$2(input) {\n    const encoder = new TextEncoder() // Browser.\n        ; // Node.\n    return encoder.encode(input);\n}\n\nvar utf8 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    decode: decode$2,\n    encode: encode$2\n});\n\nfunction encode$1(data) {\n    return bs58__WEBPACK_IMPORTED_MODULE_3___default().encode(data);\n}\nfunction decode$1(data) {\n    return bs58__WEBPACK_IMPORTED_MODULE_3___default().decode(data);\n}\n\nvar bs58 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode$1,\n    decode: decode$1\n});\n\nfunction encode(data) {\n    return base64_js__WEBPACK_IMPORTED_MODULE_4__.fromByteArray(data);\n}\nfunction decode(data) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(base64_js__WEBPACK_IMPORTED_MODULE_4__.toByteArray(data));\n}\n\nvar base64 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode,\n    decode: decode\n});\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hex: hex,\n    utf8: utf8,\n    bs58: bs58,\n    base64: base64\n});\n\nfunction parseIdlErrors(idl) {\n    const errors = new Map();\n    if (idl.errors) {\n        idl.errors.forEach((e) => {\n            var _a;\n            let msg = (_a = e.msg) !== null && _a !== void 0 ? _a : e.name;\n            errors.set(e.code, msg);\n        });\n    }\n    return errors;\n}\n// Allow either IdLInstruction or IdlStateMethod since the types share fields.\nfunction toInstruction(idlIx, ...args) {\n    if (idlIx.args.length != args.length) {\n        throw new Error(\"Invalid argument length\");\n    }\n    const ix = {};\n    let idx = 0;\n    idlIx.args.forEach((ixArg) => {\n        ix[ixArg.name] = args[idx];\n        idx += 1;\n    });\n    return ix;\n}\n// Throws error if any account required for the `ix` is not given.\nfunction validateAccounts(ixAccounts, accounts = {}) {\n    ixAccounts.forEach((acc) => {\n        if (\"accounts\" in acc) {\n            validateAccounts(acc.accounts, accounts[acc.name]);\n        }\n        else {\n            if (accounts[acc.name] === undefined) {\n                throw new Error(`Invalid arguments: ${acc.name} not provided.`);\n            }\n        }\n    });\n}\n// Translates an address to a Pubkey.\nfunction translateAddress(address) {\n    return address instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey ? address : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(address);\n}\n\n/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    this.value = void 0;\n    this.key = void 0;\n    this.type = void 0;\n    this.refinement = void 0;\n    this.path = void 0;\n    this.branch = void 0;\n    this.failures = void 0;\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    this.TYPE = void 0;\n    this.type = void 0;\n    this.schema = void 0;\n    this.coercer = void 0;\n    this.validator = void 0;\n    this.refiner = void 0;\n    this.entries = void 0;\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nfunction union$1(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    coercer(value, ctx) {\n      const firstMatch = Structs.find(s => {\n        const [e] = s.validate(value, {\n          coerce: true\n        });\n        return !e;\n      }) || unknown();\n      return firstMatch.coercer(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n\n/**\n * Sends a transaction to a program with the given accounts and instruction\n * data.\n */\nasync function invoke(programId, accounts, data, provider) {\n    programId = translateAddress(programId);\n    if (!provider) {\n        provider = getProvider();\n    }\n    const tx = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n    tx.add(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({\n        programId,\n        keys: accounts !== null && accounts !== void 0 ? accounts : [],\n        data,\n    }));\n    if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n    }\n    return await provider.sendAndConfirm(tx, []);\n}\nconst GET_MULTIPLE_ACCOUNTS_LIMIT = 99;\nasync function getMultipleAccounts(connection, publicKeys, commitment) {\n    const results = await getMultipleAccountsAndContext(connection, publicKeys, commitment);\n    return results.map((result) => {\n        return result\n            ? { publicKey: result.publicKey, account: result.account }\n            : null;\n    });\n}\nasync function getMultipleAccountsAndContext(connection, publicKeys, commitment) {\n    if (publicKeys.length <= GET_MULTIPLE_ACCOUNTS_LIMIT) {\n        return await getMultipleAccountsAndContextCore(connection, publicKeys, commitment);\n    }\n    else {\n        const batches = chunks(publicKeys, GET_MULTIPLE_ACCOUNTS_LIMIT);\n        const results = await Promise.all(batches.map((batch) => getMultipleAccountsAndContextCore(connection, batch, commitment)));\n        return results.flat();\n    }\n}\nasync function getMultipleAccountsAndContextCore(connection, publicKeys, commitmentOverride) {\n    const commitment = commitmentOverride !== null && commitmentOverride !== void 0 ? commitmentOverride : connection.commitment;\n    const { value: accountInfos, context } = await connection.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n    const accounts = accountInfos.map((account, idx) => {\n        if (account === null) {\n            return null;\n        }\n        return {\n            publicKey: publicKeys[idx],\n            account,\n            context,\n        };\n    });\n    return accounts;\n}\n// copy from @solana/web3.js that has a commitment param\nasync function simulateTransaction(connection, transaction, signers, commitment, includeAccounts) {\n    if (signers && signers.length > 0) {\n        transaction.sign(...signers);\n    }\n    // @ts-expect-error\n    const message = transaction._compile();\n    const signData = message.serialize();\n    // @ts-expect-error\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString(\"base64\");\n    const config = {\n        encoding: \"base64\",\n        commitment: commitment !== null && commitment !== void 0 ? commitment : connection.commitment,\n    };\n    if (includeAccounts) {\n        const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map((key) => key.toBase58());\n        config[\"accounts\"] = {\n            encoding: \"base64\",\n            addresses,\n        };\n    }\n    if (signers) {\n        config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    // @ts-expect-error\n    const unsafeRes = await connection._rpcRequest(\"simulateTransaction\", args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if (\"error\" in res) {\n        let logs;\n        if (\"data\" in res.error) {\n            logs = res.error.data.logs;\n            if (logs && Array.isArray(logs)) {\n                const traceIndent = \"\\n    \";\n                const logTrace = traceIndent + logs.join(traceIndent);\n                console.error(res.error.message, logTrace);\n            }\n        }\n        throw new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SendTransactionError(\"failed to simulate transaction: \" + res.error.message, logs);\n    }\n    return res.result;\n}\n// copy from @solana/web3.js\nfunction jsonRpcResult(schema) {\n    return coerce(createRpcResult(schema), UnknownRpcResult, (value) => {\n        if (\"error\" in value) {\n            return value;\n        }\n        else {\n            return {\n                ...value,\n                result: create(value.result, schema),\n            };\n        }\n    });\n}\n// copy from @solana/web3.js\nconst UnknownRpcResult = createRpcResult(unknown());\n// copy from @solana/web3.js\nfunction createRpcResult(result) {\n    return union$1([\n        type({\n            jsonrpc: literal(\"2.0\"),\n            id: string(),\n            result,\n        }),\n        type({\n            jsonrpc: literal(\"2.0\"),\n            id: string(),\n            error: type({\n                code: unknown(),\n                message: string(),\n                data: optional(any()),\n            }),\n        }),\n    ]);\n}\n// copy from @solana/web3.js\nfunction jsonRpcResultAndContext(value) {\n    return jsonRpcResult(type({\n        context: type({\n            slot: number(),\n        }),\n        value,\n    }));\n}\n// copy from @solana/web3.js\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n    err: nullable(union$1([type({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(nullable(array(nullable(type({\n        executable: boolean(),\n        owner: string(),\n        lamports: number(),\n        data: array(string()),\n        rentEpoch: optional(number()),\n    }))))),\n    unitsConsumed: optional(number()),\n}));\n\nvar rpc = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    invoke: invoke,\n    getMultipleAccounts: getMultipleAccounts,\n    getMultipleAccountsAndContext: getMultipleAccountsAndContext,\n    simulateTransaction: simulateTransaction\n});\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n */\nclass AnchorProvider {\n    /**\n     * @param connection The cluster connection where the program is deployed.\n     * @param wallet     The wallet used to pay for and sign all transactions.\n     * @param opts       Transaction confirmation options to use by default.\n     */\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n        this.publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: \"processed\",\n            commitment: \"processed\",\n        };\n    }\n    /**\n     * Returns a `Provider` with a wallet read from the local filesystem.\n     *\n     * @param url  The network cluster url.\n     * @param opts The default transaction confirmation options.\n     *\n     * (This api is for Node only.)\n     */\n    static local(url, opts) {\n        {\n            throw new Error(`Provider local is not available on browser.`);\n        }\n    }\n    /**\n     * Returns a `Provider` read from the `ANCHOR_PROVIDER_URL` environment\n     * variable\n     *\n     * (This api is for Node only.)\n     */\n    static env() {\n        {\n            throw new Error(`Provider env is not available on browser.`);\n        }\n    }\n    /**\n     * Sends the given transaction, paid for and signed by the provider's wallet.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */\n    async sendAndConfirm(tx, signers, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        tx.feePayer = tx.feePayer || this.wallet.publicKey;\n        tx.recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n        tx = await this.wallet.signTransaction(tx);\n        (signers !== null && signers !== void 0 ? signers : []).forEach((kp) => {\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        try {\n            return await sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n        }\n        catch (err) {\n            // thrown if the underlying 'confirmTransaction' encounters a failed tx\n            // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n            if (err instanceof ConfirmError) {\n                // choose the shortest available commitment for 'getTransaction'\n                // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                // commitment `sendAndConfirmRawTransaction` used\n                const failedTx = await this.connection.getTransaction(encode$1(tx.signature), { commitment: \"confirmed\" });\n                if (!failedTx) {\n                    throw err;\n                }\n                else {\n                    const logs = (_a = failedTx.meta) === null || _a === void 0 ? void 0 : _a.logMessages;\n                    throw !logs ? err : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SendTransactionError(err.message, logs);\n                }\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Similar to `send`, but for an array of transactions and signers.\n     *\n     * @param txWithSigners Array of transactions and signers.\n     * @param opts          Transaction confirmation options.\n     */\n    async sendAll(txWithSigners, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const blockhash = await this.connection.getLatestBlockhash(opts.preflightCommitment);\n        let txs = txWithSigners.map((r) => {\n            var _a;\n            let tx = r.tx;\n            let signers = (_a = r.signers) !== null && _a !== void 0 ? _a : [];\n            tx.feePayer = tx.feePayer || this.wallet.publicKey;\n            tx.recentBlockhash = blockhash.blockhash;\n            signers.forEach((kp) => {\n                tx.partialSign(kp);\n            });\n            return tx;\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for (let k = 0; k < txs.length; k += 1) {\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            }\n            catch (err) {\n                // thrown if the underlying 'confirmTransaction' encounters a failed tx\n                // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n                if (err instanceof ConfirmError) {\n                    // choose the shortest available commitment for 'getTransaction'\n                    // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                    // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                    // commitment `sendAndConfirmRawTransaction` used\n                    const failedTx = await this.connection.getTransaction(encode$1(tx.signature), { commitment: \"confirmed\" });\n                    if (!failedTx) {\n                        throw err;\n                    }\n                    else {\n                        const logs = (_a = failedTx.meta) === null || _a === void 0 ? void 0 : _a.logMessages;\n                        throw !logs ? err : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SendTransactionError(err.message, logs);\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n        return sigs;\n    }\n    /**\n     * Simulates the given transaction, returning emitted logs from execution.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */\n    async simulate(tx, signers, commitment, includeAccounts) {\n        tx.feePayer = tx.feePayer || this.wallet.publicKey;\n        tx.recentBlockhash = (await this.connection.getLatestBlockhash(commitment !== null && commitment !== void 0 ? commitment : this.connection.commitment)).blockhash;\n        tx = await this.wallet.signTransaction(tx);\n        const result = await simulateTransaction(this.connection, tx, signers, commitment, includeAccounts);\n        if (result.value.err) {\n            throw new SimulateError(result.value);\n        }\n        return result.value;\n    }\n}\nclass SimulateError extends Error {\n    constructor(simulationResponse, message) {\n        super(message);\n        this.simulationResponse = simulationResponse;\n    }\n}\n// Copy of Connection.sendAndConfirmRawTransaction that throws\n// a better error if 'confirmTransaction` returns an error status\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n    const sendOptions = options && {\n        skipPreflight: options.skipPreflight,\n        preflightCommitment: options.preflightCommitment || options.commitment,\n    };\n    const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n    const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n    if (status.err) {\n        throw new ConfirmError(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n    }\n    return signature;\n}\nclass ConfirmError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/**\n * Sets the default provider on the client.\n */\nfunction setProvider(provider) {\n    _provider = provider;\n}\n/**\n * Returns the default provider being used by the client.\n */\nfunction getProvider() {\n    if (_provider === null) {\n        return AnchorProvider.local();\n    }\n    return _provider;\n}\n// Global provider used as the default when a provider is not given.\nlet _provider = null;\n\nconst _AVAILABLE_FEATURES = new Set([\"anchor-deprecated-state\", \"debug-logs\"]);\nconst _FEATURES = new Map();\nfunction set(key) {\n    if (!_AVAILABLE_FEATURES.has(key)) {\n        throw new Error(\"Invalid feature\");\n    }\n    _FEATURES.set(key, true);\n}\nfunction isSet(key) {\n    return _FEATURES.get(key) !== undefined;\n}\n\nvar features = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    set: set,\n    isSet: isSet\n});\n\nclass IdlError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"IdlError\";\n    }\n}\nclass ProgramErrorStack {\n    constructor(stack) {\n        this.stack = stack;\n    }\n    static parse(logs) {\n        var _a;\n        const programKeyRegex = /^Program (\\w*) invoke/;\n        const successRegex = /^Program \\w* success/;\n        const programStack = [];\n        for (let i = 0; i < logs.length; i++) {\n            if (successRegex.exec(logs[i])) {\n                programStack.pop();\n                continue;\n            }\n            const programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n            if (!programKey) {\n                continue;\n            }\n            programStack.push(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(programKey));\n        }\n        return new ProgramErrorStack(programStack);\n    }\n}\nclass AnchorError extends Error {\n    constructor(errorCode, errorMessage, errorLogs, logs, origin, comparedValues) {\n        super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n        this.errorLogs = errorLogs;\n        this.logs = logs;\n        this.error = { errorCode, errorMessage, comparedValues, origin };\n        this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n    static parse(logs) {\n        if (!logs) {\n            return null;\n        }\n        const anchorErrorLogIndex = logs.findIndex((log) => log.startsWith(\"Program log: AnchorError\"));\n        if (anchorErrorLogIndex === -1) {\n            return null;\n        }\n        const anchorErrorLog = logs[anchorErrorLogIndex];\n        const errorLogs = [anchorErrorLog];\n        let comparedValues;\n        if (anchorErrorLogIndex + 1 < logs.length) {\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left:\n            // <Pubkey>\n            // Right:\n            // <Pubkey>\n            if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n                const pubkeyRegex = /^Program log: (.*)$/;\n                const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n                const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n                comparedValues = [\n                    new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(leftPubkey),\n                    new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(rightPubkey),\n                ];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5));\n            }\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left: <value>\n            // Right: <value>\n            else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n                const valueRegex = /^Program log: (Left|Right): (.*)$/;\n                const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n                const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3));\n                comparedValues = [leftValue, rightValue];\n            }\n        }\n        const regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n        const regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n        const regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n        if (noInfoAnchorErrorLog) {\n            const [errorCodeString, errorNumber, errorMessage] = noInfoAnchorErrorLog.slice(1, 4);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n        }\n        else if (fileLineAnchorErrorLog) {\n            const [file, line, errorCodeString, errorNumber, errorMessage] = fileLineAnchorErrorLog.slice(1, 6);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            const fileLine = { file, line: parseInt(line) };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, fileLine, comparedValues);\n        }\n        else if (accountNameAnchorErrorLog) {\n            const [accountName, errorCodeString, errorNumber, errorMessage] = accountNameAnchorErrorLog.slice(1, 5);\n            const origin = accountName;\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues);\n        }\n        else {\n            return null;\n        }\n    }\n    get program() {\n        return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        return this._programErrorStack.stack;\n    }\n    toString() {\n        return this.message;\n    }\n}\n// An error from a user defined program.\nclass ProgramError extends Error {\n    constructor(code, msg, logs) {\n        super();\n        this.code = code;\n        this.msg = msg;\n        this.logs = logs;\n        if (logs) {\n            this._programErrorStack = ProgramErrorStack.parse(logs);\n        }\n    }\n    static parse(err, idlErrors) {\n        const errString = err.toString();\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let unparsedErrorCode;\n        if (errString.includes(\"custom program error:\")) {\n            let components = errString.split(\"custom program error: \");\n            if (components.length !== 2) {\n                return null;\n            }\n            else {\n                unparsedErrorCode = components[1];\n            }\n        }\n        else {\n            const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n            if (!matches || matches.length > 1) {\n                return null;\n            }\n            unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(unparsedErrorCode);\n        }\n        catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    get program() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nfunction translateError(err, idlErrors) {\n    if (isSet(\"debug-logs\")) {\n        console.log(\"Translating error:\", err);\n    }\n    const anchorError = AnchorError.parse(err.logs);\n    if (anchorError) {\n        return anchorError;\n    }\n    const programError = ProgramError.parse(err, idlErrors);\n    if (programError) {\n        return programError;\n    }\n    if (err.logs) {\n        const handler = {\n            get: function (target, prop) {\n                if (prop === \"programErrorStack\") {\n                    return target.programErrorStack.stack;\n                }\n                else if (prop === \"program\") {\n                    return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n                }\n                else {\n                    // this is the normal way to return all other props\n                    // without modifying them.\n                    // @ts-expect-error\n                    return Reflect.get(...arguments);\n                }\n            },\n        };\n        err.programErrorStack = ProgramErrorStack.parse(err.logs);\n        return new Proxy(err, handler);\n    }\n    return err;\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: 100,\n    InstructionFallbackNotFound: 101,\n    InstructionDidNotDeserialize: 102,\n    InstructionDidNotSerialize: 103,\n    // IDL instructions.\n    IdlInstructionStub: 1000,\n    IdlInstructionInvalidProgram: 1001,\n    // Constraints.\n    ConstraintMut: 2000,\n    ConstraintHasOne: 2001,\n    ConstraintSigner: 2002,\n    ConstraintRaw: 2003,\n    ConstraintOwner: 2004,\n    ConstraintRentExempt: 2005,\n    ConstraintSeeds: 2006,\n    ConstraintExecutable: 2007,\n    ConstraintState: 2008,\n    ConstraintAssociated: 2009,\n    ConstraintAssociatedInit: 2010,\n    ConstraintClose: 2011,\n    ConstraintAddress: 2012,\n    ConstraintZero: 2013,\n    ConstraintTokenMint: 2014,\n    ConstraintTokenOwner: 2015,\n    ConstraintMintMintAuthority: 2016,\n    ConstraintMintFreezeAuthority: 2017,\n    ConstraintMintDecimals: 2018,\n    ConstraintSpace: 2019,\n    ConstraintAccountIsNone: 2020,\n    // Require.\n    RequireViolated: 2500,\n    RequireEqViolated: 2501,\n    RequireKeysEqViolated: 2502,\n    RequireNeqViolated: 2503,\n    RequireKeysNeqViolated: 2504,\n    RequireGtViolated: 2505,\n    RequireGteViolated: 2506,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: 3000,\n    AccountDiscriminatorNotFound: 3001,\n    AccountDiscriminatorMismatch: 3002,\n    AccountDidNotDeserialize: 3003,\n    AccountDidNotSerialize: 3004,\n    AccountNotEnoughKeys: 3005,\n    AccountNotMutable: 3006,\n    AccountOwnedByWrongProgram: 3007,\n    InvalidProgramId: 3008,\n    InvalidProgramExecutable: 3009,\n    AccountNotSigner: 3010,\n    AccountNotSystemOwned: 3011,\n    AccountNotInitialized: 3012,\n    AccountNotProgramData: 3013,\n    AccountNotAssociatedTokenAccount: 3014,\n    AccountSysvarMismatch: 3015,\n    AccountReallocExceedsLimit: 3016,\n    AccountDuplicateReallocs: 3017,\n    // State.\n    StateInvalidAddress: 4000,\n    // Miscellaneous\n    DeclaredProgramIdMismatch: 4100,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: 5000,\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [\n        LangErrorCode.InstructionMissing,\n        \"8 byte instruction identifier not provided\",\n    ],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\",\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\",\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\",\n    ],\n    // Constraints.\n    [LangErrorCode.ConstraintMut, \"A mut constraint was violated\"],\n    [LangErrorCode.ConstraintHasOne, \"A has one constraint was violated\"],\n    [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"],\n    [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"],\n    [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"],\n    [\n        LangErrorCode.ConstraintRentExempt,\n        \"A rent exemption constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"],\n    [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"],\n    [LangErrorCode.ConstraintState, \"A state constraint was violated\"],\n    [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintClose, \"A close constraint was violated\"],\n    [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n    [LangErrorCode.ConstraintZero, \"Expected zero account discriminant\"],\n    [LangErrorCode.ConstraintTokenMint, \"A token mint constraint was violated\"],\n    [LangErrorCode.ConstraintTokenOwner, \"A token owner constraint was violated\"],\n    [\n        LangErrorCode.ConstraintMintMintAuthority,\n        \"A mint mint authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintFreezeAuthority,\n        \"A mint freeze authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintDecimals,\n        \"A mint decimals constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintSpace, \"A space constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAccountIsNone,\n        \"A required account for the constraint is None\",\n    ],\n    // Require.\n    [LangErrorCode.RequireViolated, \"A require expression was violated\"],\n    [LangErrorCode.RequireEqViolated, \"A require_eq expression was violated\"],\n    [\n        LangErrorCode.RequireKeysEqViolated,\n        \"A require_keys_eq expression was violated\",\n    ],\n    [LangErrorCode.RequireNeqViolated, \"A require_neq expression was violated\"],\n    [\n        LangErrorCode.RequireKeysNeqViolated,\n        \"A require_keys_neq expression was violated\",\n    ],\n    [LangErrorCode.RequireGtViolated, \"A require_gt expression was violated\"],\n    [LangErrorCode.RequireGteViolated, \"A require_gte expression was violated\"],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No 8 byte discriminator was found on the account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"8 byte discriminator did not match what was expected\",\n    ],\n    [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"],\n    [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\",\n    ],\n    [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"],\n    [\n        LangErrorCode.AccountOwnedByWrongProgram,\n        \"The given account is owned by a different program than expected\",\n    ],\n    [LangErrorCode.InvalidProgramId, \"Program ID was not as expected\"],\n    [LangErrorCode.InvalidProgramExecutable, \"Program account is not executable\"],\n    [LangErrorCode.AccountNotSigner, \"The given account did not sign\"],\n    [\n        LangErrorCode.AccountNotSystemOwned,\n        \"The given account is not owned by the system program\",\n    ],\n    [\n        LangErrorCode.AccountNotInitialized,\n        \"The program expected this account to be already initialized\",\n    ],\n    [\n        LangErrorCode.AccountNotProgramData,\n        \"The given account is not a program data account\",\n    ],\n    [\n        LangErrorCode.AccountNotAssociatedTokenAccount,\n        \"The given account is not the associated token account\",\n    ],\n    [\n        LangErrorCode.AccountSysvarMismatch,\n        \"The given public key does not match the required sysvar\",\n    ],\n    [\n        LangErrorCode.AccountReallocExceedsLimit,\n        \"The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit\",\n    ],\n    [\n        LangErrorCode.AccountDuplicateReallocs,\n        \"The account was duplicated for more than one reallocation\",\n    ],\n    // State.\n    [\n        LangErrorCode.StateInvalidAddress,\n        \"The given state account does not have the correct address\",\n    ],\n    // Miscellaneous\n    [\n        LangErrorCode.DeclaredProgramIdMismatch,\n        \"The declared program id does not match the actual program id\",\n    ],\n    // Deprecated\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\",\n    ],\n]);\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\n/**\n * Lower case as a function.\n */\nfunction lowerCase(str) {\n    return str.toLowerCase();\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nfunction noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n\nfunction dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n\nfunction snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign$1({ delimiter: \"_\" }, options));\n}\n\nclass IdlCoder {\n    static fieldLayout(field, types) {\n        const fieldName = field.name !== undefined ? camelcase__WEBPACK_IMPORTED_MODULE_5___default()(field.name) : undefined;\n        switch (field.type) {\n            case \"bool\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.bool(fieldName);\n            }\n            case \"u8\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u8(fieldName);\n            }\n            case \"i8\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.i8(fieldName);\n            }\n            case \"u16\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u16(fieldName);\n            }\n            case \"i16\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.i16(fieldName);\n            }\n            case \"u32\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u32(fieldName);\n            }\n            case \"i32\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.i32(fieldName);\n            }\n            case \"f32\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.f32(fieldName);\n            }\n            case \"u64\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u64(fieldName);\n            }\n            case \"i64\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.i64(fieldName);\n            }\n            case \"f64\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.f64(fieldName);\n            }\n            case \"u128\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u128(fieldName);\n            }\n            case \"i128\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.i128(fieldName);\n            }\n            case \"u256\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u256(fieldName);\n            }\n            case \"i256\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.i256(fieldName);\n            }\n            case \"bytes\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.vecU8(fieldName);\n            }\n            case \"string\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.str(fieldName);\n            }\n            case \"publicKey\": {\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.publicKey(fieldName);\n            }\n            default: {\n                if (\"vec\" in field.type) {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.vec(IdlCoder.fieldLayout({\n                        name: undefined,\n                        type: field.type.vec,\n                    }, types), fieldName);\n                }\n                else if (\"option\" in field.type) {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.option(IdlCoder.fieldLayout({\n                        name: undefined,\n                        type: field.type.option,\n                    }, types), fieldName);\n                }\n                else if (\"defined\" in field.type) {\n                    const defined = field.type.defined;\n                    // User defined type.\n                    if (types === undefined) {\n                        throw new IdlError(\"User defined types not provided\");\n                    }\n                    const filtered = types.filter((t) => t.name === defined);\n                    if (filtered.length !== 1) {\n                        throw new IdlError(`Type not found: ${JSON.stringify(field)}`);\n                    }\n                    return IdlCoder.typeDefLayout(filtered[0], types, fieldName);\n                }\n                else if (\"array\" in field.type) {\n                    let arrayTy = field.type.array[0];\n                    let arrayLen = field.type.array[1];\n                    let innerLayout = IdlCoder.fieldLayout({\n                        name: undefined,\n                        type: arrayTy,\n                    }, types);\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.array(innerLayout, arrayLen, fieldName);\n                }\n                else {\n                    throw new Error(`Not yet implemented: ${field}`);\n                }\n            }\n        }\n    }\n    static typeDefLayout(typeDef, types = [], name) {\n        if (typeDef.type.kind === \"struct\") {\n            const fieldLayouts = typeDef.type.fields.map((field) => {\n                const x = IdlCoder.fieldLayout(field, types);\n                return x;\n            });\n            return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct(fieldLayouts, name);\n        }\n        else if (typeDef.type.kind === \"enum\") {\n            let variants = typeDef.type.variants.map((variant) => {\n                const name = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(variant.name);\n                if (variant.fields === undefined) {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct([], name);\n                }\n                const fieldLayouts = variant.fields.map((f, i) => {\n                    if (!f.hasOwnProperty(\"name\")) {\n                        return IdlCoder.fieldLayout({ type: f, name: i.toString() }, types);\n                    }\n                    // this typescript conversion is ok\n                    // because if f were of type IdlType\n                    // (that does not have a name property)\n                    // the check before would've errored\n                    return IdlCoder.fieldLayout(f, types);\n                });\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct(fieldLayouts, name);\n            });\n            if (name !== undefined) {\n                // Buffer-layout lib requires the name to be null (on construction)\n                // when used as a field.\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.rustEnum(variants).replicate(name);\n            }\n            return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.rustEnum(variants, name);\n        }\n        else {\n            throw new Error(`Unknown type kint: ${typeDef}`);\n        }\n    }\n}\n\n/**\n * Namespace for state method function signatures.\n */\nconst SIGHASH_STATE_NAMESPACE = \"state\";\n/**\n * Namespace for global instruction function signatures (i.e. functions\n * that aren't namespaced by the state or any of its trait implementations).\n */\nconst SIGHASH_GLOBAL_NAMESPACE = \"global\";\n/**\n * Encodes and decodes program instructions.\n */\nclass BorshInstructionCoder {\n    constructor(idl) {\n        this.idl = idl;\n        this.ixLayout = BorshInstructionCoder.parseIxLayout(idl);\n        const sighashLayouts = new Map();\n        idl.instructions.forEach((ix) => {\n            const sh = sighash(SIGHASH_GLOBAL_NAMESPACE, ix.name);\n            sighashLayouts.set(bs58__WEBPACK_IMPORTED_MODULE_3___default().encode(sh), {\n                layout: this.ixLayout.get(ix.name),\n                name: ix.name,\n            });\n        });\n        if (idl.state) {\n            idl.state.methods.map((ix) => {\n                const sh = sighash(SIGHASH_STATE_NAMESPACE, ix.name);\n                sighashLayouts.set(bs58__WEBPACK_IMPORTED_MODULE_3___default().encode(sh), {\n                    layout: this.ixLayout.get(ix.name),\n                    name: ix.name,\n                });\n            });\n        }\n        this.sighashLayouts = sighashLayouts;\n    }\n    /**\n     * Encodes a program instruction.\n     */\n    encode(ixName, ix) {\n        return this._encode(SIGHASH_GLOBAL_NAMESPACE, ixName, ix);\n    }\n    /**\n     * Encodes a program state instruction.\n     */\n    encodeState(ixName, ix) {\n        return this._encode(SIGHASH_STATE_NAMESPACE, ixName, ix);\n    }\n    _encode(nameSpace, ixName, ix) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const methodName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(ixName);\n        const layout = this.ixLayout.get(methodName);\n        if (!layout) {\n            throw new Error(`Unknown method: ${methodName}`);\n        }\n        const len = layout.encode(ix, buffer);\n        const data = buffer.slice(0, len);\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([sighash(nameSpace, ixName), data]);\n    }\n    static parseIxLayout(idl) {\n        const stateMethods = idl.state ? idl.state.methods : [];\n        const ixLayouts = stateMethods\n            .map((m) => {\n            let fieldLayouts = m.args.map((arg) => {\n                var _a, _b;\n                return IdlCoder.fieldLayout(arg, Array.from([...((_a = idl.accounts) !== null && _a !== void 0 ? _a : []), ...((_b = idl.types) !== null && _b !== void 0 ? _b : [])]));\n            });\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(m.name);\n            return [name, _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct(fieldLayouts, name)];\n        })\n            .concat(idl.instructions.map((ix) => {\n            let fieldLayouts = ix.args.map((arg) => {\n                var _a, _b;\n                return IdlCoder.fieldLayout(arg, Array.from([...((_a = idl.accounts) !== null && _a !== void 0 ? _a : []), ...((_b = idl.types) !== null && _b !== void 0 ? _b : [])]));\n            });\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(ix.name);\n            return [name, _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct(fieldLayouts, name)];\n        }));\n        return new Map(ixLayouts);\n    }\n    /**\n     * Decodes a program instruction.\n     */\n    decode(ix, encoding = \"hex\") {\n        if (typeof ix === \"string\") {\n            ix = encoding === \"hex\" ? buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(ix, \"hex\") : bs58__WEBPACK_IMPORTED_MODULE_3___default().decode(ix);\n        }\n        let sighash = bs58__WEBPACK_IMPORTED_MODULE_3___default().encode(ix.slice(0, 8));\n        let data = ix.slice(8);\n        const decoder = this.sighashLayouts.get(sighash);\n        if (!decoder) {\n            return null;\n        }\n        return {\n            data: decoder.layout.decode(data),\n            name: decoder.name,\n        };\n    }\n    /**\n     * Returns a formatted table of all the fields in the given instruction data.\n     */\n    format(ix, accountMetas) {\n        return InstructionFormatter.format(ix, accountMetas, this.idl);\n    }\n}\nclass InstructionFormatter {\n    static format(ix, accountMetas, idl) {\n        const idlIx = idl.instructions.filter((i) => ix.name === i.name)[0];\n        if (idlIx === undefined) {\n            console.error(\"Invalid instruction given\");\n            return null;\n        }\n        const args = idlIx.args.map((idlField) => {\n            return {\n                name: idlField.name,\n                type: InstructionFormatter.formatIdlType(idlField.type),\n                data: InstructionFormatter.formatIdlData(idlField, ix.data[idlField.name], idl.types),\n            };\n        });\n        const flatIdlAccounts = InstructionFormatter.flattenIdlAccounts(idlIx.accounts);\n        const accounts = accountMetas.map((meta, idx) => {\n            if (idx < flatIdlAccounts.length) {\n                return {\n                    name: flatIdlAccounts[idx].name,\n                    ...meta,\n                };\n            }\n            // \"Remaining accounts\" are unnamed in Anchor.\n            else {\n                return {\n                    name: undefined,\n                    ...meta,\n                };\n            }\n        });\n        return {\n            args,\n            accounts,\n        };\n    }\n    static formatIdlType(idlType) {\n        if (typeof idlType === \"string\") {\n            return idlType;\n        }\n        if (\"vec\" in idlType) {\n            return `Vec<${this.formatIdlType(idlType.vec)}>`;\n        }\n        if (\"option\" in idlType) {\n            return `Option<${this.formatIdlType(idlType.option)}>`;\n        }\n        if (\"defined\" in idlType) {\n            return idlType.defined;\n        }\n        if (\"array\" in idlType) {\n            return `Array<${idlType.array[0]}; ${idlType.array[1]}>`;\n        }\n        throw new Error(`Unknown IDL type: ${idlType}`);\n    }\n    static formatIdlData(idlField, data, types) {\n        if (typeof idlField.type === \"string\") {\n            return data.toString();\n        }\n        if (idlField.type.hasOwnProperty(\"vec\")) {\n            return (\"[\" +\n                data\n                    .map((d) => this.formatIdlData({ name: \"\", type: idlField.type.vec }, d))\n                    .join(\", \") +\n                \"]\");\n        }\n        if (idlField.type.hasOwnProperty(\"option\")) {\n            return data === null\n                ? \"null\"\n                : this.formatIdlData({ name: \"\", type: idlField.type.option }, data, types);\n        }\n        if (idlField.type.hasOwnProperty(\"defined\")) {\n            if (types === undefined) {\n                throw new Error(\"User defined types not provided\");\n            }\n            const filtered = types.filter((t) => t.name === idlField.type.defined);\n            if (filtered.length !== 1) {\n                throw new Error(`Type not found: ${idlField.type.defined}`);\n            }\n            return InstructionFormatter.formatIdlDataDefined(filtered[0], data, types);\n        }\n        return \"unknown\";\n    }\n    static formatIdlDataDefined(typeDef, data, types) {\n        if (typeDef.type.kind === \"struct\") {\n            const struct = typeDef.type;\n            const fields = Object.keys(data)\n                .map((k) => {\n                const f = struct.fields.filter((f) => f.name === k)[0];\n                if (f === undefined) {\n                    throw new Error(\"Unable to find type\");\n                }\n                return (k + \": \" + InstructionFormatter.formatIdlData(f, data[k], types));\n            })\n                .join(\", \");\n            return \"{ \" + fields + \" }\";\n        }\n        else {\n            if (typeDef.type.variants.length === 0) {\n                return \"{}\";\n            }\n            // Struct enum.\n            if (typeDef.type.variants[0].name) {\n                const variants = typeDef.type.variants;\n                const variant = Object.keys(data)[0];\n                const enumType = data[variant];\n                const namedFields = Object.keys(enumType)\n                    .map((f) => {\n                    var _a;\n                    const fieldData = enumType[f];\n                    const idlField = (_a = variants[variant]) === null || _a === void 0 ? void 0 : _a.filter((v) => v.name === f)[0];\n                    if (idlField === undefined) {\n                        throw new Error(\"Unable to find variant\");\n                    }\n                    return (f +\n                        \": \" +\n                        InstructionFormatter.formatIdlData(idlField, fieldData, types));\n                })\n                    .join(\", \");\n                const variantName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(variant, { pascalCase: true });\n                if (namedFields.length === 0) {\n                    return variantName;\n                }\n                return `${variantName} { ${namedFields} }`;\n            }\n            // Tuple enum.\n            else {\n                // TODO.\n                return \"Tuple formatting not yet implemented\";\n            }\n        }\n    }\n    static flattenIdlAccounts(accounts, prefix) {\n        return accounts\n            .map((account) => {\n            const accName = sentenceCase(account.name);\n            if (account.hasOwnProperty(\"accounts\")) {\n                const newPrefix = prefix ? `${prefix} > ${accName}` : accName;\n                return InstructionFormatter.flattenIdlAccounts(account.accounts, newPrefix);\n            }\n            else {\n                return {\n                    ...account,\n                    name: prefix ? `${prefix} > ${accName}` : accName,\n                };\n            }\n        })\n            .flat();\n    }\n}\nfunction sentenceCase(field) {\n    const result = field.replace(/([A-Z])/g, \" $1\");\n    return result.charAt(0).toUpperCase() + result.slice(1);\n}\n// Not technically sighash, since we don't include the arguments, as Rust\n// doesn't allow function overloading.\nfunction sighash(nameSpace, ixName) {\n    let name = snakeCase(ixName);\n    let preimage = `${nameSpace}:${name}`;\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(preimage)).slice(0, 8);\n}\n\nfunction accountSize(idl, idlAccount) {\n    if (idlAccount.type.kind === \"enum\") {\n        let variantSizes = idlAccount.type.variants.map((variant) => {\n            if (variant.fields === undefined) {\n                return 0;\n            }\n            return variant.fields\n                .map((f) => {\n                if (!(typeof f === \"object\" && \"name\" in f)) {\n                    throw new Error(\"Tuple enum variants not yet implemented.\");\n                }\n                return typeSize(idl, f.type);\n            })\n                .reduce((a, b) => a + b);\n        });\n        return Math.max(...variantSizes) + 1;\n    }\n    if (idlAccount.type.fields === undefined) {\n        return 0;\n    }\n    return idlAccount.type.fields\n        .map((f) => typeSize(idl, f.type))\n        .reduce((a, b) => a + b, 0);\n}\n// Returns the size of the type in bytes. For variable length types, just return\n// 1. Users should override this value in such cases.\nfunction typeSize(idl, ty) {\n    var _a, _b;\n    switch (ty) {\n        case \"bool\":\n            return 1;\n        case \"u8\":\n            return 1;\n        case \"i8\":\n            return 1;\n        case \"i16\":\n            return 2;\n        case \"u16\":\n            return 2;\n        case \"u32\":\n            return 4;\n        case \"i32\":\n            return 4;\n        case \"f32\":\n            return 4;\n        case \"u64\":\n            return 8;\n        case \"i64\":\n            return 8;\n        case \"f64\":\n            return 8;\n        case \"u128\":\n            return 16;\n        case \"i128\":\n            return 16;\n        case \"u256\":\n            return 32;\n        case \"i256\":\n            return 32;\n        case \"bytes\":\n            return 1;\n        case \"string\":\n            return 1;\n        case \"publicKey\":\n            return 32;\n        default:\n            if (\"vec\" in ty) {\n                return 1;\n            }\n            if (\"option\" in ty) {\n                return 1 + typeSize(idl, ty.option);\n            }\n            if (\"coption\" in ty) {\n                return 4 + typeSize(idl, ty.coption);\n            }\n            if (\"defined\" in ty) {\n                const filtered = (_b = (_a = idl.types) === null || _a === void 0 ? void 0 : _a.filter((t) => t.name === ty.defined)) !== null && _b !== void 0 ? _b : [];\n                if (filtered.length !== 1) {\n                    throw new IdlError(`Type not found: ${JSON.stringify(ty)}`);\n                }\n                let typeDef = filtered[0];\n                return accountSize(idl, typeDef);\n            }\n            if (\"array\" in ty) {\n                let arrayTy = ty.array[0];\n                let arraySize = ty.array[1];\n                return typeSize(idl, arrayTy) * arraySize;\n            }\n            throw new Error(`Invalid type ${JSON.stringify(ty)}`);\n    }\n}\n\n/**\n * Number of bytes of the account discriminator.\n */\nconst ACCOUNT_DISCRIMINATOR_SIZE = 8;\n/**\n * Encodes and decodes account objects.\n */\nclass BorshAccountsCoder {\n    constructor(idl) {\n        if (idl.accounts === undefined) {\n            this.accountLayouts = new Map();\n            return;\n        }\n        const layouts = idl.accounts.map((acc) => {\n            return [acc.name, IdlCoder.typeDefLayout(acc, idl.types)];\n        });\n        this.accountLayouts = new Map(layouts);\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        const len = layout.encode(account, buffer);\n        let accountData = buffer.slice(0, len);\n        let discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([discriminator, accountData]);\n    }\n    decode(accountName, data) {\n        // Assert the account discriminator is correct.\n        const discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        if (discriminator.compare(data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeAny(data) {\n        const accountDescriminator = data.slice(0, 8);\n        const accountName = Array.from(this.accountLayouts.keys()).find((key) => BorshAccountsCoder.accountDiscriminator(key).equals(accountDescriminator));\n        if (!accountName) {\n            throw new Error(\"Account descriminator not found\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeUnchecked(accountName, ix) {\n        // Chop off the discriminator before decoding.\n        const data = ix.slice(ACCOUNT_DISCRIMINATOR_SIZE);\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        return layout.decode(data);\n    }\n    memcmp(accountName, appendData) {\n        const discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        return {\n            offset: 0,\n            bytes: bs58__WEBPACK_IMPORTED_MODULE_3___default().encode(appendData ? buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([discriminator, appendData]) : discriminator),\n        };\n    }\n    size(idlAccount) {\n        var _a;\n        return (ACCOUNT_DISCRIMINATOR_SIZE + ((_a = accountSize(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0));\n    }\n    /**\n     * Calculates and returns a unique 8 byte discriminator prepended to all anchor accounts.\n     *\n     * @param name The name of the account to calculate the discriminator.\n     */\n    static accountDiscriminator(name) {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(`account:${camelcase__WEBPACK_IMPORTED_MODULE_5___default()(name, {\n            pascalCase: true,\n            preserveConsecutiveUppercase: true,\n        })}`)).slice(0, ACCOUNT_DISCRIMINATOR_SIZE);\n    }\n}\n\nclass BorshEventCoder {\n    constructor(idl) {\n        if (idl.events === undefined) {\n            this.layouts = new Map();\n            return;\n        }\n        const layouts = idl.events.map((event) => {\n            let eventTypeDef = {\n                name: event.name,\n                type: {\n                    kind: \"struct\",\n                    fields: event.fields.map((f) => {\n                        return { name: f.name, type: f.type };\n                    }),\n                },\n            };\n            return [event.name, IdlCoder.typeDefLayout(eventTypeDef, idl.types)];\n        });\n        this.layouts = new Map(layouts);\n        this.discriminators = new Map(idl.events === undefined\n            ? []\n            : idl.events.map((e) => [\n                base64_js__WEBPACK_IMPORTED_MODULE_4__.fromByteArray(eventDiscriminator(e.name)),\n                e.name,\n            ]));\n    }\n    decode(log) {\n        let logArr;\n        // This will throw if log length is not a multiple of 4.\n        try {\n            logArr = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(base64_js__WEBPACK_IMPORTED_MODULE_4__.toByteArray(log));\n        }\n        catch (e) {\n            return null;\n        }\n        const disc = base64_js__WEBPACK_IMPORTED_MODULE_4__.fromByteArray(logArr.slice(0, 8));\n        // Only deserialize if the discriminator implies a proper event.\n        const eventName = this.discriminators.get(disc);\n        if (eventName === undefined) {\n            return null;\n        }\n        const layout = this.layouts.get(eventName);\n        if (!layout) {\n            throw new Error(`Unknown event: ${eventName}`);\n        }\n        const data = layout.decode(logArr.slice(8));\n        return { data, name: eventName };\n    }\n}\nfunction eventDiscriminator(name) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(`event:${name}`)).slice(0, 8);\n}\n\nclass BorshStateCoder {\n    constructor(idl) {\n        if (idl.state === undefined) {\n            throw new Error(\"Idl state not defined.\");\n        }\n        this.layout = IdlCoder.typeDefLayout(idl.state.struct, idl.types);\n    }\n    async encode(name, account) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const len = this.layout.encode(account, buffer);\n        const disc = await stateDiscriminator(name);\n        const accData = buffer.slice(0, len);\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([disc, accData]);\n    }\n    decode(ix) {\n        // Chop off discriminator.\n        const data = ix.slice(8);\n        return this.layout.decode(data);\n    }\n}\n// Calculates unique 8 byte discriminator prepended to all anchor state accounts.\nasync function stateDiscriminator(name) {\n    let ns = isSet(\"anchor-deprecated-state\") ? \"account\" : \"state\";\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(`${ns}:${name}`)).slice(0, 8);\n}\n\n/**\n * Encodes and decodes user-defined types.\n */\nclass BorshTypesCoder {\n    constructor(idl) {\n        if (idl.types === undefined) {\n            this.typeLayouts = new Map();\n            return;\n        }\n        const layouts = idl.types.map((acc) => {\n            return [acc.name, IdlCoder.typeDefLayout(acc, idl.types)];\n        });\n        this.typeLayouts = new Map(layouts);\n        this.idl = idl;\n    }\n    encode(typeName, type) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.typeLayouts.get(typeName);\n        if (!layout) {\n            throw new Error(`Unknown type: ${typeName}`);\n        }\n        const len = layout.encode(type, buffer);\n        return buffer.slice(0, len);\n    }\n    decode(typeName, typeData) {\n        const layout = this.typeLayouts.get(typeName);\n        if (!layout) {\n            throw new Error(`Unknown type: ${typeName}`);\n        }\n        return layout.decode(typeData);\n    }\n}\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */\nclass BorshCoder {\n    constructor(idl) {\n        this.instruction = new BorshInstructionCoder(idl);\n        this.accounts = new BorshAccountsCoder(idl);\n        this.events = new BorshEventCoder(idl);\n        if (idl.state) {\n            this.state = new BorshStateCoder(idl);\n        }\n        this.types = new BorshTypesCoder(idl);\n    }\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nvar Layout_2 = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob$1 extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/** Factory for {@link OffsetLayout}. */\nvar offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nvar u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nvar u32 = (property => new UInt(4, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nvar nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nvar ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Structure} values. */\nvar struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link Union} values. */\nvar union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link Blob} values. */\nvar blob = ((length, property) => new Blob$1(length, property));\n\nclass SystemInstructionCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_) { }\n    encode(ixName, ix) {\n        switch (camelcase__WEBPACK_IMPORTED_MODULE_5___default()(ixName)) {\n            case \"createAccount\": {\n                return encodeCreateAccount(ix);\n            }\n            case \"assign\": {\n                return encodeAssign(ix);\n            }\n            case \"transfer\": {\n                return encodeTransfer(ix);\n            }\n            case \"createAccountWithSeed\": {\n                return encodeCreateAccountWithSeed(ix);\n            }\n            case \"advanceNonceAccount\": {\n                return encodeAdvanceNonceAccount(ix);\n            }\n            case \"withdrawNonceAccount\": {\n                return encodeWithdrawNonceAccount(ix);\n            }\n            case \"initializeNonceAccount\": {\n                return encodeInitializeNonceAccount(ix);\n            }\n            case \"authorizeNonceAccount\": {\n                return encodeAuthorizeNonceAccount(ix);\n            }\n            case \"allocate\": {\n                return encodeAllocate(ix);\n            }\n            case \"allocateWithSeed\": {\n                return encodeAllocateWithSeed(ix);\n            }\n            case \"assignWithSeed\": {\n                return encodeAssignWithSeed(ix);\n            }\n            case \"transferWithSeed\": {\n                return encodeTransferWithSeed(ix);\n            }\n            default: {\n                throw new Error(`Invalid instruction: ${ixName}`);\n            }\n        }\n    }\n    encodeState(_ixName, _ix) {\n        throw new Error(\"System does not have state\");\n    }\n}\nclass RustStringLayout extends Layout_2 {\n    constructor(property) {\n        super(-1, property);\n        this.property = property;\n        this.layout = struct([\n            u32(\"length\"),\n            u32(\"lengthPadding\"),\n            blob(offset(u32(), -8), \"chars\"),\n        ], this.property);\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span;\n        }\n        const data = {\n            chars: Buffer.from(src, \"utf8\"),\n        };\n        return this.layout.encode(data, b, offset);\n    }\n    decode(b, offset = 0) {\n        const data = this.layout.decode(b, offset);\n        return data[\"chars\"].toString();\n    }\n    getSpan(b, offset = 0) {\n        return (u32().span +\n            u32().span +\n            new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber());\n    }\n}\nfunction rustStringLayout(property) {\n    return new RustStringLayout(property);\n}\nfunction publicKey$2(property) {\n    return blob(32, property);\n}\nfunction encodeCreateAccount({ lamports, space, owner }) {\n    return encodeData({\n        createAccount: { lamports, space, owner: owner.toBuffer() },\n    });\n}\nfunction encodeAssign({ owner }) {\n    return encodeData({\n        assign: { owner: owner.toBuffer() },\n    });\n}\nfunction encodeTransfer({ lamports }) {\n    return encodeData({\n        transfer: { lamports },\n    });\n}\nfunction encodeCreateAccountWithSeed({ base, seed, lamports, space, owner, }) {\n    return encodeData({\n        createAccountWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            lamports,\n            space,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount({ authorized }) {\n    return encodeData({\n        initializeNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeAdvanceNonceAccount({ authorized }) {\n    return encodeData({\n        advanceNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeWithdrawNonceAccount({ lamports }) {\n    return encodeData({\n        withdrawNonceAccount: { lamports },\n    });\n}\nfunction encodeAuthorizeNonceAccount({ authorized }) {\n    return encodeData({\n        authorizeNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeAllocate({ space }) {\n    return encodeData({\n        allocate: { space },\n    });\n}\nfunction encodeAllocateWithSeed({ base, seed, space, owner }) {\n    return encodeData({\n        allocateWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            space,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed({ base, seed, owner }) {\n    return encodeData({\n        assignWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed({ lamports, seed, owner }) {\n    return encodeData({\n        transferWithSeed: {\n            lamports,\n            seed,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = union(u32(\"instruction\"));\nLAYOUT.addVariant(0, struct([\n    ns64(\"lamports\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"createAccount\");\nLAYOUT.addVariant(1, struct([publicKey$2(\"owner\")]), \"assign\");\nLAYOUT.addVariant(2, struct([ns64(\"lamports\")]), \"transfer\");\nLAYOUT.addVariant(3, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    ns64(\"lamports\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, struct([publicKey$2(\"authorized\")]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, struct([ns64(\"lamports\")]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, struct([publicKey$2(\"authorized\")]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, struct([publicKey$2(\"authorized\")]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, struct([ns64(\"space\")]), \"allocate\");\nLAYOUT.addVariant(9, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    publicKey$2(\"owner\"),\n]), \"assignWithSeed\");\nLAYOUT.addVariant(11, struct([\n    ns64(\"lamports\"),\n    rustStringLayout(\"seed\"),\n    publicKey$2(\"owner\"),\n]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n    const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    if (maxSpan === undefined) {\n        return b.slice(0, span);\n    }\n    return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\n\nclass SystemStateCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_idl) { }\n    encode(_name, _account) {\n        throw new Error(\"System does not have state\");\n    }\n    decode(_ix) {\n        throw new Error(\"System does not have state\");\n    }\n}\n\nclass SystemAccountsCoder {\n    constructor(idl) {\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        switch (accountName) {\n            case \"nonce\": {\n                const buffer = Buffer.alloc(_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.NONCE_ACCOUNT_LENGTH);\n                const len = NONCE_ACCOUNT_LAYOUT.encode(account, buffer);\n                return buffer.slice(0, len);\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    decode(accountName, ix) {\n        return this.decodeUnchecked(accountName, ix);\n    }\n    decodeUnchecked(accountName, ix) {\n        switch (accountName) {\n            case \"nonce\": {\n                return decodeNonceAccount(ix);\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    // TODO: this won't use the appendData.\n    memcmp(accountName, _appendData) {\n        switch (accountName) {\n            case \"nonce\": {\n                return {\n                    dataSize: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.NONCE_ACCOUNT_LENGTH,\n                };\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    size(idlAccount) {\n        var _a;\n        return (_a = accountSize(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0;\n    }\n}\nfunction decodeNonceAccount(ix) {\n    return NONCE_ACCOUNT_LAYOUT.decode(ix);\n}\nclass WrappedLayout$1 extends Layout_2 {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey$1(property) {\n    return new WrappedLayout$1(blob(32), (b) => new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(b), (key) => key.toBuffer(), property);\n}\nconst NONCE_ACCOUNT_LAYOUT = struct([\n    u32(\"version\"),\n    u32(\"state\"),\n    publicKey$1(\"authorizedPubkey\"),\n    publicKey$1(\"nonce\"),\n    struct([nu64(\"lamportsPerSignature\")], \"feeCalculator\"),\n]);\n\nclass SystemEventsCoder {\n    constructor(_idl) { }\n    decode(_log) {\n        throw new Error(\"System program does not have events\");\n    }\n}\n\nclass SystemTypesCoder {\n    constructor(_idl) { }\n    encode(_name, _type) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n    decode(_name, _typeData) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n}\n\n/**\n * Coder for the System program.\n */\nclass SystemCoder {\n    constructor(idl) {\n        this.instruction = new SystemInstructionCoder(idl);\n        this.accounts = new SystemAccountsCoder(idl);\n        this.events = new SystemEventsCoder(idl);\n        this.state = new SystemStateCoder(idl);\n        this.types = new SystemTypesCoder(idl);\n    }\n}\n\nfunction hash(data) {\n    return (0,js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(data);\n}\n\nvar sha256 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hash: hash\n});\n\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n    const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n        fromPublicKey.toBuffer(),\n        buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(seed),\n        programId.toBuffer(),\n    ]);\n    const hash = js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256.digest(buffer);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(hash));\n}\n// Sync version of web3.PublicKey.createProgramAddress.\nfunction createProgramAddressSync(seeds, programId) {\n    const MAX_SEED_LENGTH = 32;\n    let buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n        if (seed.length > MAX_SEED_LENGTH) {\n            throw new TypeError(`Max seed length exceeded`);\n        }\n        buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n        buffer,\n        programId.toBuffer(),\n        buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(\"ProgramDerivedAddress\"),\n    ]);\n    let hash = (0,js_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(new Uint8Array(buffer));\n    let publicKeyBytes = new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(hash, 16).toArray(undefined, 32);\n    if (_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.isOnCurve(new Uint8Array(publicKeyBytes))) {\n        throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(publicKeyBytes);\n}\n// Sync version of web3.PublicKey.findProgramAddress.\nfunction findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n        try {\n            const seedsWithNonce = seeds.concat(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([nonce]));\n            address = createProgramAddressSync(seedsWithNonce, programId);\n        }\n        catch (err) {\n            if (err instanceof TypeError) {\n                throw err;\n            }\n            nonce--;\n            continue;\n        }\n        return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n}\nconst toBuffer = (arr) => {\n    if (arr instanceof buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer) {\n        return arr;\n    }\n    else if (arr instanceof Uint8Array) {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n    }\n    else {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(arr);\n    }\n};\nasync function associated(programId, ...args) {\n    let seeds = [buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([97, 110, 99, 104, 111, 114])]; // b\"anchor\".\n    args.forEach((arg) => {\n        seeds.push(arg instanceof buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer ? arg : translateAddress(arg).toBuffer());\n    });\n    const [assoc] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddress(seeds, translateAddress(programId));\n    return assoc;\n}\n\nvar pubkey = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createWithSeedSync: createWithSeedSync,\n    createProgramAddressSync: createProgramAddressSync,\n    findProgramAddressSync: findProgramAddressSync,\n    associated: associated\n});\n\nconst TOKEN_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");\nconst ASSOCIATED_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\nasync function associatedAddress({ mint, owner, }) {\n    return (await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddress([owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()], ASSOCIATED_PROGRAM_ID))[0];\n}\n\nvar token = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    TOKEN_PROGRAM_ID: TOKEN_PROGRAM_ID,\n    ASSOCIATED_PROGRAM_ID: ASSOCIATED_PROGRAM_ID,\n    associatedAddress: associatedAddress\n});\n\nvar browserPonyfill = {exports: {}};\n\n(function (module, exports) {\nvar global = typeof self !== 'undefined' ? self : commonjsGlobal;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException;\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\n((function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}))({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers;\nexports.Request = ctx.Request;\nexports.Response = ctx.Response;\nmodule.exports = exports;\n}(browserPonyfill, browserPonyfill.exports));\n\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\n/**\n * Returns a verified build from the anchor registry. null if no such\n * verified build exists, e.g., if the program has been upgraded since the\n * last verified build.\n */\nasync function verifiedBuild(connection, programId, limit = 5) {\n    const url = `https://api.apr.dev/api/v0/program/${programId.toString()}/latest?limit=${limit}`;\n    const [programData, latestBuildsResp] = await Promise.all([\n        fetchData(connection, programId),\n        fetch(url),\n    ]);\n    // Filter out all non successful builds.\n    const latestBuilds = (await latestBuildsResp.json()).filter((b) => !b.aborted && b.state === \"Built\" && b.verified === \"Verified\");\n    if (latestBuilds.length === 0) {\n        return null;\n    }\n    // Get the latest build.\n    const build = latestBuilds[0];\n    // Has the program been upgraded since the last build?\n    if (programData.slot.toNumber() !== build.verified_slot) {\n        return null;\n    }\n    // Success.\n    return build;\n}\n/**\n * Returns the program data account for this program, containing the\n * metadata for this program, e.g., the upgrade authority.\n */\nasync function fetchData(connection, programId) {\n    const accountInfo = await connection.getAccountInfo(programId);\n    if (accountInfo === null) {\n        throw new Error(\"program account not found\");\n    }\n    const { program } = decodeUpgradeableLoaderState(accountInfo.data);\n    const programdataAccountInfo = await connection.getAccountInfo(program.programdataAddress);\n    if (programdataAccountInfo === null) {\n        throw new Error(\"program data account not found\");\n    }\n    const { programData } = decodeUpgradeableLoaderState(programdataAccountInfo.data);\n    return programData;\n}\nconst UPGRADEABLE_LOADER_STATE_LAYOUT = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.rustEnum([\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct([], \"uninitialized\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct([_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.option(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.publicKey(), \"authorityAddress\")], \"buffer\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct([_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.publicKey(\"programdataAddress\")], \"program\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u64(\"slot\"),\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.option(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.publicKey(), \"upgradeAuthorityAddress\"),\n    ], \"programData\"),\n], undefined, _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.u32());\nfunction decodeUpgradeableLoaderState(data) {\n    return UPGRADEABLE_LOADER_STATE_LAYOUT.decode(data);\n}\n\nvar registry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    verifiedBuild: verifiedBuild,\n    fetchData: fetchData,\n    decodeUpgradeableLoaderState: decodeUpgradeableLoaderState\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    sha256: sha256,\n    rpc: rpc,\n    publicKey: pubkey,\n    bytes: index$1,\n    token: token,\n    features: features,\n    registry: registry\n});\n\nfunction isIdlAccounts(accountItem) {\n    return \"accounts\" in accountItem;\n}\n// Deterministic IDL address as a function of the program id.\nasync function idlAddress(programId) {\n    const base = (await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddress([], programId))[0];\n    return await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nfunction seed() {\n    return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.struct([\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.publicKey(\"authority\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_7__.vecU8(\"data\"),\n]);\nfunction decodeIdlAccount(data) {\n    return IDL_ACCOUNT_LAYOUT.decode(data);\n}\n\nfunction splitArgsAndCtx(idlIx, args) {\n    var _a, _b;\n    let options = {};\n    const inputLen = idlIx.args ? idlIx.args.length : 0;\n    if (args.length > inputLen) {\n        if (args.length !== inputLen + 1) {\n            throw new Error(`provided too many arguments ${args} to instruction ${idlIx === null || idlIx === void 0 ? void 0 : idlIx.name} expecting: ${(_b = (_a = idlIx.args) === null || _a === void 0 ? void 0 : _a.map((a) => a.name)) !== null && _b !== void 0 ? _b : []}`);\n        }\n        options = args.pop();\n    }\n    return [args, options];\n}\n\nclass InstructionNamespaceFactory {\n    static build(idlIx, encodeFn, programId) {\n        if (idlIx.name === \"_inner\") {\n            throw new IdlError(\"the _inner name is reserved\");\n        }\n        const ix = (...args) => {\n            const [ixArgs, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            validateAccounts(idlIx.accounts, ctx.accounts);\n            validateInstruction(idlIx, ...args);\n            const keys = ix.accounts(ctx.accounts);\n            if (ctx.remainingAccounts !== undefined) {\n                keys.push(...ctx.remainingAccounts);\n            }\n            if (isSet(\"debug-logs\")) {\n                console.log(\"Outgoing account metas:\", keys);\n            }\n            return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({\n                keys,\n                programId,\n                data: encodeFn(idlIx.name, toInstruction(idlIx, ...ixArgs)),\n            });\n        };\n        // Utility fn for ordering the accounts for this instruction.\n        ix[\"accounts\"] = (accs) => {\n            return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts, programId, idlIx.name);\n        };\n        return ix;\n    }\n    static accountsArray(ctx, accounts, programId, ixName) {\n        if (!ctx) {\n            return [];\n        }\n        return accounts\n            .map((acc) => {\n            // Nested accounts.\n            const nestedAccounts = \"accounts\" in acc ? acc.accounts : undefined;\n            if (nestedAccounts !== undefined) {\n                const rpcAccs = ctx[acc.name];\n                return InstructionNamespaceFactory.accountsArray(rpcAccs, acc.accounts, programId, ixName).flat();\n            }\n            else {\n                const account = acc;\n                let pubkey;\n                try {\n                    pubkey = translateAddress(ctx[acc.name]);\n                }\n                catch (err) {\n                    throw new Error(`Wrong input type for account \"${acc.name}\" in the instruction accounts object${ixName !== undefined ? ' for instruction \"' + ixName + '\"' : \"\"}. Expected PublicKey or string.`);\n                }\n                const optional = account.isOptional && pubkey.equals(programId);\n                const isWritable = account.isMut && !optional;\n                const isSigner = account.isSigner && !optional;\n                return {\n                    pubkey,\n                    isWritable,\n                    isSigner,\n                };\n            }\n        })\n            .flat();\n    }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n    // todo\n}\n\nclass RpcFactory {\n    static build(idlIx, txFn, idlErrors, provider) {\n        const rpc = async (...args) => {\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            if (provider.sendAndConfirm === undefined) {\n                throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n            }\n            try {\n                return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n            }\n            catch (err) {\n                throw translateError(err, idlErrors);\n            }\n        };\n        return rpc;\n    }\n}\n\nclass TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args) => {\n            var _a, _b, _c;\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            const tx = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n            if (ctx.preInstructions && ctx.instructions) {\n                throw new Error(\"instructions is deprecated, use preInstructions\");\n            }\n            (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach((ix) => tx.add(ix));\n            (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach((ix) => tx.add(ix));\n            tx.add(ixFn(...args));\n            (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach((ix) => tx.add(ix));\n            return tx;\n        };\n        return txFn;\n    }\n}\n\nclass StateFactory {\n    static build(idl, coder, programId, provider) {\n        if (idl.state === undefined) {\n            return undefined;\n        }\n        return new StateClient(idl, programId, provider, coder);\n    }\n}\n/**\n * A client for the program state. Similar to the base [[Program]] client,\n * one can use this to send transactions and read accounts for the state\n * abstraction.\n */\nclass StateClient {\n    /**\n     * Returns the program ID owning the state.\n     */\n    get programId() {\n        return this._programId;\n    }\n    constructor(idl, programId, \n    /**\n     * Returns the client's wallet and network provider.\n     */\n    provider = getProvider(), \n    /**\n     * Returns the coder.\n     */\n    coder = new BorshCoder(idl)) {\n        this.provider = provider;\n        this.coder = coder;\n        this._idl = idl;\n        this._programId = programId;\n        this._address = programStateAddress(programId);\n        this._sub = null;\n        // Build namespaces.\n        const [instruction, transaction, rpc] = (() => {\n            var _a;\n            let instruction = {};\n            let transaction = {};\n            let rpc = {};\n            (_a = idl.state) === null || _a === void 0 ? void 0 : _a.methods.forEach((m) => {\n                // Build instruction method.\n                const ixItem = InstructionNamespaceFactory.build(m, (ixName, ix) => coder.instruction.encodeState(ixName, ix), programId);\n                ixItem[\"accounts\"] = (accounts) => {\n                    const keys = stateInstructionKeys(programId, provider, m, accounts);\n                    return keys.concat(InstructionNamespaceFactory.accountsArray(accounts, m.accounts, programId, m.name));\n                };\n                // Build transaction method.\n                const txItem = TransactionFactory.build(m, ixItem);\n                // Build RPC method.\n                const rpcItem = RpcFactory.build(m, txItem, parseIdlErrors(idl), provider);\n                // Attach them all to their respective namespaces.\n                const name = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(m.name);\n                instruction[name] = ixItem;\n                transaction[name] = txItem;\n                rpc[name] = rpcItem;\n            });\n            return [\n                instruction,\n                transaction,\n                rpc,\n            ];\n        })();\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.rpc = rpc;\n    }\n    /**\n     * Returns the deserialized state account.\n     */\n    async fetch() {\n        const addr = this.address();\n        const accountInfo = await this.provider.connection.getAccountInfo(addr);\n        if (accountInfo === null) {\n            throw new Error(`Account does not exist ${addr.toString()}`);\n        }\n        // Assert the account discriminator is correct.\n        const state = this._idl.state;\n        if (!state) {\n            throw new Error(\"State is not specified in IDL.\");\n        }\n        const expectedDiscriminator = await stateDiscriminator(state.struct.name);\n        if (expectedDiscriminator.compare(accountInfo.data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.coder.state.decode(accountInfo.data);\n    }\n    /**\n     * Returns the state address.\n     */\n    address() {\n        return this._address;\n    }\n    /**\n     * Returns an `EventEmitter` with a `\"change\"` event that's fired whenever\n     * the state account cahnges.\n     */\n    subscribe(commitment) {\n        if (this._sub !== null) {\n            return this._sub.ee;\n        }\n        const ee = new (eventemitter3__WEBPACK_IMPORTED_MODULE_9___default())();\n        const listener = this.provider.connection.onAccountChange(this.address(), (acc) => {\n            const account = this.coder.state.decode(acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        this._sub = {\n            ee,\n            listener,\n        };\n        return ee;\n    }\n    /**\n     * Unsubscribes to state changes.\n     */\n    unsubscribe() {\n        if (this._sub !== null) {\n            this.provider.connection\n                .removeAccountChangeListener(this._sub.listener)\n                .then(async () => {\n                this._sub = null;\n            })\n                .catch(console.error);\n        }\n    }\n}\n// Calculates the deterministic address of the program's \"state\" account.\nfunction programStateAddress(programId) {\n    let [registrySigner] = findProgramAddressSync([], programId);\n    return createWithSeedSync(registrySigner, \"unversioned\", programId);\n}\n// Returns the common keys that are prepended to all instructions targeting\n// the \"state\" of a program.\nfunction stateInstructionKeys(programId, provider, m, accounts) {\n    if (m.name === \"new\") {\n        // Ctor `new` method.\n        const [programSigner] = findProgramAddressSync([], programId);\n        // @ts-expect-error\n        if (provider.wallet === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'wallet' field.\");\n        }\n        return [\n            {\n                // @ts-expect-error\n                pubkey: provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n            },\n            {\n                pubkey: programStateAddress(programId),\n                isWritable: true,\n                isSigner: false,\n            },\n            { pubkey: programSigner, isWritable: false, isSigner: false },\n            {\n                pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.programId,\n                isWritable: false,\n                isSigner: false,\n            },\n            { pubkey: programId, isWritable: false, isSigner: false },\n        ];\n    }\n    else {\n        validateAccounts(m.accounts, accounts);\n        return [\n            {\n                pubkey: programStateAddress(programId),\n                isWritable: true,\n                isSigner: false,\n            },\n        ];\n    }\n}\n\nclass AccountFactory {\n    static build(idl, coder, programId, provider) {\n        var _a;\n        const accountFns = {};\n        (_a = idl.accounts) === null || _a === void 0 ? void 0 : _a.forEach((idlAccount) => {\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(idlAccount.name);\n            accountFns[name] = new AccountClient(idl, idlAccount, programId, provider, coder);\n        });\n        return accountFns;\n    }\n}\nclass AccountClient {\n    /**\n     * Returns the number of bytes in this account.\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * Returns the program ID owning all accounts.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */\n    get coder() {\n        return this._coder;\n    }\n    constructor(idl, idlAccount, programId, provider, coder) {\n        this._idlAccount = idlAccount;\n        this._programId = programId;\n        this._provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(idl);\n        this._size = this._coder.accounts.size(idlAccount);\n    }\n    /**\n     * Returns a deserialized account, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchNullable(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchNullableAndContext(address, commitment) {\n        const accountInfo = await this.getAccountInfoAndContext(address, commitment);\n        const { value, context } = accountInfo;\n        return {\n            data: value && value.data.length !== 0\n                ? this._coder.accounts.decode(this._idlAccount.name, value.data)\n                : null,\n            context,\n        };\n    }\n    /**\n     * Returns a deserialized account.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetch(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist or has no data ${address.toString()}`);\n        }\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchAndContext(address, commitment) {\n        const { data, context } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist ${address.toString()}`);\n        }\n        return { data, context };\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */\n    async fetchMultiple(addresses, commitment) {\n        const accounts = await this.fetchMultipleAndContext(addresses, commitment);\n        return accounts.map((account) => (account ? account.data : null));\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */\n    async fetchMultipleAndContext(addresses, commitment) {\n        const accounts = await getMultipleAccountsAndContext(this._provider.connection, addresses.map((address) => translateAddress(address)), commitment);\n        // Decode accounts where discriminator is correct, null otherwise\n        return accounts.map((result) => {\n            if (result == null) {\n                return null;\n            }\n            const { account, context } = result;\n            return {\n                data: this._coder.accounts.decode(this._idlAccount.name, account.data),\n                context,\n            };\n        });\n    }\n    /**\n     * Returns all instances of this account type for the program.\n     *\n     * @param filters User-provided filters to narrow the results from `connection.getProgramAccounts`.\n     *\n     *                When filters are not defined this method returns all\n     *                the account instances.\n     *\n     *                When filters are of type `Buffer`, the filters are appended\n     *                after the discriminator.\n     *\n     *                When filters are of type `GetProgramAccountsFilter[]`,\n     *                filters are appended after the discriminator filter.\n     */\n    async all(filters) {\n        const filter = this.coder.accounts.memcmp(this._idlAccount.name, filters instanceof Buffer ? filters : undefined);\n        const coderFilters = [];\n        if ((filter === null || filter === void 0 ? void 0 : filter.offset) != undefined && (filter === null || filter === void 0 ? void 0 : filter.bytes) != undefined) {\n            coderFilters.push({\n                memcmp: { offset: filter.offset, bytes: filter.bytes },\n            });\n        }\n        if ((filter === null || filter === void 0 ? void 0 : filter.dataSize) != undefined) {\n            coderFilters.push({ dataSize: filter.dataSize });\n        }\n        let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n            commitment: this._provider.connection.commitment,\n            filters: [...coderFilters, ...(Array.isArray(filters) ? filters : [])],\n        });\n        return resp.map(({ pubkey, account }) => {\n            return {\n                publicKey: pubkey,\n                account: this._coder.accounts.decode(this._idlAccount.name, account.data),\n            };\n        });\n    }\n    /**\n     * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n     * changes.\n     */\n    subscribe(address, commitment) {\n        const sub = subscriptions.get(address.toString());\n        if (sub) {\n            return sub.ee;\n        }\n        const ee = new (eventemitter3__WEBPACK_IMPORTED_MODULE_9___default())();\n        address = translateAddress(address);\n        const listener = this._provider.connection.onAccountChange(address, (acc) => {\n            const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        subscriptions.set(address.toString(), {\n            ee,\n            listener,\n        });\n        return ee;\n    }\n    /**\n     * Unsubscribes from the account at the given address.\n     */\n    async unsubscribe(address) {\n        let sub = subscriptions.get(address.toString());\n        if (!sub) {\n            console.warn(\"Address is not subscribed\");\n            return;\n        }\n        if (subscriptions) {\n            await this._provider.connection\n                .removeAccountChangeListener(sub.listener)\n                .then(() => {\n                subscriptions.delete(address.toString());\n            })\n                .catch(console.error);\n        }\n    }\n    /**\n     * Returns an instruction for creating this account.\n     */\n    async createInstruction(signer, sizeOverride) {\n        const size = this.size;\n        if (this._provider.publicKey === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'publicKey' field.\");\n        }\n        return _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.createAccount({\n            fromPubkey: this._provider.publicKey,\n            newAccountPubkey: signer.publicKey,\n            space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n            lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n            programId: this._programId,\n        });\n    }\n    /**\n     * @deprecated since version 14.0.\n     *\n     * Function returning the associated account. Args are keys to associate.\n     * Order matters.\n     */\n    async associated(...args) {\n        const addr = await this.associatedAddress(...args);\n        return await this.fetch(addr);\n    }\n    /**\n     * @deprecated since version 14.0.\n     *\n     * Function returning the associated address. Args are keys to associate.\n     * Order matters.\n     */\n    async associatedAddress(...args) {\n        return await associated(this._programId, ...args);\n    }\n    async getAccountInfo(address, commitment) {\n        return await this._provider.connection.getAccountInfo(translateAddress(address), commitment);\n    }\n    async getAccountInfoAndContext(address, commitment) {\n        return await this._provider.connection.getAccountInfoAndContext(translateAddress(address), commitment);\n    }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map();\n\nconst PROGRAM_LOG = \"Program log: \";\nconst PROGRAM_DATA = \"Program data: \";\nconst PROGRAM_LOG_START_INDEX = PROGRAM_LOG.length;\nconst PROGRAM_DATA_START_INDEX = PROGRAM_DATA.length;\nclass EventManager {\n    constructor(programId, provider, coder) {\n        this._programId = programId;\n        this._provider = provider;\n        this._eventParser = new EventParser(programId, coder);\n        this._eventCallbacks = new Map();\n        this._eventListeners = new Map();\n        this._listenerIdCount = 0;\n    }\n    addEventListener(eventName, callback) {\n        var _a;\n        let listener = this._listenerIdCount;\n        this._listenerIdCount += 1;\n        // Store the listener into the event map.\n        if (!this._eventListeners.has(eventName)) {\n            this._eventListeners.set(eventName, []);\n        }\n        this._eventListeners.set(eventName, ((_a = this._eventListeners.get(eventName)) !== null && _a !== void 0 ? _a : []).concat(listener));\n        // Store the callback into the listener map.\n        this._eventCallbacks.set(listener, [eventName, callback]);\n        // Create the subscription singleton, if needed.\n        if (this._onLogsSubscriptionId !== undefined) {\n            return listener;\n        }\n        this._onLogsSubscriptionId = this._provider.connection.onLogs(this._programId, (logs, ctx) => {\n            if (logs.err) {\n                return;\n            }\n            for (const event of this._eventParser.parseLogs(logs.logs)) {\n                const allListeners = this._eventListeners.get(event.name);\n                if (allListeners) {\n                    allListeners.forEach((listener) => {\n                        const listenerCb = this._eventCallbacks.get(listener);\n                        if (listenerCb) {\n                            const [, callback] = listenerCb;\n                            callback(event.data, ctx.slot, logs.signature);\n                        }\n                    });\n                }\n            }\n        });\n        return listener;\n    }\n    async removeEventListener(listener) {\n        // Get the callback.\n        const callback = this._eventCallbacks.get(listener);\n        if (!callback) {\n            throw new Error(`Event listener ${listener} doesn't exist!`);\n        }\n        const [eventName] = callback;\n        // Get the listeners.\n        let listeners = this._eventListeners.get(eventName);\n        if (!listeners) {\n            throw new Error(`Event listeners don't exist for ${eventName}!`);\n        }\n        // Update both maps.\n        this._eventCallbacks.delete(listener);\n        listeners = listeners.filter((l) => l !== listener);\n        this._eventListeners.set(eventName, listeners);\n        if (listeners.length === 0) {\n            this._eventListeners.delete(eventName);\n        }\n        // Kill the websocket connection if all listeners have been removed.\n        if (this._eventCallbacks.size == 0) {\n            assert__WEBPACK_IMPORTED_MODULE_10__.ok(this._eventListeners.size === 0);\n            if (this._onLogsSubscriptionId !== undefined) {\n                await this._provider.connection.removeOnLogsListener(this._onLogsSubscriptionId);\n                this._onLogsSubscriptionId = undefined;\n            }\n        }\n    }\n}\nclass EventParser {\n    constructor(programId, coder) {\n        this.coder = coder;\n        this.programId = programId;\n    }\n    // Each log given, represents an array of messages emitted by\n    // a single transaction, which can execute many different programs across\n    // CPI boundaries. However, the subscription is only interested in the\n    // events emitted by *this* program. In achieving this, we keep track of the\n    // program execution context by parsing each log and looking for a CPI\n    // `invoke` call. If one exists, we know a new program is executing. So we\n    // push the programId onto a stack and switch the program context. This\n    // allows us to track, for a given log, which program was executing during\n    // its emission, thereby allowing us to know if a given log event was\n    // emitted by *this* program. If it was, then we parse the raw string and\n    // emit the event if the string matches the event being subscribed to.\n    *parseLogs(logs, errorOnDecodeFailure = false) {\n        const logScanner = new LogScanner(logs);\n        const execution = new ExecutionContext();\n        let log = logScanner.next();\n        while (log !== null) {\n            let [event, newProgram, didPop] = this.handleLog(execution, log, errorOnDecodeFailure);\n            if (event) {\n                yield event;\n            }\n            if (newProgram) {\n                execution.push(newProgram);\n            }\n            if (didPop) {\n                execution.pop();\n            }\n            log = logScanner.next();\n        }\n    }\n    // Main log handler. Returns a three element array of the event, the\n    // next program that was invoked for CPI, and a boolean indicating if\n    // a program has completed execution (and thus should be popped off the\n    // execution stack).\n    handleLog(execution, log, errorOnDecodeFailure) {\n        // Executing program is this program.\n        if (execution.stack.length > 0 &&\n            execution.program() === this.programId.toString()) {\n            return this.handleProgramLog(log, errorOnDecodeFailure);\n        }\n        // Executing program is not this program.\n        else {\n            return [null, ...this.handleSystemLog(log)];\n        }\n    }\n    // Handles logs from *this* program.\n    handleProgramLog(log, errorOnDecodeFailure) {\n        // This is a `msg!` log or a `sol_log_data` log.\n        if (log.startsWith(PROGRAM_LOG) || log.startsWith(PROGRAM_DATA)) {\n            const logStr = log.startsWith(PROGRAM_LOG)\n                ? log.slice(PROGRAM_LOG_START_INDEX)\n                : log.slice(PROGRAM_DATA_START_INDEX);\n            const event = this.coder.events.decode(logStr);\n            if (errorOnDecodeFailure && event === null) {\n                throw new Error(`Unable to decode event ${logStr}`);\n            }\n            return [event, null, false];\n        }\n        // System log.\n        else {\n            return [null, ...this.handleSystemLog(log)];\n        }\n    }\n    // Handles logs when the current program being executing is *not* this.\n    handleSystemLog(log) {\n        // System component.\n        const logStart = log.split(\":\")[0];\n        // Did the program finish executing?\n        if (logStart.match(/^Program (.*) success/g) !== null) {\n            return [null, true];\n            // Recursive call.\n        }\n        else if (logStart.startsWith(`Program ${this.programId.toString()} invoke`)) {\n            return [this.programId.toString(), false];\n        }\n        // CPI call.\n        else if (logStart.includes(\"invoke\")) {\n            return [\"cpi\", false]; // Any string will do.\n        }\n        else {\n            return [null, false];\n        }\n    }\n}\n// Stack frame execution context, allowing one to track what program is\n// executing for a given log.\nclass ExecutionContext {\n    constructor() {\n        this.stack = [];\n    }\n    program() {\n        assert__WEBPACK_IMPORTED_MODULE_10__.ok(this.stack.length > 0);\n        return this.stack[this.stack.length - 1];\n    }\n    push(newProgram) {\n        this.stack.push(newProgram);\n    }\n    pop() {\n        assert__WEBPACK_IMPORTED_MODULE_10__.ok(this.stack.length > 0);\n        this.stack.pop();\n    }\n}\nclass LogScanner {\n    constructor(logs) {\n        this.logs = logs;\n    }\n    next() {\n        if (this.logs.length === 0) {\n            return null;\n        }\n        let l = this.logs[0];\n        this.logs = this.logs.slice(1);\n        return l;\n    }\n}\n\nclass SimulateFactory {\n    static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n        const simulate = async (...args) => {\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            let resp = undefined;\n            if (provider.simulate === undefined) {\n                throw new Error(\"This function requires 'Provider.simulate' to be implemented.\");\n            }\n            try {\n                resp = await provider.simulate(tx, ctx.signers, (_a = ctx.options) === null || _a === void 0 ? void 0 : _a.commitment);\n            }\n            catch (err) {\n                throw translateError(err, idlErrors);\n            }\n            if (resp === undefined) {\n                throw new Error(\"Unable to simulate transaction\");\n            }\n            const logs = resp.logs;\n            if (!logs) {\n                throw new Error(\"Simulated logs not found\");\n            }\n            const events = [];\n            if (idl.events) {\n                let parser = new EventParser(programId, coder);\n                for (const event of parser.parseLogs(logs)) {\n                    events.push(event);\n                }\n            }\n            return { events, raw: logs };\n        };\n        return simulate;\n    }\n}\n\nfunction uint64(property) {\n    return new WrappedLayout(blob(8), (b) => u64.fromBuffer(b), (n) => n.toBuffer(), property);\n}\nfunction publicKey(property) {\n    return new WrappedLayout(blob(32), (b) => new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(b), (key) => key.toBuffer(), property);\n}\nfunction coption(layout, property) {\n    return new COptionLayout(layout, property);\n}\nclass WrappedLayout extends Layout_2 {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nclass COptionLayout extends Layout_2 {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = u32();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span + this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 4) + 4;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 4);\n        }\n        throw new Error(\"Invalid coption \" + this.layout.property);\n    }\n    getSpan(b, offset = 0) {\n        return this.layout.getSpan(b, offset + 4) + 4;\n    }\n}\nclass u64 extends (bn_js__WEBPACK_IMPORTED_MODULE_2___default()) {\n    /**\n     * Convert to Buffer representation\n     */\n    toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 8) {\n            return b;\n        }\n        if (b.length >= 8) {\n            throw new Error(\"u64 too large\");\n        }\n        const zeroPad = Buffer.alloc(8);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */\n    static fromBuffer(buffer) {\n        if (buffer.length !== 8) {\n            throw new Error(`Invalid buffer length: ${buffer.length}`);\n        }\n        return new u64([...buffer]\n            .reverse()\n            .map((i) => `00${i.toString(16)}`.slice(-2))\n            .join(\"\"), 16);\n    }\n}\nconst TOKEN_ACCOUNT_LAYOUT = struct([\n    publicKey(\"mint\"),\n    publicKey(\"owner\"),\n    uint64(\"amount\"),\n    coption(publicKey(), \"delegate\"),\n    ((p) => {\n        const U = union(u8(\"discriminator\"), null, p);\n        U.addVariant(0, struct([]), \"uninitialized\");\n        U.addVariant(1, struct([]), \"initialized\");\n        U.addVariant(2, struct([]), \"frozen\");\n        return U;\n    })(\"state\"),\n    coption(uint64(), \"isNative\"),\n    uint64(\"delegatedAmount\"),\n    coption(publicKey(), \"closeAuthority\"),\n]);\nfunction decodeTokenAccount(b) {\n    return TOKEN_ACCOUNT_LAYOUT.decode(b);\n}\n\n// Populates a given accounts context with PDAs and common missing accounts.\nclass AccountsResolver {\n    constructor(_args, _accounts, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver) {\n        this._accounts = _accounts;\n        this._provider = _provider;\n        this._programId = _programId;\n        this._idlIx = _idlIx;\n        this._idlTypes = _idlTypes;\n        this._customResolver = _customResolver;\n        this._args = _args;\n        this._accountStore = new AccountStore(_provider, _accountNamespace, this._programId);\n    }\n    args(_args) {\n        this._args = _args;\n    }\n    // Note: We serially resolve PDAs one by one rather than doing them\n    //       in parallel because there can be dependencies between\n    //       addresses. That is, one PDA can be used as a seed in another.\n    async resolve() {\n        await this.resolveConst(this._idlIx.accounts);\n        // Auto populate pdas and relations until we stop finding new accounts\n        while ((await this.resolvePdas(this._idlIx.accounts)) +\n            (await this.resolveRelations(this._idlIx.accounts)) +\n            (await this.resolveCustom()) >\n            0) { }\n    }\n    async resolveCustom() {\n        if (this._customResolver) {\n            const { accounts, resolved } = await this._customResolver({\n                args: this._args,\n                accounts: this._accounts,\n                provider: this._provider,\n                programId: this._programId,\n                idlIx: this._idlIx,\n            });\n            this._accounts = accounts;\n            return resolved;\n        }\n        return 0;\n    }\n    resolveOptionalsHelper(partialAccounts, accountItems) {\n        const nestedAccountsGeneric = {};\n        // Looping through accountItem array instead of on partialAccounts, so\n        // we only traverse array once\n        for (const accountItem of accountItems) {\n            const accountName = accountItem.name;\n            const partialAccount = partialAccounts[accountName];\n            // Skip if the account isn't included (thus would be undefined)\n            if (partialAccount === undefined)\n                continue;\n            if (isPartialAccounts(partialAccount)) {\n                // is compound accounts, recurse one level deeper\n                if (isIdlAccounts(accountItem)) {\n                    nestedAccountsGeneric[accountName] = this.resolveOptionalsHelper(partialAccount, accountItem[\"accounts\"]);\n                }\n                else {\n                    // Here we try our best to recover gracefully. If there are optionals we can't check, we will fail then.\n                    nestedAccountsGeneric[accountName] = flattenPartialAccounts(partialAccount, true);\n                }\n            }\n            else {\n                // if not compound accounts, do null/optional check and proceed\n                if (partialAccount !== null) {\n                    nestedAccountsGeneric[accountName] = translateAddress(partialAccount);\n                }\n                else if (accountItem[\"isOptional\"]) {\n                    nestedAccountsGeneric[accountName] = this._programId;\n                }\n            }\n        }\n        return nestedAccountsGeneric;\n    }\n    resolveOptionals(accounts) {\n        Object.assign(this._accounts, this.resolveOptionalsHelper(accounts, this._idlIx.accounts));\n    }\n    get(path) {\n        // Only return if pubkey\n        const ret = path.reduce((acc, subPath) => acc && acc[subPath], this._accounts);\n        if (ret && ret.toBase58) {\n            return ret;\n        }\n    }\n    set(path, value) {\n        let curr = this._accounts;\n        path.forEach((p, idx) => {\n            const isLast = idx == path.length - 1;\n            if (isLast) {\n                curr[p] = value;\n            }\n            curr[p] = curr[p] || {};\n            curr = curr[p];\n        });\n    }\n    async resolveConst(accounts, path = []) {\n        for (let k = 0; k < accounts.length; k += 1) {\n            const accountDescOrAccounts = accounts[k];\n            const subAccounts = accountDescOrAccounts.accounts;\n            if (subAccounts) {\n                await this.resolveConst(subAccounts, [\n                    ...path,\n                    camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDescOrAccounts.name),\n                ]);\n            }\n            const accountDesc = accountDescOrAccounts;\n            const accountDescName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDescOrAccounts.name);\n            // Signers default to the provider.\n            if (accountDesc.isSigner && !this.get([...path, accountDescName])) {\n                // @ts-expect-error\n                if (this._provider.wallet === undefined) {\n                    throw new Error(\"This function requires the Provider interface implementor to have a 'wallet' field.\");\n                }\n                // @ts-expect-error\n                this.set([...path, accountDescName], this._provider.wallet.publicKey);\n            }\n            // Common accounts are auto populated with magic names by convention.\n            if (Reflect.has(AccountsResolver.CONST_ACCOUNTS, accountDescName) &&\n                !this.get([...path, accountDescName])) {\n                this.set([...path, accountDescName], AccountsResolver.CONST_ACCOUNTS[accountDescName]);\n            }\n        }\n    }\n    async resolvePdas(accounts, path = []) {\n        let found = 0;\n        for (let k = 0; k < accounts.length; k += 1) {\n            const accountDesc = accounts[k];\n            const subAccounts = accountDesc.accounts;\n            if (subAccounts) {\n                found += await this.resolvePdas(subAccounts, [\n                    ...path,\n                    camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDesc.name),\n                ]);\n            }\n            const accountDescCasted = accountDesc;\n            const accountDescName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDesc.name);\n            // PDA derived from IDL seeds.\n            if (accountDescCasted.pda &&\n                accountDescCasted.pda.seeds.length > 0 &&\n                !this.get([...path, accountDescName])) {\n                if (Boolean(await this.autoPopulatePda(accountDescCasted, path))) {\n                    found += 1;\n                }\n            }\n        }\n        return found;\n    }\n    async resolveRelations(accounts, path = []) {\n        let found = 0;\n        for (let k = 0; k < accounts.length; k += 1) {\n            const accountDesc = accounts[k];\n            const subAccounts = accountDesc.accounts;\n            if (subAccounts) {\n                found += await this.resolveRelations(subAccounts, [\n                    ...path,\n                    camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDesc.name),\n                ]);\n            }\n            const relations = accountDesc.relations || [];\n            const accountDescName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDesc.name);\n            const newPath = [...path, accountDescName];\n            // If we have this account and there's some missing accounts that are relations to this account, fetch them\n            const accountKey = this.get(newPath);\n            if (accountKey) {\n                const matching = relations.filter((rel) => !this.get([...path, camelcase__WEBPACK_IMPORTED_MODULE_5___default()(rel)]));\n                found += matching.length;\n                if (matching.length > 0) {\n                    const account = await this._accountStore.fetchAccount({\n                        publicKey: accountKey,\n                    });\n                    await Promise.all(matching.map(async (rel) => {\n                        const relName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(rel);\n                        this.set([...path, relName], account[relName]);\n                        return account[relName];\n                    }));\n                }\n            }\n        }\n        return found;\n    }\n    async autoPopulatePda(accountDesc, path = []) {\n        if (!accountDesc.pda || !accountDesc.pda.seeds)\n            throw new Error(\"Must have seeds\");\n        const seeds = await Promise.all(accountDesc.pda.seeds.map((seedDesc) => this.toBuffer(seedDesc, path)));\n        if (seeds.some((seed) => typeof seed == \"undefined\")) {\n            return;\n        }\n        const programId = await this.parseProgramId(accountDesc, path);\n        if (!programId) {\n            return;\n        }\n        const [pubkey] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddress(seeds, programId);\n        this.set([...path, camelcase__WEBPACK_IMPORTED_MODULE_5___default()(accountDesc.name)], pubkey);\n    }\n    async parseProgramId(accountDesc, path = []) {\n        var _a;\n        if (!((_a = accountDesc.pda) === null || _a === void 0 ? void 0 : _a.programId)) {\n            return this._programId;\n        }\n        switch (accountDesc.pda.programId.kind) {\n            case \"const\":\n                return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(this.toBufferConst(accountDesc.pda.programId.value));\n            case \"arg\":\n                return this.argValue(accountDesc.pda.programId);\n            case \"account\":\n                return await this.accountValue(accountDesc.pda.programId, path);\n            default:\n                throw new Error(`Unexpected program seed kind: ${accountDesc.pda.programId.kind}`);\n        }\n    }\n    async toBuffer(seedDesc, path = []) {\n        switch (seedDesc.kind) {\n            case \"const\":\n                return this.toBufferConst(seedDesc);\n            case \"arg\":\n                return await this.toBufferArg(seedDesc);\n            case \"account\":\n                return await this.toBufferAccount(seedDesc, path);\n            default:\n                throw new Error(`Unexpected seed kind: ${seedDesc.kind}`);\n        }\n    }\n    /**\n     * Recursively get the type at some path of either a primitive or a user defined struct.\n     */\n    getType(type, path = []) {\n        if (path.length > 0 && type.defined) {\n            const subType = this._idlTypes.find((t) => t.name === type.defined);\n            if (!subType) {\n                throw new Error(`Cannot find type ${type.defined}`);\n            }\n            const structType = subType.type; // enum not supported yet\n            const field = structType.fields.find((field) => field.name === path[0]);\n            return this.getType(field.type, path.slice(1));\n        }\n        return type;\n    }\n    toBufferConst(seedDesc) {\n        return this.toBufferValue(this.getType(seedDesc.type, (seedDesc.path || \"\").split(\".\").slice(1)), seedDesc.value);\n    }\n    async toBufferArg(seedDesc) {\n        const argValue = this.argValue(seedDesc);\n        if (typeof argValue === \"undefined\") {\n            return;\n        }\n        return this.toBufferValue(this.getType(seedDesc.type, (seedDesc.path || \"\").split(\".\").slice(1)), argValue);\n    }\n    argValue(seedDesc) {\n        const split = seedDesc.path.split(\".\");\n        const seedArgName = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(split[0]);\n        const idlArgPosition = this._idlIx.args.findIndex((argDesc) => argDesc.name === seedArgName);\n        if (idlArgPosition === -1) {\n            throw new Error(`Unable to find argument for seed: ${seedArgName}`);\n        }\n        return split\n            .slice(1)\n            .reduce((curr, path) => (curr || {})[path], this._args[idlArgPosition]);\n    }\n    async toBufferAccount(seedDesc, path = []) {\n        const accountValue = await this.accountValue(seedDesc, path);\n        if (!accountValue) {\n            return;\n        }\n        return this.toBufferValue(seedDesc.type, accountValue);\n    }\n    async accountValue(seedDesc, path = []) {\n        const pathComponents = seedDesc.path.split(\".\");\n        const fieldName = pathComponents[0];\n        const fieldPubkey = this.get([...path, camelcase__WEBPACK_IMPORTED_MODULE_5___default()(fieldName)]);\n        if (fieldPubkey === null) {\n            throw new Error(`fieldPubkey is null`);\n        }\n        // The seed is a pubkey of the account.\n        if (pathComponents.length === 1) {\n            return fieldPubkey;\n        }\n        // The key is account data.\n        //\n        // Fetch and deserialize it.\n        const account = await this._accountStore.fetchAccount({\n            publicKey: fieldPubkey,\n            name: seedDesc.account,\n        });\n        // Dereference all fields in the path to get the field value\n        // used in the seed.\n        const fieldValue = this.parseAccountValue(account, pathComponents.slice(1));\n        return fieldValue;\n    }\n    parseAccountValue(account, path) {\n        let accountField;\n        while (path.length > 0) {\n            accountField = account[camelcase__WEBPACK_IMPORTED_MODULE_5___default()(path[0])];\n            path = path.slice(1);\n        }\n        return accountField;\n    }\n    // Converts the given idl valaue into a Buffer. The values here must be\n    // primitives. E.g. no structs.\n    //\n    // TODO: add more types here as needed.\n    toBufferValue(type, value) {\n        switch (type) {\n            case \"u8\":\n                return Buffer.from([value]);\n            case \"u16\":\n                let b = Buffer.alloc(2);\n                b.writeUInt16LE(value);\n                return b;\n            case \"u32\":\n                let buf = Buffer.alloc(4);\n                buf.writeUInt32LE(value);\n                return buf;\n            case \"u64\":\n                let bU64 = Buffer.alloc(8);\n                bU64.writeBigUInt64LE(BigInt(value));\n                return bU64;\n            case \"string\":\n                return Buffer.from(encode$2(value));\n            case \"publicKey\":\n                return value.toBuffer();\n            default:\n                if (type.array) {\n                    return Buffer.from(value);\n                }\n                throw new Error(`Unexpected seed type: ${type}`);\n        }\n    }\n}\nAccountsResolver.CONST_ACCOUNTS = {\n    associatedTokenProgram: ASSOCIATED_PROGRAM_ID,\n    rent: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SYSVAR_RENT_PUBKEY,\n    systemProgram: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.programId,\n    tokenProgram: TOKEN_PROGRAM_ID,\n    clock: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SYSVAR_CLOCK_PUBKEY,\n};\n// TODO: this should be configureable to avoid unnecessary requests.\nclass AccountStore {\n    // todo: don't use the progrma use the account namespace.\n    constructor(_provider, _accounts, _programId) {\n        this._provider = _provider;\n        this._programId = _programId;\n        this._cache = new Map();\n        this._idls = {};\n        this._idls[_programId.toBase58()] = _accounts;\n    }\n    async ensureIdl(programId) {\n        if (!this._idls[programId.toBase58()]) {\n            const idl = await Program.fetchIdl(programId, this._provider);\n            if (idl) {\n                const program = new Program(idl, programId, this._provider);\n                this._idls[programId.toBase58()] = program.account;\n            }\n        }\n        return this._idls[programId.toBase58()];\n    }\n    async fetchAccount({ publicKey, name, programId = this._programId, }) {\n        const address = publicKey.toString();\n        if (!this._cache.has(address)) {\n            if (name === \"TokenAccount\") {\n                const accountInfo = await this._provider.connection.getAccountInfo(publicKey);\n                if (accountInfo === null) {\n                    throw new Error(`invalid account info for ${address}`);\n                }\n                const data = decodeTokenAccount(accountInfo.data);\n                this._cache.set(address, data);\n            }\n            else if (name) {\n                const accounts = await this.ensureIdl(programId);\n                if (accounts) {\n                    const accountFetcher = accounts[camelcase__WEBPACK_IMPORTED_MODULE_5___default()(name)];\n                    if (accountFetcher) {\n                        const account = await accountFetcher.fetch(publicKey);\n                        this._cache.set(address, account);\n                    }\n                }\n            }\n            else {\n                const account = await this._provider.connection.getAccountInfo(publicKey);\n                if (account === null) {\n                    throw new Error(`invalid account info for ${address}`);\n                }\n                const data = account.data;\n                const accounts = await this.ensureIdl(account.owner);\n                if (accounts) {\n                    const firstAccountLayout = Object.values(accounts)[0];\n                    if (!firstAccountLayout) {\n                        throw new Error(\"No accounts for this program\");\n                    }\n                    const result = firstAccountLayout.coder.accounts.decodeAny(data);\n                    this._cache.set(address, result);\n                }\n            }\n        }\n        return this._cache.get(address);\n    }\n}\n\nclass MethodsBuilderFactory {\n    static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace, idlTypes, customResolver) {\n        return (...args) => new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n}\nfunction isPartialAccounts(partialAccount) {\n    return (typeof partialAccount === \"object\" &&\n        partialAccount !== null &&\n        !(\"_bn\" in partialAccount) // Ensures not a pubkey\n    );\n}\nfunction flattenPartialAccounts(partialAccounts, throwOnNull) {\n    const toReturn = {};\n    for (const accountName in partialAccounts) {\n        const account = partialAccounts[accountName];\n        if (account === null) {\n            if (throwOnNull)\n                throw new Error(\"Failed to resolve optionals due to IDL type mismatch with input accounts!\");\n            continue;\n        }\n        toReturn[accountName] = isPartialAccounts(account)\n            ? flattenPartialAccounts(account, true)\n            : translateAddress(account);\n    }\n    return toReturn;\n}\nclass MethodsBuilder {\n    constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver) {\n        this._ixFn = _ixFn;\n        this._txFn = _txFn;\n        this._rpcFn = _rpcFn;\n        this._simulateFn = _simulateFn;\n        this._viewFn = _viewFn;\n        this._programId = _programId;\n        this._accounts = {};\n        this._remainingAccounts = [];\n        this._signers = [];\n        this._preInstructions = [];\n        this._postInstructions = [];\n        this._autoResolveAccounts = true;\n        this._args = _args;\n        this._accountsResolver = new AccountsResolver(_args, this._accounts, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver);\n    }\n    args(_args) {\n        this._args = _args;\n        this._accountsResolver.args(_args);\n    }\n    async pubkeys() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        return this._accounts;\n    }\n    accounts(accounts) {\n        this._autoResolveAccounts = true;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    accountsStrict(accounts) {\n        this._autoResolveAccounts = false;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    signers(signers) {\n        this._signers = this._signers.concat(signers);\n        return this;\n    }\n    remainingAccounts(accounts) {\n        this._remainingAccounts = this._remainingAccounts.concat(accounts);\n        return this;\n    }\n    preInstructions(ixs) {\n        this._preInstructions = this._preInstructions.concat(ixs);\n        return this;\n    }\n    postInstructions(ixs) {\n        this._postInstructions = this._postInstructions.concat(ixs);\n        return this;\n    }\n    async rpc(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._rpcFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options,\n        });\n    }\n    async rpcAndKeys(options) {\n        const pubkeys = await this.pubkeys();\n        return {\n            pubkeys,\n            signature: await this.rpc(options),\n        };\n    }\n    async view(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        if (!this._viewFn) {\n            throw new Error(\"Method does not support views\");\n        }\n        // @ts-ignore\n        return this._viewFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options,\n        });\n    }\n    async simulate(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._simulateFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options,\n        });\n    }\n    async instruction() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._ixFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n        });\n    }\n    /**\n     * Convenient shortcut to get instructions and pubkeys via\n     * const { pubkeys, instructions } = await prepare();\n     */\n    async prepare() {\n        return {\n            instruction: await this.instruction(),\n            pubkeys: await this.pubkeys(),\n            signers: await this._signers,\n        };\n    }\n    async transaction() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._txFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n        });\n    }\n}\n\nclass ViewFactory {\n    static build(programId, idlIx, simulateFn, idl) {\n        const isMut = idlIx.accounts.find((a) => a.isMut);\n        const hasReturn = !!idlIx.returns;\n        if (isMut || !hasReturn)\n            return;\n        const view = async (...args) => {\n            var _a, _b;\n            let simulationResult = await simulateFn(...args);\n            const returnPrefix = `Program return: ${programId} `;\n            let returnLog = simulationResult.raw.find((l) => l.startsWith(returnPrefix));\n            if (!returnLog) {\n                throw new Error(\"View expected return log\");\n            }\n            let returnData = decode(returnLog.slice(returnPrefix.length));\n            let returnType = idlIx.returns;\n            if (!returnType) {\n                throw new Error(\"View expected return type\");\n            }\n            const coder = IdlCoder.fieldLayout({ type: returnType }, Array.from([...((_a = idl.accounts) !== null && _a !== void 0 ? _a : []), ...((_b = idl.types) !== null && _b !== void 0 ? _b : [])]));\n            return coder.decode(returnData);\n        };\n        return view;\n    }\n}\n\nclass NamespaceFactory {\n    /**\n     * Generates all namespaces for a given program.\n     */\n    static build(idl, coder, programId, provider, getCustomResolver) {\n        const rpc = {};\n        const instruction = {};\n        const transaction = {};\n        const simulate = {};\n        const methods = {};\n        const view = {};\n        const idlErrors = parseIdlErrors(idl);\n        const account = idl.accounts\n            ? AccountFactory.build(idl, coder, programId, provider)\n            : {};\n        const state = StateFactory.build(idl, coder, programId, provider);\n        idl.instructions.forEach((idlIx) => {\n            const ixItem = InstructionNamespaceFactory.build(idlIx, (ixName, ix) => coder.instruction.encode(ixName, ix), programId);\n            const txItem = TransactionFactory.build(idlIx, ixItem);\n            const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n            const simulateItem = SimulateFactory.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n            const viewItem = ViewFactory.build(programId, idlIx, simulateItem, idl);\n            const methodItem = MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account, idl.types || [], getCustomResolver && getCustomResolver(idlIx));\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_5___default()(idlIx.name);\n            instruction[name] = ixItem;\n            transaction[name] = txItem;\n            rpc[name] = rpcItem;\n            simulate[name] = simulateItem;\n            methods[name] = methodItem;\n            if (viewItem) {\n                view[name] = viewItem;\n            }\n        });\n        return [\n            rpc,\n            instruction,\n            transaction,\n            account,\n            simulate,\n            methods,\n            state,\n            view,\n        ];\n    }\n}\n\n/**\n * ## Program\n *\n * Program provides the IDL deserialized client representation of an Anchor\n * program.\n *\n * This API is the one stop shop for all things related to communicating with\n * on-chain programs. Among other things, one can send transactions, fetch\n * deserialized accounts, decode instruction data, subscribe to account\n * changes, and listen to events.\n *\n * In addition to field accessors and methods, the object provides a set of\n * dynamically generated properties, also known as namespaces, that\n * map one-to-one to program methods and accounts. These namespaces generally\n *  can be used as follows:\n *\n * ## Usage\n *\n * ```javascript\n * program.<namespace>.<program-specific-method>\n * ```\n *\n * API specifics are namespace dependent. The examples used in the documentation\n * below will refer to the two counter examples found\n * [here](https://github.com/coral-xyz/anchor#examples).\n */\nclass Program {\n    /**\n     * Address of the program.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * IDL defining the program's interface.\n     */\n    get idl() {\n        return this._idl;\n    }\n    /**\n     * Coder for serializing requests.\n     */\n    get coder() {\n        return this._coder;\n    }\n    /**\n     * Wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * @param idl       The interface definition.\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context to use. If not provided\n     *                  then uses [[getProvider]].\n     * @param getCustomResolver A function that returns a custom account resolver\n     *                          for the given instruction. This is useful for resolving\n     *                          public keys of missing accounts when building instructions\n     */\n    constructor(idl, programId, provider, coder, getCustomResolver) {\n        programId = translateAddress(programId);\n        if (!provider) {\n            provider = getProvider();\n        }\n        // Fields.\n        this._idl = idl;\n        this._provider = provider;\n        this._programId = programId;\n        this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(idl);\n        this._events = new EventManager(this._programId, provider, this._coder);\n        // Dynamic namespaces.\n        const [rpc, instruction, transaction, account, simulate, methods, state, views,] = NamespaceFactory.build(idl, this._coder, programId, provider, getCustomResolver !== null && getCustomResolver !== void 0 ? getCustomResolver : (() => undefined));\n        this.rpc = rpc;\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.account = account;\n        this.simulate = simulate;\n        this.methods = methods;\n        this.state = state;\n        this.views = views;\n    }\n    /**\n     * Generates a Program client by fetching the IDL from the network.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */\n    static async at(address, provider) {\n        const programId = translateAddress(address);\n        const idl = await Program.fetchIdl(programId, provider);\n        if (!idl) {\n            throw new Error(`IDL not found for program: ${address.toString()}`);\n        }\n        return new Program(idl, programId, provider);\n    }\n    /**\n     * Fetches an idl from the blockchain.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */\n    static async fetchIdl(address, provider) {\n        provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        const programId = translateAddress(address);\n        const idlAddr = await idlAddress(programId);\n        const accountInfo = await provider.connection.getAccountInfo(idlAddr);\n        if (!accountInfo) {\n            return null;\n        }\n        // Chop off account discriminator.\n        let idlAccount = decodeIdlAccount(accountInfo.data.slice(8));\n        const inflatedIdl = (0,pako__WEBPACK_IMPORTED_MODULE_8__.inflate)(idlAccount.data);\n        return JSON.parse(decode$2(inflatedIdl));\n    }\n    /**\n     * Invokes the given callback every time the given event is emitted.\n     *\n     * @param eventName The PascalCase name of the event, provided by the IDL.\n     * @param callback  The function to invoke whenever the event is emitted from\n     *                  program logs.\n     */\n    addEventListener(eventName, callback) {\n        return this._events.addEventListener(eventName, callback);\n    }\n    /**\n     * Unsubscribes from the given eventName.\n     */\n    async removeEventListener(listener) {\n        return await this._events.removeEventListener(listener);\n    }\n}\n\nconst SYSTEM_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"11111111111111111111111111111111\");\nfunction program(provider) {\n    return new Program(IDL, SYSTEM_PROGRAM_ID, provider, coder());\n}\nfunction coder() {\n    return new SystemCoder(IDL);\n}\nconst IDL = {\n    version: \"0.1.0\",\n    name: \"system_program\",\n    instructions: [\n        {\n            name: \"createAccount\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"assign\",\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    isMut: true,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"transfer\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"createAccountWithSeed\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"advanceNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"withdrawNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"rent\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"initializeNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"rent\",\n                    isMut: false,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"authorizeNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"allocate\",\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    isMut: true,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"allocateWithSeed\",\n            accounts: [\n                {\n                    name: \"account\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"assignWithSeed\",\n            accounts: [\n                {\n                    name: \"account\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"transferWithSeed\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n    ],\n    accounts: [\n        {\n            name: \"nonce\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"version\",\n                        type: \"u32\",\n                    },\n                    {\n                        name: \"state\",\n                        type: \"u32\",\n                    },\n                    {\n                        name: \"authorizedPubkey\",\n                        type: \"publicKey\",\n                    },\n                    {\n                        name: \"nonce\",\n                        type: \"publicKey\",\n                    },\n                    {\n                        name: \"feeCalculator\",\n                        type: {\n                            defined: \"FeeCalculator\",\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n    types: [\n        {\n            name: \"FeeCalculator\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"lamportsPerSignature\",\n                        type: \"u64\",\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nclass Native {\n    static system(provider) {\n        return program(provider);\n    }\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@project-serum/anchor/dist/browser/index.js\n");

/***/ }),

/***/ "./node_modules/buffer-layout/lib/Layout.js":
/*!**************************************************!*\
  !*** ./node_modules/buffer-layout/lib/Layout.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports[\"const\"] = ((value, property) => new Constant(value, property));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer-layout/lib/Layout.js\n");

/***/ }),

/***/ "./node_modules/camelcase/index.js":
/*!*****************************************!*\
  !*** ./node_modules/camelcase/index.js ***!
  \*****************************************/
/***/ (function(module) {

"use strict";
eval("\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = camelCase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2FtZWxjYXNlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHVCQUF1QixHQUFHO0FBQzFCLHVCQUF1QixHQUFHO0FBQzFCLDhCQUE4QixHQUFHLFFBQVEsR0FBRztBQUM1Qyx5QkFBeUIsTUFBTSxHQUFHLEVBQUU7QUFDcEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBbUI7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseUJBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jYW1lbGNhc2UvaW5kZXguanM/OTMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFVQUEVSQ0FTRSA9IC9bXFxwe0x1fV0vdTtcbmNvbnN0IExPV0VSQ0FTRSA9IC9bXFxwe0xsfV0vdTtcbmNvbnN0IExFQURJTkdfQ0FQSVRBTCA9IC9eW1xccHtMdX1dKD8hW1xccHtMdX1dKS9ndTtcbmNvbnN0IElERU5USUZJRVIgPSAvKFtcXHB7QWxwaGF9XFxwe059X118JCkvdTtcbmNvbnN0IFNFUEFSQVRPUlMgPSAvW18uXFwtIF0rLztcblxuY29uc3QgTEVBRElOR19TRVBBUkFUT1JTID0gbmV3IFJlZ0V4cCgnXicgKyBTRVBBUkFUT1JTLnNvdXJjZSk7XG5jb25zdCBTRVBBUkFUT1JTX0FORF9JREVOVElGSUVSID0gbmV3IFJlZ0V4cChTRVBBUkFUT1JTLnNvdXJjZSArIElERU5USUZJRVIuc291cmNlLCAnZ3UnKTtcbmNvbnN0IE5VTUJFUlNfQU5EX0lERU5USUZJRVIgPSBuZXcgUmVnRXhwKCdcXFxcZCsnICsgSURFTlRJRklFUi5zb3VyY2UsICdndScpO1xuXG5jb25zdCBwcmVzZXJ2ZUNhbWVsQ2FzZSA9IChzdHJpbmcsIHRvTG93ZXJDYXNlLCB0b1VwcGVyQ2FzZSkgPT4ge1xuXHRsZXQgaXNMYXN0Q2hhckxvd2VyID0gZmFsc2U7XG5cdGxldCBpc0xhc3RDaGFyVXBwZXIgPSBmYWxzZTtcblx0bGV0IGlzTGFzdExhc3RDaGFyVXBwZXIgPSBmYWxzZTtcblxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuXHRcdGNvbnN0IGNoYXJhY3RlciA9IHN0cmluZ1tpXTtcblxuXHRcdGlmIChpc0xhc3RDaGFyTG93ZXIgJiYgVVBQRVJDQVNFLnRlc3QoY2hhcmFjdGVyKSkge1xuXHRcdFx0c3RyaW5nID0gc3RyaW5nLnNsaWNlKDAsIGkpICsgJy0nICsgc3RyaW5nLnNsaWNlKGkpO1xuXHRcdFx0aXNMYXN0Q2hhckxvd2VyID0gZmFsc2U7XG5cdFx0XHRpc0xhc3RMYXN0Q2hhclVwcGVyID0gaXNMYXN0Q2hhclVwcGVyO1xuXHRcdFx0aXNMYXN0Q2hhclVwcGVyID0gdHJ1ZTtcblx0XHRcdGkrKztcblx0XHR9IGVsc2UgaWYgKGlzTGFzdENoYXJVcHBlciAmJiBpc0xhc3RMYXN0Q2hhclVwcGVyICYmIExPV0VSQ0FTRS50ZXN0KGNoYXJhY3RlcikpIHtcblx0XHRcdHN0cmluZyA9IHN0cmluZy5zbGljZSgwLCBpIC0gMSkgKyAnLScgKyBzdHJpbmcuc2xpY2UoaSAtIDEpO1xuXHRcdFx0aXNMYXN0TGFzdENoYXJVcHBlciA9IGlzTGFzdENoYXJVcHBlcjtcblx0XHRcdGlzTGFzdENoYXJVcHBlciA9IGZhbHNlO1xuXHRcdFx0aXNMYXN0Q2hhckxvd2VyID0gdHJ1ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aXNMYXN0Q2hhckxvd2VyID0gdG9Mb3dlckNhc2UoY2hhcmFjdGVyKSA9PT0gY2hhcmFjdGVyICYmIHRvVXBwZXJDYXNlKGNoYXJhY3RlcikgIT09IGNoYXJhY3Rlcjtcblx0XHRcdGlzTGFzdExhc3RDaGFyVXBwZXIgPSBpc0xhc3RDaGFyVXBwZXI7XG5cdFx0XHRpc0xhc3RDaGFyVXBwZXIgPSB0b1VwcGVyQ2FzZShjaGFyYWN0ZXIpID09PSBjaGFyYWN0ZXIgJiYgdG9Mb3dlckNhc2UoY2hhcmFjdGVyKSAhPT0gY2hhcmFjdGVyO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBzdHJpbmc7XG59O1xuXG5jb25zdCBwcmVzZXJ2ZUNvbnNlY3V0aXZlVXBwZXJjYXNlID0gKGlucHV0LCB0b0xvd2VyQ2FzZSkgPT4ge1xuXHRMRUFESU5HX0NBUElUQUwubGFzdEluZGV4ID0gMDtcblxuXHRyZXR1cm4gaW5wdXQucmVwbGFjZShMRUFESU5HX0NBUElUQUwsIG0xID0+IHRvTG93ZXJDYXNlKG0xKSk7XG59O1xuXG5jb25zdCBwb3N0UHJvY2VzcyA9IChpbnB1dCwgdG9VcHBlckNhc2UpID0+IHtcblx0U0VQQVJBVE9SU19BTkRfSURFTlRJRklFUi5sYXN0SW5kZXggPSAwO1xuXHROVU1CRVJTX0FORF9JREVOVElGSUVSLmxhc3RJbmRleCA9IDA7XG5cblx0cmV0dXJuIGlucHV0LnJlcGxhY2UoU0VQQVJBVE9SU19BTkRfSURFTlRJRklFUiwgKF8sIGlkZW50aWZpZXIpID0+IHRvVXBwZXJDYXNlKGlkZW50aWZpZXIpKVxuXHRcdC5yZXBsYWNlKE5VTUJFUlNfQU5EX0lERU5USUZJRVIsIG0gPT4gdG9VcHBlckNhc2UobSkpO1xufTtcblxuY29uc3QgY2FtZWxDYXNlID0gKGlucHV0LCBvcHRpb25zKSA9PiB7XG5cdGlmICghKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycgfHwgQXJyYXkuaXNBcnJheShpbnB1dCkpKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgdGhlIGlucHV0IHRvIGJlIGBzdHJpbmcgfCBzdHJpbmdbXWAnKTtcblx0fVxuXG5cdG9wdGlvbnMgPSB7XG5cdFx0cGFzY2FsQ2FzZTogZmFsc2UsXG5cdFx0cHJlc2VydmVDb25zZWN1dGl2ZVVwcGVyY2FzZTogZmFsc2UsXG5cdFx0Li4ub3B0aW9uc1xuXHR9O1xuXG5cdGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuXHRcdGlucHV0ID0gaW5wdXQubWFwKHggPT4geC50cmltKCkpXG5cdFx0XHQuZmlsdGVyKHggPT4geC5sZW5ndGgpXG5cdFx0XHQuam9pbignLScpO1xuXHR9IGVsc2Uge1xuXHRcdGlucHV0ID0gaW5wdXQudHJpbSgpO1xuXHR9XG5cblx0aWYgKGlucHV0Lmxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXG5cdGNvbnN0IHRvTG93ZXJDYXNlID0gb3B0aW9ucy5sb2NhbGUgPT09IGZhbHNlID9cblx0XHRzdHJpbmcgPT4gc3RyaW5nLnRvTG93ZXJDYXNlKCkgOlxuXHRcdHN0cmluZyA9PiBzdHJpbmcudG9Mb2NhbGVMb3dlckNhc2Uob3B0aW9ucy5sb2NhbGUpO1xuXHRjb25zdCB0b1VwcGVyQ2FzZSA9IG9wdGlvbnMubG9jYWxlID09PSBmYWxzZSA/XG5cdFx0c3RyaW5nID0+IHN0cmluZy50b1VwcGVyQ2FzZSgpIDpcblx0XHRzdHJpbmcgPT4gc3RyaW5nLnRvTG9jYWxlVXBwZXJDYXNlKG9wdGlvbnMubG9jYWxlKTtcblxuXHRpZiAoaW5wdXQubGVuZ3RoID09PSAxKSB7XG5cdFx0cmV0dXJuIG9wdGlvbnMucGFzY2FsQ2FzZSA/IHRvVXBwZXJDYXNlKGlucHV0KSA6IHRvTG93ZXJDYXNlKGlucHV0KTtcblx0fVxuXG5cdGNvbnN0IGhhc1VwcGVyQ2FzZSA9IGlucHV0ICE9PSB0b0xvd2VyQ2FzZShpbnB1dCk7XG5cblx0aWYgKGhhc1VwcGVyQ2FzZSkge1xuXHRcdGlucHV0ID0gcHJlc2VydmVDYW1lbENhc2UoaW5wdXQsIHRvTG93ZXJDYXNlLCB0b1VwcGVyQ2FzZSk7XG5cdH1cblxuXHRpbnB1dCA9IGlucHV0LnJlcGxhY2UoTEVBRElOR19TRVBBUkFUT1JTLCAnJyk7XG5cblx0aWYgKG9wdGlvbnMucHJlc2VydmVDb25zZWN1dGl2ZVVwcGVyY2FzZSkge1xuXHRcdGlucHV0ID0gcHJlc2VydmVDb25zZWN1dGl2ZVVwcGVyY2FzZShpbnB1dCwgdG9Mb3dlckNhc2UpO1xuXHR9IGVsc2Uge1xuXHRcdGlucHV0ID0gdG9Mb3dlckNhc2UoaW5wdXQpO1xuXHR9XG5cblx0aWYgKG9wdGlvbnMucGFzY2FsQ2FzZSkge1xuXHRcdGlucHV0ID0gdG9VcHBlckNhc2UoaW5wdXQuY2hhckF0KDApKSArIGlucHV0LnNsaWNlKDEpO1xuXHR9XG5cblx0cmV0dXJuIHBvc3RQcm9jZXNzKGlucHV0LCB0b1VwcGVyQ2FzZSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNhbWVsQ2FzZTtcbi8vIFRPRE86IFJlbW92ZSB0aGlzIGZvciB0aGUgbmV4dCBtYWpvciByZWxlYXNlXG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gY2FtZWxDYXNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/camelcase/index.js\n");

/***/ }),

/***/ "./node_modules/js-sha256/src/sha256.js":
/*!**********************************************!*\
  !*** ./node_modules/js-sha256/src/sha256.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"../node_modules/process/browser.js\");\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return exports;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/js-sha256/src/sha256.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./src/views/SolanaSwapView/index.module.css":
/*!*******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./src/views/SolanaSwapView/index.module.css ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls0XS51c2VbMV0hLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNF0udXNlWzJdIS4vc3JjL3ZpZXdzL1NvbGFuYVN3YXBWaWV3L2luZGV4Lm1vZHVsZS5jc3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyx5S0FBcUY7QUFDL0g7QUFDQTtBQUNBLGlEQUFpRCxrRUFBa0U7QUFDbkg7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvdmlld3MvU29sYW5hU3dhcFZpZXcvaW5kZXgubW9kdWxlLmNzcz81MDkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanNcIik7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiXCIsXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./src/views/SolanaSwapView/index.module.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fnhatminhphan%2FDesktop%2FCode%2FSolana%2Fsolana-swap%2Fapp%2Fsrc%2Fpages%2Findex.tsx!":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fnhatminhphan%2FDesktop%2FCode%2FSolana%2Fsolana-swap%2Fapp%2Fsrc%2Fpages%2Findex.tsx! ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/index.tsx */ \"./src/pages/index.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkYmYWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRm5oYXRtaW5ocGhhbiUyRkRlc2t0b3AlMkZDb2RlJTJGU29sYW5hJTJGc29sYW5hLXN3YXAlMkZhcHAlMkZzcmMlMkZwYWdlcyUyRmluZGV4LnRzeCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvREFBdUI7QUFDOUM7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzRhZDciXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9cIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCIuL3NyYy9wYWdlcy9pbmRleC50c3hcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL1wiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fnhatminhphan%2FDesktop%2FCode%2FSolana%2Fsolana-swap%2Fapp%2Fsrc%2Fpages%2Findex.tsx!\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/index.module.css":
/*!***************************************************!*\
  !*** ./src/views/SolanaSwapView/index.module.css ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!../../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./index.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./src/views/SolanaSwapView/index.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                // These elements should always exist. If they do not,\n                // this code should fail.\n                var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                var parentNode = anchorElement.parentNode// Normally <head>\n                ;\n                // Each style tag should be placed right before our\n                // anchor. By inserting before and not after, we do not\n                // need to track the last inserted element.\n                parentNode.insertBefore(element, anchorElement);\n            };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!../../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./index.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./src/views/SolanaSwapView/index.module.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!../../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./index.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./src/views/SolanaSwapView/index.module.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvU29sYW5hU3dhcFZpZXcvaW5kZXgubW9kdWxlLmNzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsME5BQThHO0FBQ2hJLDBCQUEwQixtQkFBTyxDQUFDLCtnQkFBZ1E7O0FBRWxTOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLCtnQkFBZ1E7QUFDdFE7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywrZ0JBQWdROztBQUUxUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvdmlld3MvU29sYW5hU3dhcFZpZXcvaW5kZXgubW9kdWxlLmNzcz81YzZhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls0XS51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzRdLnVzZVsyXSEuL2luZGV4Lm1vZHVsZS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzRdLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNF0udXNlWzJdIS4vaW5kZXgubW9kdWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNF0udXNlWzFdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls0XS51c2VbMl0hLi9pbmRleC5tb2R1bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/index.module.css\n");

/***/ }),

/***/ "./src/components/Loader.tsx":
/*!***********************************!*\
  !*** ./src/components/Loader.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Loader\": function() { return /* binding */ Loader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nvar _this = undefined;\nvar Loader = function(param) {\n    var _text = param.text, text = _text === void 0 ? \"Loading...\" : _text, _noText = param.noText, noText = _noText === void 0 ? false : _noText;\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col justify-center items-center text-xl font-light\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"animate-spin h-8 w-8 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"white\",\n                viewBox: \"0 0 24 24\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                        className: \"opacity-5\",\n                        cx: \"12\",\n                        cy: \"12\",\n                        r: \"10\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"4\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/Loader.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        className: \"opacity-75\",\n                        fill: \"currentColor\",\n                        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/Loader.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/Loader.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, _this),\n            \" \",\n            !noText ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"opacity-50 mt-4\",\n                children: text\n            }, void 0, false, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/Loader.tsx\",\n                lineNumber: 30,\n                columnNumber: 18\n            }, _this) : null\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/Loader.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, _this));\n};\n_c = Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Mb2FkZXIudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBTU8sR0FBSyxDQUFDQSxNQUFNLEdBQWMsUUFBUSxRQUFxQyxDQUFDO3NCQUEzQ0MsSUFBSSxFQUFKQSxJQUFJLHNCQUFHLENBQVkscUNBQUVDLE1BQU0sRUFBTkEsTUFBTSx3QkFBRyxLQUFLO0lBQ3JFLE1BQU0sNkVBQ0hDLENBQUc7UUFBQ0MsU0FBUyxFQUFDLENBQThEOzt3RkFDMUVDLENBQUc7Z0JBQ0ZELFNBQVMsRUFBQyxDQUFpQztnQkFDM0NFLEtBQUssRUFBQyxDQUE0QjtnQkFDbENDLElBQUksRUFBQyxDQUFPO2dCQUNaQyxPQUFPLEVBQUMsQ0FBVzs7Z0dBRWxCQyxDQUFNO3dCQUNMTCxTQUFTLEVBQUMsQ0FBVzt3QkFDckJNLEVBQUUsRUFBQyxDQUFJO3dCQUNQQyxFQUFFLEVBQUMsQ0FBSTt3QkFDUEMsQ0FBQyxFQUFDLENBQUk7d0JBQ05DLE1BQU0sRUFBQyxDQUFjO3dCQUNyQkMsV0FBVyxFQUFDLENBQUc7Ozs7OztnR0FFaEJDLENBQUk7d0JBQ0hYLFNBQVMsRUFBQyxDQUFZO3dCQUN0QkcsSUFBSSxFQUFDLENBQWM7d0JBQ25CUyxDQUFDLEVBQUMsQ0FBaUg7Ozs7Ozs7Ozs7OztZQUVoSCxDQUFHO2FBQ1JkLE1BQU0sK0VBQUlDLENBQUc7Z0JBQUNDLFNBQVMsRUFBQyxDQUFpQjswQkFBRUgsSUFBSTs7Ozs7d0JBQVUsSUFBSTs7Ozs7OztBQUdyRSxDQUFDO0tBMUJZRCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0xvYWRlci50c3g/MTMyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xuXG50eXBlIFByb3BzID0ge1xuICBub1RleHQ/OiBib29sZWFuO1xuICB0ZXh0Pzogc3RyaW5nO1xufTtcbmV4cG9ydCBjb25zdCBMb2FkZXI6IEZDPFByb3BzPiA9ICh7IHRleHQgPSBcIkxvYWRpbmcuLi5cIiwgbm9UZXh0ID0gZmFsc2UgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgdGV4dC14bCBmb250LWxpZ2h0XCI+XG4gICAgICA8c3ZnXG4gICAgICAgIGNsYXNzTmFtZT1cImFuaW1hdGUtc3BpbiBoLTggdy04IHRleHQtd2hpdGVcIlxuICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgZmlsbD1cIndoaXRlXCJcbiAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICA+XG4gICAgICAgIDxjaXJjbGVcbiAgICAgICAgICBjbGFzc05hbWU9XCJvcGFjaXR5LTVcIlxuICAgICAgICAgIGN4PVwiMTJcIlxuICAgICAgICAgIGN5PVwiMTJcIlxuICAgICAgICAgIHI9XCIxMFwiXG4gICAgICAgICAgc3Ryb2tlPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgICBzdHJva2VXaWR0aD1cIjRcIlxuICAgICAgICA+PC9jaXJjbGU+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgY2xhc3NOYW1lPVwib3BhY2l0eS03NVwiXG4gICAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgZD1cIk00IDEyYTggOCAwIDAxOC04VjBDNS4zNzMgMCAwIDUuMzczIDAgMTJoNHptMiA1LjI5MUE3Ljk2MiA3Ljk2MiAwIDAxNCAxMkgwYzAgMy4wNDIgMS4xMzUgNS44MjQgMyA3LjkzOGwzLTIuNjQ3elwiXG4gICAgICAgID48L3BhdGg+XG4gICAgICA8L3N2Zz57XCIgXCJ9XG4gICAgICB7IW5vVGV4dCA/IDxkaXYgY2xhc3NOYW1lPVwib3BhY2l0eS01MCBtdC00XCI+e3RleHR9PC9kaXY+IDogbnVsbH1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXSwibmFtZXMiOlsiTG9hZGVyIiwidGV4dCIsIm5vVGV4dCIsImRpdiIsImNsYXNzTmFtZSIsInN2ZyIsInhtbG5zIiwiZmlsbCIsInZpZXdCb3giLCJjaXJjbGUiLCJjeCIsImN5IiwiciIsInN0cm9rZSIsInN0cm9rZVdpZHRoIiwicGF0aCIsImQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Loader.tsx\n");

/***/ }),

/***/ "./src/components/SelectAndConnectWalletButton.tsx":
/*!*********************************************************!*\
  !*** ./src/components/SelectAndConnectWalletButton.tsx ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SelectAndConnectWalletButton\": function() { return /* binding */ SelectAndConnectWalletButton; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-react-ui */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/index.js\");\n\n\n\n\nvar _this = undefined;\nvar _s = $RefreshSig$();\nvar SelectAndConnectWalletButton = function(param) {\n    var onUseWalletClick = param.onUseWalletClick;\n    _s();\n    var setVisible = (0,_solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__.useWalletModal)().setVisible;\n    var ref = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet)(), wallet = ref.wallet, connect = ref.connect, connecting = ref.connecting, publicKey = ref.publicKey;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (!publicKey && wallet) {\n            try {\n                connect();\n            } catch (error) {\n                console.log(\"Error connecting to the wallet: \", error.message);\n            }\n        }\n    }, [\n        wallet\n    ]);\n    var handleWalletClick = function() {\n        try {\n            if (!wallet) {\n                setVisible(true);\n            } else {\n                connect();\n            }\n            onUseWalletClick();\n        } catch (error) {\n            console.log(\"Error connecting to the wallet: \", error.message);\n        }\n    };\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        onClick: handleWalletClick,\n        disabled: connecting,\n        children: publicKey ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Use Wallet Address\"\n        }, void 0, false, {\n            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SelectAndConnectWalletButton.tsx\",\n            lineNumber: 44,\n            columnNumber: 20\n        }, _this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Connect Wallet\"\n        }, void 0, false, {\n            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SelectAndConnectWalletButton.tsx\",\n            lineNumber: 44,\n            columnNumber: 52\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SelectAndConnectWalletButton.tsx\",\n        lineNumber: 39,\n        columnNumber: 5\n    }, _this));\n};\n_s(SelectAndConnectWalletButton, \"S1pv3WjAjcTEqh73hkzb2DywNSQ=\", false, function() {\n    return [\n        _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__.useWalletModal,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet\n    ];\n});\n_c = SelectAndConnectWalletButton;\nvar _c;\n$RefreshReg$(_c, \"SelectAndConnectWalletButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9TZWxlY3RBbmRDb25uZWN0V2FsbGV0QnV0dG9uLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFxQztBQUNtQjtBQUNROzs7QUFNekQsR0FBSyxDQUFDRyw0QkFBNEIsR0FBYyxRQUNsRCxRQUNDLENBQUM7UUFETEMsZ0JBQWdCLFNBQWhCQSxnQkFBZ0I7O0lBRWhCLEdBQUssQ0FBR0MsVUFBVSxHQUFLSCwrRUFBYyxHQUE3QkcsVUFBVTtJQUNsQixHQUFLLENBQThDSixHQUFXLEdBQVhBLHVFQUFTLElBQXBESyxNQUFNLEdBQXFDTCxHQUFXLENBQXRESyxNQUFNLEVBQUVDLE9BQU8sR0FBNEJOLEdBQVcsQ0FBOUNNLE9BQU8sRUFBRUMsVUFBVSxHQUFnQlAsR0FBVyxDQUFyQ08sVUFBVSxFQUFFQyxTQUFTLEdBQUtSLEdBQVcsQ0FBekJRLFNBQVM7SUFFOUNULGdEQUFTLENBQUMsUUFDWixHQURrQixDQUFDO1FBQ2YsRUFBRSxHQUFHUyxTQUFTLElBQUlILE1BQU0sRUFBRSxDQUFDO1lBQ3pCLEdBQUcsQ0FBQyxDQUFDO2dCQUNIQyxPQUFPO1lBQ1QsQ0FBQyxDQUFDLEtBQUssRUFBRUcsS0FBSyxFQUFFLENBQUM7Z0JBQ2ZDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQWtDLG1DQUFHRixLQUFLLENBQVNHLE9BQU87WUFDeEUsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDLEVBQUUsQ0FBQ1A7UUFBQUEsTUFBTTtJQUFBLENBQUM7SUFFWCxHQUFLLENBQUNRLGlCQUFpQixHQUFHLFFBQzVCLEdBRGtDLENBQUM7UUFDL0IsR0FBRyxDQUFDLENBQUM7WUFDSCxFQUFFLEdBQUdSLE1BQU0sRUFBRSxDQUFDO2dCQUNaRCxVQUFVLENBQUMsSUFBSTtZQUNqQixDQUFDLE1BQU0sQ0FBQztnQkFDTkUsT0FBTztZQUNULENBQUM7WUFDREgsZ0JBQWdCO1FBQ2xCLENBQUMsQ0FBQyxLQUFLLEVBQUVNLEtBQUssRUFBRSxDQUFDO1lBQ2ZDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQWtDLG1DQUFHRixLQUFLLENBQVNHLE9BQU87UUFDeEUsQ0FBQztJQUNILENBQUM7SUFFRCxNQUFNLDZFQUNIRSxDQUFNO1FBQ0xDLFNBQVMsRUFBQyxDQUF3QjtRQUNsQ0MsT0FBTyxFQUFFSCxpQkFBaUI7UUFDMUJJLFFBQVEsRUFBRVYsVUFBVTtrQkFFbkJDLFNBQVMsK0VBQUlVLENBQUc7c0JBQUMsQ0FBa0I7Ozs7O2dHQUFVQSxDQUFHO3NCQUFDLENBQWM7Ozs7Ozs7Ozs7O0FBR3RFLENBQUM7R0F0Q1loQiw0QkFBNEI7O1FBR2hCRCwyRUFBYztRQUNjRCxtRUFBUzs7O0tBSmpERSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvU2VsZWN0QW5kQ29ubmVjdFdhbGxldEJ1dHRvbi50c3g/ZWU5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGQywgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VXYWxsZXQgfSBmcm9tIFwiQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdFwiO1xuaW1wb3J0IHsgdXNlV2FsbGV0TW9kYWwgfSBmcm9tIFwiQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aVwiO1xuXG50eXBlIFByb3BzID0ge1xuICBvblVzZVdhbGxldENsaWNrOiAoKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IFNlbGVjdEFuZENvbm5lY3RXYWxsZXRCdXR0b246IEZDPFByb3BzPiA9ICh7XG4gIG9uVXNlV2FsbGV0Q2xpY2ssXG59KSA9PiB7XG4gIGNvbnN0IHsgc2V0VmlzaWJsZSB9ID0gdXNlV2FsbGV0TW9kYWwoKTtcbiAgY29uc3QgeyB3YWxsZXQsIGNvbm5lY3QsIGNvbm5lY3RpbmcsIHB1YmxpY0tleSB9ID0gdXNlV2FsbGV0KCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXB1YmxpY0tleSAmJiB3YWxsZXQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbm5lY3QoKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgY29ubmVjdGluZyB0byB0aGUgd2FsbGV0OiBcIiwgKGVycm9yIGFzIGFueSkubWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbd2FsbGV0XSk7XG5cbiAgY29uc3QgaGFuZGxlV2FsbGV0Q2xpY2sgPSAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghd2FsbGV0KSB7XG4gICAgICAgIHNldFZpc2libGUodHJ1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25uZWN0KCk7XG4gICAgICB9XG4gICAgICBvblVzZVdhbGxldENsaWNrKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgY29ubmVjdGluZyB0byB0aGUgd2FsbGV0OiBcIiwgKGVycm9yIGFzIGFueSkubWVzc2FnZSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvblxuICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1sZ1wiXG4gICAgICBvbkNsaWNrPXtoYW5kbGVXYWxsZXRDbGlja31cbiAgICAgIGRpc2FibGVkPXtjb25uZWN0aW5nfVxuICAgID5cbiAgICAgIHtwdWJsaWNLZXkgPyA8ZGl2PlVzZSBXYWxsZXQgQWRkcmVzczwvZGl2PiA6IDxkaXY+Q29ubmVjdCBXYWxsZXQ8L2Rpdj59XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVdhbGxldCIsInVzZVdhbGxldE1vZGFsIiwiU2VsZWN0QW5kQ29ubmVjdFdhbGxldEJ1dHRvbiIsIm9uVXNlV2FsbGV0Q2xpY2siLCJzZXRWaXNpYmxlIiwid2FsbGV0IiwiY29ubmVjdCIsImNvbm5lY3RpbmciLCJwdWJsaWNLZXkiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJtZXNzYWdlIiwiaGFuZGxlV2FsbGV0Q2xpY2siLCJidXR0b24iLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJkaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/SelectAndConnectWalletButton.tsx\n");

/***/ }),

/***/ "./src/components/SolanaLogo.tsx":
/*!***************************************!*\
  !*** ./src/components/SolanaLogo.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SolanaLogo\": function() { return /* binding */ SolanaLogo; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nvar _this = undefined;\nvar SolanaLogo = function() {\n    /*#__PURE__*/ return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        width: \"46\",\n        height: \"35\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"inline\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"linearGradient\", {\n                        x1: \"90.737%\",\n                        y1: \"34.776%\",\n                        x2: \"35.509%\",\n                        y2: \"55.415%\",\n                        id: \"a\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                stopColor: \"#00FFA3\",\n                                offset: \"0%\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                                lineNumber: 16,\n                                columnNumber: 9\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                stopColor: \"#DC1FFF\",\n                                offset: \"100%\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                                lineNumber: 17,\n                                columnNumber: 9\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                        lineNumber: 9,\n                        columnNumber: 7\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"linearGradient\", {\n                        x1: \"66.588%\",\n                        y1: \"43.8%\",\n                        x2: \"11.36%\",\n                        y2: \"64.439%\",\n                        id: \"b\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                stopColor: \"#00FFA3\",\n                                offset: \"0%\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                                lineNumber: 20,\n                                columnNumber: 9\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                stopColor: \"#DC1FFF\",\n                                offset: \"100%\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                                lineNumber: 21,\n                                columnNumber: 9\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 7\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"linearGradient\", {\n                        x1: \"78.586%\",\n                        y1: \"39.317%\",\n                        x2: \"23.358%\",\n                        y2: \"59.956%\",\n                        id: \"c\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                stopColor: \"#00FFA3\",\n                                offset: \"0%\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                                lineNumber: 30,\n                                columnNumber: 9\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                stopColor: \"#DC1FFF\",\n                                offset: \"100%\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                                lineNumber: 31,\n                                columnNumber: 9\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 7\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                lineNumber: 8,\n                columnNumber: 5\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                fillRule: \"nonzero\",\n                fill: \"none\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M7.256 26.713c.27-.27.64-.427 1.033-.427h35.64a.73.73 0 0 1 .517 1.247l-7.04 7.04c-.27.27-.64.427-1.034.427H.732a.73.73 0 0 1-.516-1.246l7.04-7.04Z\",\n                        fill: \"url(#a)\",\n                        transform: \"translate(.98)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 7\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M7.256.427C7.536.157 7.907 0 8.289 0h35.64a.73.73 0 0 1 .517 1.246l-7.04 7.04c-.27.27-.64.428-1.034.428H.732a.73.73 0 0 1-.516-1.247l7.04-7.04Z\",\n                        fill: \"url(#b)\",\n                        transform: \"translate(.98)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 7\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M37.405 13.486c-.27-.27-.64-.427-1.033-.427H.732a.73.73 0 0 0-.516 1.246l7.04 7.04c.27.27.64.428 1.033.428h35.64a.73.73 0 0 0 .517-1.247l-7.04-7.04Z\",\n                        fill: \"url(#c)\",\n                        transform: \"translate(.98)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 7\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n                lineNumber: 34,\n                columnNumber: 5\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/components/SolanaLogo.tsx\",\n        lineNumber: 2,\n        columnNumber: 3\n    }, _this);\n};\n_c = SolanaLogo;\nvar _c;\n$RefreshReg$(_c, \"SolanaLogo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Tb2xhbmFMb2dvLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLEdBQUssQ0FBQ0EsVUFBVSxHQUFHLFFBQzFCO2tCQUFFLE1BQ0QsQ0FBQyw4REFEQ0MsQ0FBRztRQUNGQyxLQUFLLEVBQUMsQ0FBSTtRQUNWQyxNQUFNLEVBQUMsQ0FBSTtRQUNYQyxLQUFLLEVBQUMsQ0FBNEI7UUFDbENDLFNBQVMsRUFBQyxDQUFROzt3RkFFakJDLENBQUk7O2dHQUNGQyxDQUFjO3dCQUNiQyxFQUFFLEVBQUMsQ0FBUzt3QkFDWkMsRUFBRSxFQUFDLENBQVM7d0JBQ1pDLEVBQUUsRUFBQyxDQUFTO3dCQUNaQyxFQUFFLEVBQUMsQ0FBUzt3QkFDWkMsRUFBRSxFQUFDLENBQUc7O3dHQUVMQyxDQUFJO2dDQUFDQyxTQUFTLEVBQUMsQ0FBUztnQ0FBQ0MsTUFBTSxFQUFDLENBQUk7Ozs7Ozt3R0FDcENGLENBQUk7Z0NBQUNDLFNBQVMsRUFBQyxDQUFTO2dDQUFDQyxNQUFNLEVBQUMsQ0FBTTs7Ozs7Ozs7Ozs7O2dHQUV4Q1IsQ0FBYzt3QkFBQ0MsRUFBRSxFQUFDLENBQVM7d0JBQUNDLEVBQUUsRUFBQyxDQUFPO3dCQUFDQyxFQUFFLEVBQUMsQ0FBUTt3QkFBQ0MsRUFBRSxFQUFDLENBQVM7d0JBQUNDLEVBQUUsRUFBQyxDQUFHOzt3R0FDcEVDLENBQUk7Z0NBQUNDLFNBQVMsRUFBQyxDQUFTO2dDQUFDQyxNQUFNLEVBQUMsQ0FBSTs7Ozs7O3dHQUNwQ0YsQ0FBSTtnQ0FBQ0MsU0FBUyxFQUFDLENBQVM7Z0NBQUNDLE1BQU0sRUFBQyxDQUFNOzs7Ozs7Ozs7Ozs7Z0dBRXhDUixDQUFjO3dCQUNiQyxFQUFFLEVBQUMsQ0FBUzt3QkFDWkMsRUFBRSxFQUFDLENBQVM7d0JBQ1pDLEVBQUUsRUFBQyxDQUFTO3dCQUNaQyxFQUFFLEVBQUMsQ0FBUzt3QkFDWkMsRUFBRSxFQUFDLENBQUc7O3dHQUVMQyxDQUFJO2dDQUFDQyxTQUFTLEVBQUMsQ0FBUztnQ0FBQ0MsTUFBTSxFQUFDLENBQUk7Ozs7Ozt3R0FDcENGLENBQUk7Z0NBQUNDLFNBQVMsRUFBQyxDQUFTO2dDQUFDQyxNQUFNLEVBQUMsQ0FBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dGQUcxQ0MsQ0FBQztnQkFBQ0MsUUFBUSxFQUFDLENBQVM7Z0JBQUNDLElBQUksRUFBQyxDQUFNOztnR0FDOUJDLENBQUk7d0JBQ0hDLENBQUMsRUFBQyxDQUFxSjt3QkFDdkpGLElBQUksRUFBQyxDQUFTO3dCQUNkRyxTQUFTLEVBQUMsQ0FBZ0I7Ozs7OztnR0FFM0JGLENBQUk7d0JBQ0hDLENBQUMsRUFBQyxDQUFpSjt3QkFDbkpGLElBQUksRUFBQyxDQUFTO3dCQUNkRyxTQUFTLEVBQUMsQ0FBZ0I7Ozs7OztnR0FFM0JGLENBQUk7d0JBQ0hDLENBQUMsRUFBQyxDQUFzSjt3QkFDeEpGLElBQUksRUFBQyxDQUFTO3dCQUNkRyxTQUFTLEVBQUMsQ0FBZ0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0EvQ3JCckIsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9Tb2xhbmFMb2dvLnRzeD8yZjU4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTb2xhbmFMb2dvID0gKCkgPT4gKFxuICA8c3ZnXG4gICAgd2lkdGg9XCI0NlwiXG4gICAgaGVpZ2h0PVwiMzVcIlxuICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgIGNsYXNzTmFtZT1cImlubGluZVwiXG4gID5cbiAgICA8ZGVmcz5cbiAgICAgIDxsaW5lYXJHcmFkaWVudFxuICAgICAgICB4MT1cIjkwLjczNyVcIlxuICAgICAgICB5MT1cIjM0Ljc3NiVcIlxuICAgICAgICB4Mj1cIjM1LjUwOSVcIlxuICAgICAgICB5Mj1cIjU1LjQxNSVcIlxuICAgICAgICBpZD1cImFcIlxuICAgICAgPlxuICAgICAgICA8c3RvcCBzdG9wQ29sb3I9XCIjMDBGRkEzXCIgb2Zmc2V0PVwiMCVcIiAvPlxuICAgICAgICA8c3RvcCBzdG9wQ29sb3I9XCIjREMxRkZGXCIgb2Zmc2V0PVwiMTAwJVwiIC8+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPGxpbmVhckdyYWRpZW50IHgxPVwiNjYuNTg4JVwiIHkxPVwiNDMuOCVcIiB4Mj1cIjExLjM2JVwiIHkyPVwiNjQuNDM5JVwiIGlkPVwiYlwiPlxuICAgICAgICA8c3RvcCBzdG9wQ29sb3I9XCIjMDBGRkEzXCIgb2Zmc2V0PVwiMCVcIiAvPlxuICAgICAgICA8c3RvcCBzdG9wQ29sb3I9XCIjREMxRkZGXCIgb2Zmc2V0PVwiMTAwJVwiIC8+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPGxpbmVhckdyYWRpZW50XG4gICAgICAgIHgxPVwiNzguNTg2JVwiXG4gICAgICAgIHkxPVwiMzkuMzE3JVwiXG4gICAgICAgIHgyPVwiMjMuMzU4JVwiXG4gICAgICAgIHkyPVwiNTkuOTU2JVwiXG4gICAgICAgIGlkPVwiY1wiXG4gICAgICA+XG4gICAgICAgIDxzdG9wIHN0b3BDb2xvcj1cIiMwMEZGQTNcIiBvZmZzZXQ9XCIwJVwiIC8+XG4gICAgICAgIDxzdG9wIHN0b3BDb2xvcj1cIiNEQzFGRkZcIiBvZmZzZXQ9XCIxMDAlXCIgLz5cbiAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG4gICAgPC9kZWZzPlxuICAgIDxnIGZpbGxSdWxlPVwibm9uemVyb1wiIGZpbGw9XCJub25lXCI+XG4gICAgICA8cGF0aFxuICAgICAgICBkPVwiTTcuMjU2IDI2LjcxM2MuMjctLjI3LjY0LS40MjcgMS4wMzMtLjQyN2gzNS42NGEuNzMuNzMgMCAwIDEgLjUxNyAxLjI0N2wtNy4wNCA3LjA0Yy0uMjcuMjctLjY0LjQyNy0xLjAzNC40MjdILjczMmEuNzMuNzMgMCAwIDEtLjUxNi0xLjI0Nmw3LjA0LTcuMDRaXCJcbiAgICAgICAgZmlsbD1cInVybCgjYSlcIlxuICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLjk4KVwiXG4gICAgICAvPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD1cIk03LjI1Ni40MjdDNy41MzYuMTU3IDcuOTA3IDAgOC4yODkgMGgzNS42NGEuNzMuNzMgMCAwIDEgLjUxNyAxLjI0NmwtNy4wNCA3LjA0Yy0uMjcuMjctLjY0LjQyOC0xLjAzNC40MjhILjczMmEuNzMuNzMgMCAwIDEtLjUxNi0xLjI0N2w3LjA0LTcuMDRaXCJcbiAgICAgICAgZmlsbD1cInVybCgjYilcIlxuICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLjk4KVwiXG4gICAgICAvPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD1cIk0zNy40MDUgMTMuNDg2Yy0uMjctLjI3LS42NC0uNDI3LTEuMDMzLS40MjdILjczMmEuNzMuNzMgMCAwIDAtLjUxNiAxLjI0Nmw3LjA0IDcuMDRjLjI3LjI3LjY0LjQyOCAxLjAzMy40MjhoMzUuNjRhLjczLjczIDAgMCAwIC41MTctMS4yNDdsLTcuMDQtNy4wNFpcIlxuICAgICAgICBmaWxsPVwidXJsKCNjKVwiXG4gICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSguOTgpXCJcbiAgICAgIC8+XG4gICAgPC9nPlxuICA8L3N2Zz5cbik7XG4iXSwibmFtZXMiOlsiU29sYW5hTG9nbyIsInN2ZyIsIndpZHRoIiwiaGVpZ2h0IiwieG1sbnMiLCJjbGFzc05hbWUiLCJkZWZzIiwibGluZWFyR3JhZGllbnQiLCJ4MSIsInkxIiwieDIiLCJ5MiIsImlkIiwic3RvcCIsInN0b3BDb2xvciIsIm9mZnNldCIsImciLCJmaWxsUnVsZSIsImZpbGwiLCJwYXRoIiwiZCIsInRyYW5zZm9ybSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/SolanaLogo.tsx\n");

/***/ }),

/***/ "./src/components/index.tsx":
/*!**********************************!*\
  !*** ./src/components/index.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Loader\": function() { return /* reexport safe */ _Loader__WEBPACK_IMPORTED_MODULE_0__.Loader; },\n/* harmony export */   \"SolanaLogo\": function() { return /* reexport safe */ _SolanaLogo__WEBPACK_IMPORTED_MODULE_1__.SolanaLogo; },\n/* harmony export */   \"SelectAndConnectWalletButton\": function() { return /* reexport safe */ _SelectAndConnectWalletButton__WEBPACK_IMPORTED_MODULE_2__.SelectAndConnectWalletButton; }\n/* harmony export */ });\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loader */ \"./src/components/Loader.tsx\");\n/* harmony import */ var _SolanaLogo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SolanaLogo */ \"./src/components/SolanaLogo.tsx\");\n/* harmony import */ var _SelectAndConnectWalletButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectAndConnectWalletButton */ \"./src/components/SelectAndConnectWalletButton.tsx\");\n\n\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ1E7QUFDb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvaW5kZXgudHN4PzQxNGUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgTG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVyXCI7XG5leHBvcnQgeyBTb2xhbmFMb2dvIH0gZnJvbSBcIi4vU29sYW5hTG9nb1wiO1xuZXhwb3J0IHsgU2VsZWN0QW5kQ29ubmVjdFdhbGxldEJ1dHRvbiB9IGZyb20gXCIuL1NlbGVjdEFuZENvbm5lY3RXYWxsZXRCdXR0b25cIjtcbiJdLCJuYW1lcyI6WyJMb2FkZXIiLCJTb2xhbmFMb2dvIiwiU2VsZWN0QW5kQ29ubmVjdFdhbGxldEJ1dHRvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/index.tsx\n");

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var views__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! views */ \"./src/views/index.tsx\");\n\n\n\nvar _this = undefined;\nvar Home = function(props) {\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"SolanaSwap\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/pages/index.tsx\",\n                        lineNumber: 9,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"A demo site for Remi\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/pages/index.tsx\",\n                        lineNumber: 10,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/pages/index.tsx\",\n                lineNumber: 8,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(views__WEBPACK_IMPORTED_MODULE_2__.SolanaSwapView, {}, void 0, false, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/pages/index.tsx\",\n                lineNumber: 15,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/pages/index.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, _this));\n};\n_c = Home;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDNEI7QUFDVTs7QUFFdEMsR0FBSyxDQUFDRSxJQUFJLEdBQWEsUUFBUSxDQUFQQyxLQUFLLEVBQUssQ0FBQztJQUNqQyxNQUFNLDZFQUNIQyxDQUFHOzt3RkFDREosa0RBQUk7O2dHQUNGSyxDQUFLO2tDQUFDLENBQVU7Ozs7OztnR0FDaEJDLENBQUk7d0JBQ0hDLElBQUksRUFBQyxDQUFhO3dCQUNsQkMsT0FBTyxFQUFDLENBQXNCOzs7Ozs7Ozs7Ozs7d0ZBR2pDUCxpREFBYzs7Ozs7Ozs7Ozs7QUFHckIsQ0FBQztLQWJLQyxJQUFJO0FBZVYsK0RBQWVBLElBQUksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvaW5kZXgudHN4PzE5YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0UGFnZSB9IGZyb20gXCJuZXh0XCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgeyBTb2xhbmFTd2FwVmlldyB9IGZyb20gXCJ2aWV3c1wiO1xuXG5jb25zdCBIb21lOiBOZXh0UGFnZSA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPlNvbGFuYVN3YXA8L3RpdGxlPlxuICAgICAgICA8bWV0YVxuICAgICAgICAgIG5hbWU9XCJkZXNjcmlwdGlvblwiXG4gICAgICAgICAgY29udGVudD1cIkEgZGVtbyBzaXRlIGZvciBSZW1pXCJcbiAgICAgICAgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxTb2xhbmFTd2FwVmlldyAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSG9tZTtcbiJdLCJuYW1lcyI6WyJIZWFkIiwiU29sYW5hU3dhcFZpZXciLCJIb21lIiwicHJvcHMiLCJkaXYiLCJ0aXRsZSIsIm1ldGEiLCJuYW1lIiwiY29udGVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/data.ts":
/*!******************************************!*\
  !*** ./src/views/SolanaSwapView/data.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"env\": function() { return /* binding */ env; }\n/* harmony export */ });\nvar env = {\n    \"swap_token\": \"5XzHzDAodUPDsXsXGHUJby7U3Ydepu5Ufd65hPece3vw\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvU29sYW5hU3dhcFZpZXcvZGF0YS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sR0FBSyxDQUFDQSxHQUFHLEdBQUcsQ0FBQztJQUNoQixDQUFZLGFBQUUsQ0FBOEM7QUFDaEUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvdmlld3MvU29sYW5hU3dhcFZpZXcvZGF0YS50cz9iMDMyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlbnYgPSB7XG4gICAgXCJzd2FwX3Rva2VuXCI6IFwiNVh6SHpEQW9kVVBEc1hzWEdIVUpieTdVM1lkZXB1NVVmZDY1aFBlY2UzdndcIlxufSJdLCJuYW1lcyI6WyJlbnYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/data.ts\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/index.tsx":
/*!********************************************!*\
  !*** ./src/views/SolanaSwapView/index.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SolanaSwapView\": function() { return /* binding */ SolanaSwapView; }\n/* harmony export */ });\n/* harmony import */ var _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react-ui */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/index.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! components */ \"./src/components/index.tsx\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @project-serum/anchor */ \"./node_modules/@project-serum/anchor/dist/browser/index.js\");\n/* harmony import */ var _index_module_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index.module.css */ \"./src/views/SolanaSwapView/index.module.css\");\n/* harmony import */ var _index_module_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_index_module_css__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _swap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./swap */ \"./src/views/SolanaSwapView/swap.ts\");\n/* harmony import */ var _useProgram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useProgram */ \"./src/views/SolanaSwapView/useProgram.ts\");\n\n\n\n\n\n\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _throw(e) {\n    throw e;\n}\nvar _this = undefined;\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\nvar endpoint = \"https://explorer-api.devnet.solana.com\";\nvar connection = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.Connection(endpoint);\nvar SolanaSwapView = function(param) {\n    var param = param !== null ? param : _throw(new TypeError(\"Cannot destructure undefined\"));\n    _s();\n    var wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__.useAnchorWallet)();\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"container mx-auto max-w-6xl p-8 2xl:px-0\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: (_index_module_css__WEBPACK_IMPORTED_MODULE_9___default().container),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    className: \"navbar mb-2 text-neutral-content rounded-box\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"flex-none\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                                className: \"btn btn-square btn-ghost\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                                    className: \"text-4xl\",\n                                    children: \"🌝\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                    lineNumber: 29,\n                                    columnNumber: 15\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 27,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"flex-1 px-2 mx-2\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                className: \"text-sm breadcrumbs\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"ul\", {\n                                    className: \"text-xl\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                    lineNumber: 34,\n                                    columnNumber: 15\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 33,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"flex-none\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_3__.WalletMultiButton, {\n                                className: \"btn btn-ghost\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 40,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 39,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 26,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    className: \"text-center pt-2\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"hero min-h-16 pt-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"text-center hero-content\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                className: \"max-w-[800px]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"h1\", {\n                                        className: \"mb-5 text-5xl\",\n                                        children: [\n                                            \"Swap between SOL and MOVE \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(components__WEBPACK_IMPORTED_MODULE_4__.SolanaLogo, {}, void 0, false, {\n                                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                                lineNumber: 49,\n                                                columnNumber: 45\n                                            }, _this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                        lineNumber: 48,\n                                        columnNumber: 17\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                                        children: \"1 SOL = 10 MOVE\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                        lineNumber: 52,\n                                        columnNumber: 17\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 47,\n                                columnNumber: 15\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 46,\n                            columnNumber: 13\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 11\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 44,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    className: \"flex justify-center\",\n                    children: !wallet ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(components__WEBPACK_IMPORTED_MODULE_4__.SelectAndConnectWalletButton, {\n                        onUseWalletClick: function() {}\n                    }, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                        lineNumber: 62,\n                        columnNumber: 13\n                    }, _this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(SwapScreen, {}, void 0, false, {\n                        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                        lineNumber: 64,\n                        columnNumber: 13\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 60,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n        lineNumber: 24,\n        columnNumber: 5\n    }, _this));\n};\n_s(SolanaSwapView, \"LXWEF/NtXbFn+/uJYraKGQdvW1I=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__.useAnchorWallet\n    ];\n});\n_c = SolanaSwapView;\nvar SwapScreen = function() {\n    _s1();\n    var wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__.useAnchorWallet)();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]), swaps = ref[0], setSwaps = ref[1];\n    var program = (0,_useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram)({\n        connection: connection,\n        wallet: wallet\n    }).program;\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(), lastUpdatedTime = ref1[0], setLastUpdatedTime = ref1[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function() {}, [\n        wallet,\n        lastUpdatedTime\n    ]);\n    var onSwapSent = function(swapEvent) {\n        setSwaps(function(prevState) {\n            return _objectSpread({}, prevState, {\n                swapEvent: swapEvent\n            });\n        });\n    };\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"rounded-lg flex justify-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"flex flex-col items-center justify-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"text-xs\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(NetSwap, {\n                    onSwapSent: onSwapSent\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 97,\n                    columnNumber: 11\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                lineNumber: 96,\n                columnNumber: 9\n            }, _this)\n        }, void 0, false, {\n            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n            lineNumber: 95,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n        lineNumber: 93,\n        columnNumber: 5\n    }, _this));\n};\n_s1(SwapScreen, \"DQcMhM2qko8TH6vWRCQeTbb8RxQ=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__.useAnchorWallet,\n        _useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram\n    ];\n});\n_c1 = SwapScreen;\nvar NetSwap = function(param) {\n    var onSwapSent = param.onSwapSent;\n    var isNumeric = // console.log(value)\n    function isNumeric(value) {\n        return /^[0-9]{0,9}(\\.[0-9]{1,2})?$/.test(value);\n    };\n    _s2();\n    var wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__.useAnchorWallet)();\n    var program = (0,_useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram)({\n        connection: connection,\n        wallet: wallet\n    }).program;\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true), isBuyMove = ref[0], setIsBuyMove = ref[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0), amount = ref2[0], setAmount = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0), swapAmount = ref3[0], setSwapAmount = ref3[1];\n    // const [value, setValue] = useState<any>(0)\n    // const onContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    //   const { value } = e.target;\n    //   if (value) {\n    //     setContent(value);\n    //   }\n    // };\n    var onSwapClick = function() {\n        var _ref = _asyncToGenerator(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var value, result;\n            return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (program) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 2:\n                        ;\n                        ;\n                        if (!isBuyMove) {\n                            _ctx.next = 11;\n                            break;\n                        }\n                        value = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(Number(amount) * Math.pow(10, 9));\n                        _ctx.next = 8;\n                        return (0,_swap__WEBPACK_IMPORTED_MODULE_6__.buy_move)({\n                            program: program,\n                            wallet: wallet,\n                            amount: value\n                        });\n                    case 8:\n                        result = _ctx.sent;\n                        _ctx.next = 15;\n                        break;\n                    case 11:\n                        value = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(Number(amount) * Math.pow(10, 6));\n                        _ctx.next = 14;\n                        return (0,_swap__WEBPACK_IMPORTED_MODULE_6__.sell_move)({\n                            program: program,\n                            wallet: wallet,\n                            amount: value\n                        });\n                    case 14:\n                        result = _ctx.sent;\n                    case 15:\n                        console.log(\"New swap transaction succeeded: \", result);\n                        setSwapAmount(\"\");\n                        setAmount(\"\");\n                        onSwapSent(result);\n                    case 19:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function onSwapClick() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var onChangeClick = function() {\n        setIsBuyMove(!isBuyMove);\n        setSwapAmount(\"\");\n        setAmount(\"\");\n    };\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        style: {\n            minWidth: 240\n        },\n        className: \"mb-8 pb-4 border-b border-gray-500 flex \",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"w-full flex flex-col items-center \",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"input\", {\n                    value: amount == 0 ? \"\" : amount,\n                    onChange: function(e) {\n                        var value = e.target.value;\n                        console.log(value);\n                        setAmount(value);\n                        if (isBuyMove) {\n                            setSwapAmount(Number(value) * 10);\n                        } else {\n                            setSwapAmount(Number(value) / 10);\n                        }\n                    },\n                    placeholder: isBuyMove ? \"Enter the SOL amount\" : \"Enter the MOVE amount\",\n                    className: \"mb-4\"\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 167,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case\",\n                    onClick: onChangeClick,\n                    style: {\n                        minHeight: 0,\n                        marginBottom: 15,\n                        fontSize: 20\n                    },\n                    children: \"↓\"\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 179,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"input\", {\n                    value: amount == 0 ? \"\" : swapAmount,\n                    disabled: true,\n                    placeholder: isBuyMove ? \"MOVE amount\" : \"SOL amount\",\n                    className: \"mb-4\"\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 186,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: onSwapClick,\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"Swap\"\n                }, void 0, false, {\n                    fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 188,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n            lineNumber: 166,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/nhatminhphan/Desktop/Code/Solana/solana-swap/app/src/views/SolanaSwapView/index.tsx\",\n        lineNumber: 164,\n        columnNumber: 5\n    }, _this));\n};\n_s2(NetSwap, \"7Gf0ED9ArUcIjtmY0J0B6DSaTzY=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_8__.useAnchorWallet,\n        _useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram\n    ];\n});\n_c2 = NetSwap;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"SolanaSwapView\");\n$RefreshReg$(_c1, \"SwapScreen\");\n$RefreshReg$(_c2, \"NetSwap\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/index.tsx\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/solana_swap.ts":
/*!*************************************************!*\
  !*** ./src/views/SolanaSwapView/solana_swap.ts ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IDL\": function() { return /* binding */ IDL; }\n/* harmony export */ });\nvar IDL = {\n    \"version\": \"0.1.0\",\n    \"name\": \"solana_swap\",\n    \"instructions\": [\n        {\n            \"name\": \"initialize\",\n            \"accounts\": [\n                {\n                    \"name\": \"controller\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"escrow\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"signer\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"tokenMint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"movePerSol\",\n                    \"type\": \"u8\"\n                },\n                {\n                    \"name\": \"decimal\",\n                    \"type\": \"u8\"\n                }\n            ]\n        },\n        {\n            \"name\": \"buyMove\",\n            \"accounts\": [\n                {\n                    \"name\": \"user\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"tokenMint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"controller\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"escrow\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"userTokenAccount\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"sellMove\",\n            \"accounts\": [\n                {\n                    \"name\": \"user\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"tokenMint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"controller\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"escrow\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"userTokenAccount\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"depositLiquidity\",\n            \"accounts\": [\n                {\n                    \"name\": \"authorizer\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"tokenMint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"controller\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"escrow\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"userTokenAccount\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"removeLiquidity\",\n            \"accounts\": [\n                {\n                    \"name\": \"authorizer\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"tokenMint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"controller\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"escrow\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"userTokenAccount\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\"\n                }\n            ]\n        }\n    ],\n    \"accounts\": [\n        {\n            \"name\": \"controller\",\n            \"type\": {\n                \"kind\": \"struct\",\n                \"fields\": [\n                    {\n                        \"name\": \"authorizer\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"movePerSol\",\n                        \"type\": \"u8\"\n                    },\n                    {\n                        \"name\": \"decimal\",\n                        \"type\": \"u8\"\n                    },\n                    {\n                        \"name\": \"token0Amount\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"token1Amount\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"bump\",\n                        \"type\": \"u8\"\n                    },\n                    {\n                        \"name\": \"escrowBump\",\n                        \"type\": \"u8\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": 6000,\n            \"name\": \"InvalidPrice\"\n        },\n        {\n            \"code\": 6001,\n            \"name\": \"InvalidID\"\n        },\n        {\n            \"code\": 6002,\n            \"name\": \"InsufficientFund\"\n        }\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/solana_swap.ts\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/swap.ts":
/*!******************************************!*\
  !*** ./src/views/SolanaSwapView/swap.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buy_move\": function() { return /* binding */ buy_move; },\n/* harmony export */   \"sell_move\": function() { return /* binding */ sell_move; }\n/* harmony export */ });\n/* harmony import */ var _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @project-serum/anchor */ \"./node_modules/@project-serum/anchor/dist/browser/index.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/spl-token */ \"./node_modules/@solana/spl-token/lib/esm/index.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./src/views/SolanaSwapView/data.ts\");\n\n\n\n\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar tokenMint = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(_data__WEBPACK_IMPORTED_MODULE_2__.env.swap_token);\nvar CONTROLLER_SEED = \"controller\";\nvar ESCROW_SEED = \"escrow\";\nvar getAtaAccount = function() {\n    var _ref = _asyncToGenerator(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(wallet) {\n        var userAssociatedTokenAccount;\n        return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.next = 2;\n                    return _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddress(tokenMint, wallet);\n                case 2:\n                    userAssociatedTokenAccount = _ctx.sent;\n                    return _ctx.abrupt(\"return\", userAssociatedTokenAccount);\n                case 4:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function getAtaAccount(wallet) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getControllerPDA = function() {\n    var _ref = _asyncToGenerator(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(program) {\n        var ref, pda, bump;\n        return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey.findProgramAddressSync([\n                        _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.utils.bytes.utf8.encode(CONTROLLER_SEED), \n                    ], program.programId), 2), pda = ref[0], bump = ref[1];\n                    return _ctx.abrupt(\"return\", {\n                        key: pda,\n                        bump: bump\n                    });\n                case 2:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function getControllerPDA(program) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getEscrowPDA = function() {\n    var _ref = _asyncToGenerator(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(program) {\n        var ref, pda, bump;\n        return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey.findProgramAddressSync([\n                        _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.utils.bytes.utf8.encode(ESCROW_SEED)\n                    ], program.programId), 2), pda = ref[0], bump = ref[1];\n                    return _ctx.abrupt(\"return\", {\n                        key: pda,\n                        bump: bump\n                    });\n                case 2:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function getEscrowPDA(program) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar buy_move = function() {\n    var _ref = _asyncToGenerator(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(param) {\n        var program, wallet, amount, controllerPDA, escrowPDA, userTokenAccount, result;\n        return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    program = param.program, wallet = param.wallet, amount = param.amount;\n                    _ctx.next = 3;\n                    return getControllerPDA(program);\n                case 3:\n                    controllerPDA = _ctx.sent;\n                    _ctx.next = 6;\n                    return getEscrowPDA(program);\n                case 6:\n                    escrowPDA = _ctx.sent;\n                    _ctx.next = 9;\n                    return getAtaAccount(wallet.publicKey);\n                case 9:\n                    userTokenAccount = _ctx.sent;\n                    console.log(wallet);\n                    console.log(amount);\n                    console.log(\"Program id: \".concat(program.programId.toBase58()));\n                    _ctx.next = 15;\n                    return program.methods.buyMove(amount).accounts({\n                        user: wallet.publicKey,\n                        tokenMint: tokenMint,\n                        controller: controllerPDA.key,\n                        escrow: escrowPDA.key,\n                        userTokenAccount: userTokenAccount,\n                        systemProgram: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.SystemProgram.programId,\n                        rent: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.SYSVAR_RENT_PUBKEY,\n                        tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID,\n                        associatedTokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.ASSOCIATED_TOKEN_PROGRAM_ID\n                    }).signers([]).rpc();\n                case 15:\n                    result = _ctx.sent;\n                    return _ctx.abrupt(\"return\", result);\n                case 17:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function buy_move(_) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar sell_move = function() {\n    var _ref = _asyncToGenerator(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(param) {\n        var program, wallet, amount, controllerPDA, escrowPDA, userTokenAccount, result;\n        return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    program = param.program, wallet = param.wallet, amount = param.amount;\n                    _ctx.next = 3;\n                    return getControllerPDA(program);\n                case 3:\n                    controllerPDA = _ctx.sent;\n                    _ctx.next = 6;\n                    return getEscrowPDA(program);\n                case 6:\n                    escrowPDA = _ctx.sent;\n                    _ctx.next = 9;\n                    return getAtaAccount(wallet.publicKey);\n                case 9:\n                    userTokenAccount = _ctx.sent;\n                    console.log(wallet);\n                    console.log(amount);\n                    console.log(\"User Token Account: \".concat(userTokenAccount.toString()));\n                    console.log(\"escrowPDA: \".concat(escrowPDA.key.toString()));\n                    console.log(\"controllerPDA: \".concat(controllerPDA.key.toString()));\n                    console.log(\"Program id: \".concat(program.programId.toBase58()));\n                    _ctx.next = 18;\n                    return program.methods.sellMove(amount).accounts({\n                        user: wallet.publicKey,\n                        tokenMint: tokenMint,\n                        controller: controllerPDA.key,\n                        escrow: escrowPDA.key,\n                        userTokenAccount: userTokenAccount,\n                        systemProgram: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.SystemProgram.programId,\n                        tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID,\n                        associatedTokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.ASSOCIATED_TOKEN_PROGRAM_ID\n                    }).signers([]).rpc();\n                case 18:\n                    result = _ctx.sent;\n                    return _ctx.abrupt(\"return\", result);\n                case 20:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function sell_move(_) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/swap.ts\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/useProgram.ts":
/*!************************************************!*\
  !*** ./src/views/SolanaSwapView/useProgram.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useProgram\": function() { return /* binding */ useProgram; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @project-serum/anchor */ \"./node_modules/@project-serum/anchor/dist/browser/index.js\");\n/* harmony import */ var _solana_dapp_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./solana-dapp.json */ \"./src/views/SolanaSwapView/solana-dapp.json\");\n/* harmony import */ var _solana_swap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./solana_swap */ \"./src/views/SolanaSwapView/solana_swap.ts\");\n\n\n\n\n\nvar useProgram = function(param) {\n    var connection = param.connection, wallet = param.wallet;\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), program1 = ref[0], setProgram = ref[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        updateProgram();\n        console.log(program1);\n    }, [\n        connection,\n        wallet\n    ]);\n    var updateProgram = function() {\n        var provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_2__.AnchorProvider(connection, wallet, {\n            preflightCommitment: \"recent\",\n            commitment: \"processed\"\n        });\n        console.log(\"provider\", provider);\n        var idl = _solana_swap__WEBPACK_IMPORTED_MODULE_4__.IDL;\n        //   const idl = await anchor.Program.fetchIdl(programID, provider);\n        //   console.log(\"idl\", idl);\n        var programID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(_solana_dapp_json__WEBPACK_IMPORTED_MODULE_3__.metadata.address);\n        var program = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_2__.Program(idl, programID, provider);\n        setProgram(program);\n    };\n    return {\n        program: program1\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvU29sYW5hU3dhcFZpZXcvdXNlUHJvZ3JhbS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJDO0FBQ1k7QUFDUjtBQUVWO0FBQ087QUFrQnJDLEdBQUssQ0FBQ00sVUFBVSxHQUFHLFFBQVEsUUFBa0MsQ0FBQztRQUF4Q0MsVUFBVSxTQUFWQSxVQUFVLEVBQUVDLE1BQU0sU0FBTkEsTUFBTTtJQUM3QyxHQUFLLENBQXlCUCxHQUFzQyxHQUF0Q0EsK0NBQVEsSUFBL0JRLFFBQU8sR0FBZ0JSLEdBQXNDLEtBQXBEUyxVQUFVLEdBQUlULEdBQXNDO0lBRXBFRCxnREFBUyxDQUFDLFFBQ1osR0FEa0IsQ0FBQztRQUNmVyxhQUFhO1FBQ2JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSixRQUFPO0lBQ3JCLENBQUMsRUFBRSxDQUFDRjtRQUFBQSxVQUFVO1FBQUVDLE1BQU07SUFBQSxDQUFDO0lBRXZCLEdBQUssQ0FBQ0csYUFBYSxHQUFHLFFBQ3hCLEdBRDhCLENBQUM7UUFDM0IsR0FBSyxDQUFDRyxRQUFRLEdBQUcsR0FBRyxDQUFDWCxpRUFBcUIsQ0FBQ0ksVUFBVSxFQUFFQyxNQUFNLEVBQUUsQ0FBQztZQUM5RFEsbUJBQW1CLEVBQUUsQ0FBUTtZQUM3QkMsVUFBVSxFQUFFLENBQVc7UUFDekIsQ0FBQztRQUNETCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFVLFdBQUVDLFFBQVE7UUFDaEMsR0FBSyxDQUFDSSxHQUFHLEdBQUdiLDZDQUFHO1FBRWYsRUFBb0U7UUFDcEUsRUFBNkI7UUFFN0IsR0FBSyxDQUFDYyxTQUFTLEdBQUcsR0FBRyxDQUFDakIsc0RBQVMsQ0FBQ0UsK0RBQXFCO1FBQ3JELEdBQUssQ0FBQ0ssT0FBTyxHQUFJLEdBQUcsQ0FBQ04sMERBQWMsQ0FBQ2UsR0FBRyxFQUFFQyxTQUFTLEVBQUVMLFFBQVE7UUFDNURKLFVBQVUsQ0FBQ0QsT0FBTztJQUNwQixDQUFDO0lBRUQsTUFBTSxDQUFDLENBQUM7UUFDTkEsT0FBTyxFQUFQQSxRQUFPO0lBQ1QsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3ZpZXdzL1NvbGFuYVN3YXBWaWV3L3VzZVByb2dyYW0udHM/OGMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDb25uZWN0aW9uLCBQdWJsaWNLZXkgfSBmcm9tIFwiQHNvbGFuYS93ZWIzLmpzXCI7XG5pbXBvcnQgKiBhcyBhbmNob3IgZnJvbSBcIkBwcm9qZWN0LXNlcnVtL2FuY2hvclwiO1xuXG5pbXBvcnQgZGF0YSBmcm9tIFwiLi9zb2xhbmEtZGFwcC5qc29uXCI7XG5pbXBvcnQge1NvbGFuYVN3YXAsSURMfSBmcm9tIFwiLi9zb2xhbmFfc3dhcFwiXG5cblxuZXhwb3J0IGludGVyZmFjZSBXYWxsZXQge1xuICBzaWduVHJhbnNhY3Rpb24oXG4gICAgdHg6IGFuY2hvci53ZWIzLlRyYW5zYWN0aW9uXG4gICk6IFByb21pc2U8YW5jaG9yLndlYjMuVHJhbnNhY3Rpb24+O1xuICBzaWduQWxsVHJhbnNhY3Rpb25zKFxuICAgIHR4czogYW5jaG9yLndlYjMuVHJhbnNhY3Rpb25bXVxuICApOiBQcm9taXNlPGFuY2hvci53ZWIzLlRyYW5zYWN0aW9uW10+O1xuICBwdWJsaWNLZXk6IGFuY2hvci53ZWIzLlB1YmxpY0tleTtcbn1cblxudHlwZSBQcm9ncmFtUHJvcHMgPSB7XG4gIGNvbm5lY3Rpb246IENvbm5lY3Rpb247XG4gIHdhbGxldDogV2FsbGV0O1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZVByb2dyYW0gPSAoeyBjb25uZWN0aW9uLCB3YWxsZXQgfTogUHJvZ3JhbVByb3BzKSA9PiB7XG4gIGNvbnN0IFtwcm9ncmFtLCBzZXRQcm9ncmFtXSA9IHVzZVN0YXRlPGFuY2hvci5Qcm9ncmFtPFNvbGFuYVN3YXA+PigpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgdXBkYXRlUHJvZ3JhbSgpO1xuICAgIGNvbnNvbGUubG9nKHByb2dyYW0pXG4gIH0sIFtjb25uZWN0aW9uLCB3YWxsZXRdKTtcblxuICBjb25zdCB1cGRhdGVQcm9ncmFtID0gKCkgPT4ge1xuICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGFuY2hvci5BbmNob3JQcm92aWRlcihjb25uZWN0aW9uLCB3YWxsZXQsIHtcbiAgICAgIHByZWZsaWdodENvbW1pdG1lbnQ6IFwicmVjZW50XCIsXG4gICAgICBjb21taXRtZW50OiBcInByb2Nlc3NlZFwiLFxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKFwicHJvdmlkZXJcIiwgcHJvdmlkZXIpO1xuICAgIGNvbnN0IGlkbCA9IElETDtcblxuICAgIC8vICAgY29uc3QgaWRsID0gYXdhaXQgYW5jaG9yLlByb2dyYW0uZmV0Y2hJZGwocHJvZ3JhbUlELCBwcm92aWRlcik7XG4gICAgLy8gICBjb25zb2xlLmxvZyhcImlkbFwiLCBpZGwpO1xuXG4gICAgY29uc3QgcHJvZ3JhbUlEID0gbmV3IFB1YmxpY0tleShkYXRhLm1ldGFkYXRhLmFkZHJlc3MpO1xuICAgIGNvbnN0IHByb2dyYW0gID0gbmV3IGFuY2hvci5Qcm9ncmFtKGlkbCwgcHJvZ3JhbUlELCBwcm92aWRlcik7XG4gICAgc2V0UHJvZ3JhbShwcm9ncmFtKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHByb2dyYW0sXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiUHVibGljS2V5IiwiYW5jaG9yIiwiZGF0YSIsIklETCIsInVzZVByb2dyYW0iLCJjb25uZWN0aW9uIiwid2FsbGV0IiwicHJvZ3JhbSIsInNldFByb2dyYW0iLCJ1cGRhdGVQcm9ncmFtIiwiY29uc29sZSIsImxvZyIsInByb3ZpZGVyIiwiQW5jaG9yUHJvdmlkZXIiLCJwcmVmbGlnaHRDb21taXRtZW50IiwiY29tbWl0bWVudCIsImlkbCIsInByb2dyYW1JRCIsIm1ldGFkYXRhIiwiYWRkcmVzcyIsIlByb2dyYW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/useProgram.ts\n");

/***/ }),

/***/ "./src/views/index.tsx":
/*!*****************************!*\
  !*** ./src/views/index.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SolanaSwapView\": function() { return /* reexport safe */ _SolanaSwapView__WEBPACK_IMPORTED_MODULE_0__.SolanaSwapView; }\n/* harmony export */ });\n/* harmony import */ var _SolanaSwapView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SolanaSwapView */ \"./src/views/SolanaSwapView/index.tsx\");\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy92aWV3cy9pbmRleC50c3g/Y2Y0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBTb2xhbmFTd2FwVmlldyB9IGZyb20gXCIuL1NvbGFuYVN3YXBWaWV3XCI7XG4iXSwibmFtZXMiOlsiU29sYW5hU3dhcFZpZXciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/views/index.tsx\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js":
/*!********************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Button\": function() { return /* binding */ Button; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar Button = function(props) {\n    var justifyContent = props.endIcon || props.startIcon ? 'space-between' : 'center';\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n        className: \"wallet-adapter-button \".concat(props.className || ''),\n        disabled: props.disabled,\n        onClick: props.onClick,\n        style: Object.assign({\n            justifyContent: justifyContent\n        }, props.style),\n        tabIndex: props.tabIndex || 0,\n        type: \"button\"\n    }, props.startIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n        className: \"wallet-adapter-button-start-icon\"\n    }, props.startIcon), props.children, props.endIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n        className: \"wallet-adapter-button-end-icon\"\n    }, props.endIcon)));\n}; //# sourceMappingURL=Button.js.map\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvQnV0dG9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QjtBQUNsQixHQUFLLENBQUNDLE1BQU0sR0FBRyxRQUFRLENBQVBDLEtBQUssRUFBSyxDQUFDO0lBQzlCLEdBQUssQ0FBQ0MsY0FBYyxHQUFHRCxLQUFLLENBQUNFLE9BQU8sSUFBSUYsS0FBSyxDQUFDRyxTQUFTLEdBQUcsQ0FBZSxpQkFBRyxDQUFRO0lBQ3BGLE1BQU0sZUFBRUwsMERBQW1CLENBQUMsQ0FBUSxTQUFFLENBQUM7UUFBQ08sU0FBUyxFQUFHLENBQXNCLHdCQUF3QixPQUF0QkwsS0FBSyxDQUFDSyxTQUFTLElBQUksQ0FBRTtRQUFJQyxRQUFRLEVBQUVOLEtBQUssQ0FBQ00sUUFBUTtRQUFFQyxPQUFPLEVBQUVQLEtBQUssQ0FBQ08sT0FBTztRQUFFQyxLQUFLLEVBQUVDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7WUFBQ1QsY0FBYyxFQUFkQSxjQUFjO1FBQUMsQ0FBQyxFQUFFRCxLQUFLLENBQUNRLEtBQUs7UUFBR0csUUFBUSxFQUFFWCxLQUFLLENBQUNXLFFBQVEsSUFBSSxDQUFDO1FBQUVDLElBQUksRUFBRSxDQUFRO0lBQUMsQ0FBQyxFQUN6UFosS0FBSyxDQUFDRyxTQUFTLGtCQUFJTCwwREFBbUIsQ0FBQyxDQUFHLElBQUUsQ0FBQztRQUFDTyxTQUFTLEVBQUUsQ0FBa0M7SUFBQyxDQUFDLEVBQUVMLEtBQUssQ0FBQ0csU0FBUyxHQUM5R0gsS0FBSyxDQUFDYSxRQUFRLEVBQ2RiLEtBQUssQ0FBQ0UsT0FBTyxrQkFBSUosMERBQW1CLENBQUMsQ0FBRyxJQUFFLENBQUM7UUFBQ08sU0FBUyxFQUFFLENBQWdDO0lBQUMsQ0FBQyxFQUFFTCxLQUFLLENBQUNFLE9BQU87QUFDaEgsQ0FBQyxDQUNELENBQWtDO0tBUHJCSCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpL2xpYi9CdXR0b24uanM/OTYwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGp1c3RpZnlDb250ZW50ID0gcHJvcHMuZW5kSWNvbiB8fCBwcm9wcy5zdGFydEljb24gPyAnc3BhY2UtYmV0d2VlbicgOiAnY2VudGVyJztcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzc05hbWU6IGB3YWxsZXQtYWRhcHRlci1idXR0b24gJHtwcm9wcy5jbGFzc05hbWUgfHwgJyd9YCwgZGlzYWJsZWQ6IHByb3BzLmRpc2FibGVkLCBvbkNsaWNrOiBwcm9wcy5vbkNsaWNrLCBzdHlsZTogT2JqZWN0LmFzc2lnbih7IGp1c3RpZnlDb250ZW50IH0sIHByb3BzLnN0eWxlKSwgdGFiSW5kZXg6IHByb3BzLnRhYkluZGV4IHx8IDAsIHR5cGU6IFwiYnV0dG9uXCIgfSxcbiAgICAgICAgcHJvcHMuc3RhcnRJY29uICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpXCIsIHsgY2xhc3NOYW1lOiBcIndhbGxldC1hZGFwdGVyLWJ1dHRvbi1zdGFydC1pY29uXCIgfSwgcHJvcHMuc3RhcnRJY29uKSxcbiAgICAgICAgcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIHByb3BzLmVuZEljb24gJiYgUmVhY3QuY3JlYXRlRWxlbWVudChcImlcIiwgeyBjbGFzc05hbWU6IFwid2FsbGV0LWFkYXB0ZXItYnV0dG9uLWVuZC1pY29uXCIgfSwgcHJvcHMuZW5kSWNvbikpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CdXR0b24uanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwiQnV0dG9uIiwicHJvcHMiLCJqdXN0aWZ5Q29udGVudCIsImVuZEljb24iLCJzdGFydEljb24iLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwic3R5bGUiLCJPYmplY3QiLCJhc3NpZ24iLCJ0YWJJbmRleCIsInR5cGUiLCJjaGlsZHJlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/Collapse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/Collapse.js ***!
  \**********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Collapse\": function() { return /* binding */ Collapse; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar _s = $RefreshSig$();\nvar Collapse = function(param) {\n    var id = param.id, children = param.children, _expanded = param.expanded, expanded = _expanded === void 0 ? false : _expanded;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var instant = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    var transition = 'height 250ms ease-out';\n    var openCollapse = function() {\n        var node = ref.current;\n        if (!node) return;\n        requestAnimationFrame(function() {\n            node.style.height = node.scrollHeight + 'px';\n        });\n    };\n    var closeCollapse = function() {\n        var node = ref.current;\n        if (!node) return;\n        requestAnimationFrame(function() {\n            node.style.height = node.offsetHeight + 'px';\n            node.style.overflow = 'hidden';\n            requestAnimationFrame(function() {\n                node.style.height = '0';\n            });\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function() {\n        if (expanded) {\n            openCollapse();\n        } else {\n            closeCollapse();\n        }\n    }, [\n        expanded\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function() {\n        var handleComplete = function handleComplete() {\n            if (!node) return;\n            node.style.overflow = expanded ? 'initial' : 'hidden';\n            if (expanded) {\n                node.style.height = 'auto';\n            }\n        };\n        var handleTransitionEnd = function handleTransitionEnd(event) {\n            if (node && event.target === node && event.propertyName === 'height') {\n                handleComplete();\n            }\n        };\n        var node = ref.current;\n        if (!node) return;\n        if (instant.current) {\n            handleComplete();\n            instant.current = false;\n        }\n        node.addEventListener('transitionend', handleTransitionEnd);\n        return function() {\n            return node.removeEventListener('transitionend', handleTransitionEnd);\n        };\n    }, [\n        expanded\n    ]);\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        children: children,\n        className: \"wallet-adapter-collapse\",\n        id: id,\n        ref: ref,\n        role: \"region\",\n        style: {\n            height: 0,\n            transition: instant.current ? undefined : transition\n        }\n    }));\n}; //# sourceMappingURL=Collapse.js.map\n_s(Collapse, \"iVvDfMWh3Dlo8MH4xQ8WiQ9G90E=\");\n_c = Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvQ29sbGFwc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEOztBQUMvQyxHQUFLLENBQUNHLFFBQVEsR0FBRyxRQUFRLFFBQWdDLENBQUM7UUFBdENDLEVBQUUsU0FBRkEsRUFBRSxFQUFFQyxRQUFRLFNBQVJBLFFBQVEsb0JBQUVDLFFBQVEsRUFBUkEsUUFBUSwwQkFBRyxLQUFLOztJQUNyRCxHQUFLLENBQUNDLEdBQUcsR0FBR0wsNkNBQU0sQ0FBQyxJQUFJO0lBQ3ZCLEdBQUssQ0FBQ00sT0FBTyxHQUFHTiw2Q0FBTSxDQUFDLElBQUk7SUFDM0IsR0FBSyxDQUFDTyxVQUFVLEdBQUcsQ0FBdUI7SUFDMUMsR0FBSyxDQUFDQyxZQUFZLEdBQUcsUUFDekIsR0FEK0IsQ0FBQztRQUN4QixHQUFLLENBQUNDLElBQUksR0FBR0osR0FBRyxDQUFDSyxPQUFPO1FBQ3hCLEVBQUUsR0FBR0QsSUFBSSxFQUNMLE1BQU07UUFDVkUscUJBQXFCLENBQUMsUUFDOUIsR0FEb0MsQ0FBQztZQUN6QkYsSUFBSSxDQUFDRyxLQUFLLENBQUNDLE1BQU0sR0FBR0osSUFBSSxDQUFDSyxZQUFZLEdBQUcsQ0FBSTtRQUNoRCxDQUFDO0lBQ0wsQ0FBQztJQUNELEdBQUssQ0FBQ0MsYUFBYSxHQUFHLFFBQzFCLEdBRGdDLENBQUM7UUFDekIsR0FBSyxDQUFDTixJQUFJLEdBQUdKLEdBQUcsQ0FBQ0ssT0FBTztRQUN4QixFQUFFLEdBQUdELElBQUksRUFDTCxNQUFNO1FBQ1ZFLHFCQUFxQixDQUFDLFFBQzlCLEdBRG9DLENBQUM7WUFDekJGLElBQUksQ0FBQ0csS0FBSyxDQUFDQyxNQUFNLEdBQUdKLElBQUksQ0FBQ08sWUFBWSxHQUFHLENBQUk7WUFDNUNQLElBQUksQ0FBQ0csS0FBSyxDQUFDSyxRQUFRLEdBQUcsQ0FBUTtZQUM5Qk4scUJBQXFCLENBQUMsUUFDbEMsR0FEd0MsQ0FBQztnQkFDekJGLElBQUksQ0FBQ0csS0FBSyxDQUFDQyxNQUFNLEdBQUcsQ0FBRztZQUMzQixDQUFDO1FBQ0wsQ0FBQztJQUNMLENBQUM7SUFDRGQsc0RBQWUsQ0FBQyxRQUNwQixHQUQwQixDQUFDO1FBQ25CLEVBQUUsRUFBRUssUUFBUSxFQUFFLENBQUM7WUFDWEksWUFBWTtRQUNoQixDQUFDLE1BQ0ksQ0FBQztZQUNGTyxhQUFhO1FBQ2pCLENBQUM7SUFDTCxDQUFDLEVBQUUsQ0FBQ1g7UUFBQUEsUUFBUTtJQUFBLENBQUM7SUFDYkwsc0RBQWUsQ0FBQyxRQUNwQixHQUQwQixDQUFDO1lBSVZtQixjQUFjLEdBQXZCLFFBQVEsQ0FBQ0EsY0FBYyxHQUFHLENBQUM7WUFDdkIsRUFBRSxHQUFHVCxJQUFJLEVBQ0wsTUFBTTtZQUNWQSxJQUFJLENBQUNHLEtBQUssQ0FBQ0ssUUFBUSxHQUFHYixRQUFRLEdBQUcsQ0FBUyxXQUFHLENBQVE7WUFDckQsRUFBRSxFQUFFQSxRQUFRLEVBQUUsQ0FBQztnQkFDWEssSUFBSSxDQUFDRyxLQUFLLENBQUNDLE1BQU0sR0FBRyxDQUFNO1lBQzlCLENBQUM7UUFDTCxDQUFDO1lBQ1FNLG1CQUFtQixHQUE1QixRQUFRLENBQUNBLG1CQUFtQixDQUFDQyxLQUFLLEVBQUUsQ0FBQztZQUNqQyxFQUFFLEVBQUVYLElBQUksSUFBSVcsS0FBSyxDQUFDQyxNQUFNLEtBQUtaLElBQUksSUFBSVcsS0FBSyxDQUFDRSxZQUFZLEtBQUssQ0FBUSxTQUFFLENBQUM7Z0JBQ25FSixjQUFjO1lBQ2xCLENBQUM7UUFDTCxDQUFDO1FBZkQsR0FBSyxDQUFDVCxJQUFJLEdBQUdKLEdBQUcsQ0FBQ0ssT0FBTztRQUN4QixFQUFFLEdBQUdELElBQUksRUFDTCxNQUFNO1FBY1YsRUFBRSxFQUFFSCxPQUFPLENBQUNJLE9BQU8sRUFBRSxDQUFDO1lBQ2xCUSxjQUFjO1lBQ2RaLE9BQU8sQ0FBQ0ksT0FBTyxHQUFHLEtBQUs7UUFDM0IsQ0FBQztRQUNERCxJQUFJLENBQUNjLGdCQUFnQixDQUFDLENBQWUsZ0JBQUVKLG1CQUFtQjtRQUMxRCxNQUFNLENBQUMsUUFBUTtZQUFGVixNQUFNLENBQU5BLElBQUksQ0FBQ2UsbUJBQW1CLENBQUMsQ0FBZSxnQkFBRUwsbUJBQW1COztJQUM5RSxDQUFDLEVBQUUsQ0FBQ2Y7UUFBQUEsUUFBUTtJQUFBLENBQUM7SUFDYixNQUFNLGVBQUVOLDBEQUFtQixDQUFDLENBQUssTUFBRSxDQUFDO1FBQUNLLFFBQVEsRUFBRUEsUUFBUTtRQUFFdUIsU0FBUyxFQUFFLENBQXlCO1FBQUV4QixFQUFFLEVBQUVBLEVBQUU7UUFBRUcsR0FBRyxFQUFFQSxHQUFHO1FBQUVzQixJQUFJLEVBQUUsQ0FBUTtRQUFFZixLQUFLLEVBQUUsQ0FBQztZQUFDQyxNQUFNLEVBQUUsQ0FBQztZQUFFTixVQUFVLEVBQUVELE9BQU8sQ0FBQ0ksT0FBTyxHQUFHa0IsU0FBUyxHQUFHckIsVUFBVTtRQUFDLENBQUM7SUFBQyxDQUFDO0FBQ2pOLENBQUMsQ0FDRCxDQUFvQztHQTFEdkJOLFFBQVE7S0FBUkEsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvQ29sbGFwc2UuanM/ODgwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlTGF5b3V0RWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5leHBvcnQgY29uc3QgQ29sbGFwc2UgPSAoeyBpZCwgY2hpbGRyZW4sIGV4cGFuZGVkID0gZmFsc2UgfSkgPT4ge1xuICAgIGNvbnN0IHJlZiA9IHVzZVJlZihudWxsKTtcbiAgICBjb25zdCBpbnN0YW50ID0gdXNlUmVmKHRydWUpO1xuICAgIGNvbnN0IHRyYW5zaXRpb24gPSAnaGVpZ2h0IDI1MG1zIGVhc2Utb3V0JztcbiAgICBjb25zdCBvcGVuQ29sbGFwc2UgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSByZWYuY3VycmVudDtcbiAgICAgICAgaWYgKCFub2RlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSBub2RlLnNjcm9sbEhlaWdodCArICdweCc7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgY2xvc2VDb2xsYXBzZSA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IHJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoIW5vZGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICBub2RlLnN0eWxlLmhlaWdodCA9IG5vZGUub2Zmc2V0SGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgIG5vZGUuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSAnMCc7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoZXhwYW5kZWQpIHtcbiAgICAgICAgICAgIG9wZW5Db2xsYXBzZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2xvc2VDb2xsYXBzZSgpO1xuICAgICAgICB9XG4gICAgfSwgW2V4cGFuZGVkXSk7XG4gICAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IHJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoIW5vZGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZUNvbXBsZXRlKCkge1xuICAgICAgICAgICAgaWYgKCFub2RlKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIG5vZGUuc3R5bGUub3ZlcmZsb3cgPSBleHBhbmRlZCA/ICdpbml0aWFsJyA6ICdoaWRkZW4nO1xuICAgICAgICAgICAgaWYgKGV4cGFuZGVkKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSAnYXV0byc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaGFuZGxlVHJhbnNpdGlvbkVuZChldmVudCkge1xuICAgICAgICAgICAgaWYgKG5vZGUgJiYgZXZlbnQudGFyZ2V0ID09PSBub2RlICYmIGV2ZW50LnByb3BlcnR5TmFtZSA9PT0gJ2hlaWdodCcpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVDb21wbGV0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpbnN0YW50LmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGhhbmRsZUNvbXBsZXRlKCk7XG4gICAgICAgICAgICBpbnN0YW50LmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVUcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgcmV0dXJuICgpID0+IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGhhbmRsZVRyYW5zaXRpb25FbmQpO1xuICAgIH0sIFtleHBhbmRlZF0pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNoaWxkcmVuOiBjaGlsZHJlbiwgY2xhc3NOYW1lOiBcIndhbGxldC1hZGFwdGVyLWNvbGxhcHNlXCIsIGlkOiBpZCwgcmVmOiByZWYsIHJvbGU6IFwicmVnaW9uXCIsIHN0eWxlOiB7IGhlaWdodDogMCwgdHJhbnNpdGlvbjogaW5zdGFudC5jdXJyZW50ID8gdW5kZWZpbmVkIDogdHJhbnNpdGlvbiB9IH0pKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xsYXBzZS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VSZWYiLCJDb2xsYXBzZSIsImlkIiwiY2hpbGRyZW4iLCJleHBhbmRlZCIsInJlZiIsImluc3RhbnQiLCJ0cmFuc2l0aW9uIiwib3BlbkNvbGxhcHNlIiwibm9kZSIsImN1cnJlbnQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzdHlsZSIsImhlaWdodCIsInNjcm9sbEhlaWdodCIsImNsb3NlQ29sbGFwc2UiLCJvZmZzZXRIZWlnaHQiLCJvdmVyZmxvdyIsImhhbmRsZUNvbXBsZXRlIiwiaGFuZGxlVHJhbnNpdGlvbkVuZCIsImV2ZW50IiwidGFyZ2V0IiwicHJvcGVydHlOYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwicm9sZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/Collapse.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletConnectButton.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletConnectButton.js ***!
  \*********************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletConnectButton\": function() { return /* binding */ WalletConnectButton; }\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\");\n/* harmony import */ var _WalletIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WalletIcon */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js\");\n\n\n\n\nvar _s = $RefreshSig$();\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar WalletConnectButton = function(_a) {\n    _s();\n    var children = _a.children, disabled = _a.disabled, onClick = _a.onClick, props = __rest(_a, [\n        \"children\",\n        \"disabled\",\n        \"onClick\"\n    ]);\n    var ref = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet)(), wallet = ref.wallet, connect = ref.connect, connecting = ref.connecting, connected = ref.connected;\n    var handleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        if (onClick) onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented) connect().catch(function() {});\n    }, [\n        onClick,\n        connect\n    ]);\n    var content = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        if (children) return children;\n        if (connecting) return 'Connecting ...';\n        if (connected) return 'Connected';\n        if (wallet) return 'Connect';\n        return 'Connect Wallet';\n    }, [\n        children,\n        connecting,\n        connected,\n        wallet\n    ]);\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, Object.assign({\n        className: \"wallet-adapter-button-trigger\",\n        disabled: disabled || !wallet || connecting || connected,\n        startIcon: wallet ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_WalletIcon__WEBPACK_IMPORTED_MODULE_2__.WalletIcon, {\n            wallet: wallet\n        }) : undefined,\n        onClick: handleClick\n    }, props), content));\n}; //# sourceMappingURL=WalletConnectButton.js.map\n_s(WalletConnectButton, \"Fp95544uTME5doBr6HZpmZHrt0E=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet\n    ];\n});\n_c = WalletConnectButton;\nvar _c;\n$RefreshReg$(_c, \"WalletConnectButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0Q29ubmVjdEJ1dHRvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFXd0Q7QUFDTDtBQUNsQjtBQUNROztBQWR6QyxHQUFHLENBQUNNLE1BQU0sR0FBSSxTQUFJLElBQUksU0FBSSxDQUFDQSxNQUFNLElBQUssUUFBUSxDQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRSxDQUFDO0lBQ25ELEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNWLEdBQUcsQ0FBRSxHQUFHLENBQUNDLENBQUMsSUFBSUgsQ0FBQyxDQUFFLEVBQUUsRUFBRUksTUFBTSxDQUFDQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUCxDQUFDLEVBQUVHLENBQUMsS0FBS0YsQ0FBQyxDQUFDTyxPQUFPLENBQUNMLENBQUMsSUFBSSxDQUFDLEVBQy9FRCxDQUFDLENBQUNDLENBQUMsSUFBSUgsQ0FBQyxDQUFDRyxDQUFDO0lBQ2QsRUFBRSxFQUFFSCxDQUFDLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQ0ksTUFBTSxDQUFDSyxxQkFBcUIsS0FBSyxDQUFVLFdBQy9ELEdBQUcsQ0FBRSxHQUFHLENBQUNDLENBQUMsR0FBRyxDQUFDLEVBQUVQLENBQUMsR0FBR0MsTUFBTSxDQUFDSyxxQkFBcUIsQ0FBQ1QsQ0FBQyxHQUFHVSxDQUFDLEdBQUdQLENBQUMsQ0FBQ1EsTUFBTSxFQUFFRCxDQUFDLEdBQUksQ0FBQztRQUNyRSxFQUFFLEVBQUVULENBQUMsQ0FBQ08sT0FBTyxDQUFDTCxDQUFDLENBQUNPLENBQUMsS0FBSyxDQUFDLElBQUlOLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDTyxvQkFBb0IsQ0FBQ0wsSUFBSSxDQUFDUCxDQUFDLEVBQUVHLENBQUMsQ0FBQ08sQ0FBQyxJQUN4RVIsQ0FBQyxDQUFDQyxDQUFDLENBQUNPLENBQUMsS0FBS1YsQ0FBQyxDQUFDRyxDQUFDLENBQUNPLENBQUM7SUFDdkIsQ0FBQztJQUNMLE1BQU0sQ0FBQ1IsQ0FBQztBQUNaLENBQUM7QUFLTSxHQUFLLENBQUNXLG1CQUFtQixHQUFHLFFBQVEsQ0FBUEMsRUFBRSxFQUFLLENBQUM7O0lBQ3hDLEdBQUcsQ0FBR0MsUUFBUSxHQUF3QkQsRUFBRSxDQUFsQ0MsUUFBUSxFQUFFQyxRQUFRLEdBQWNGLEVBQUUsQ0FBeEJFLFFBQVEsRUFBRUMsT0FBTyxHQUFLSCxFQUFFLENBQWRHLE9BQU8sRUFBU0MsS0FBSyxHQUFHbkIsTUFBTSxDQUFDZSxFQUFFLEVBQUUsQ0FBQztRQUFBLENBQVU7UUFBRSxDQUFVO1FBQUUsQ0FBUztJQUFBLENBQUM7SUFDaEcsR0FBSyxDQUE4Q3JCLEdBQVcsR0FBWEEsdUVBQVMsSUFBcEQwQixNQUFNLEdBQXFDMUIsR0FBVyxDQUF0RDBCLE1BQU0sRUFBRUMsT0FBTyxHQUE0QjNCLEdBQVcsQ0FBOUMyQixPQUFPLEVBQUVDLFVBQVUsR0FBZ0I1QixHQUFXLENBQXJDNEIsVUFBVSxFQUFFQyxTQUFTLEdBQUs3QixHQUFXLENBQXpCNkIsU0FBUztJQUM5QyxHQUFLLENBQUNDLFdBQVcsR0FBRzVCLGtEQUFXLENBQUMsUUFBUSxDQUFQNkIsS0FBSyxFQUFLLENBQUM7UUFDeEMsRUFBRSxFQUFFUCxPQUFPLEVBQ1BBLE9BQU8sQ0FBQ08sS0FBSztRQUNqQixFQUFnRTtRQUNoRSxFQUFFLEdBQUdBLEtBQUssQ0FBQ0MsZ0JBQWdCLEVBQ3ZCTCxPQUFPLEdBQUdNLEtBQUssQ0FBQyxRQUFRLEdBQUYsQ0FBQyxDQUFFO0lBQ2pDLENBQUMsRUFBRSxDQUFDVDtRQUFBQSxPQUFPO1FBQUVHLE9BQU87SUFBQSxDQUFDO0lBQ3JCLEdBQUssQ0FBQ08sT0FBTyxHQUFHL0IsOENBQU8sQ0FBQyxRQUM1QixHQURrQyxDQUFDO1FBQzNCLEVBQUUsRUFBRW1CLFFBQVEsRUFDUixNQUFNLENBQUNBLFFBQVE7UUFDbkIsRUFBRSxFQUFFTSxVQUFVLEVBQ1YsTUFBTSxDQUFDLENBQWdCO1FBQzNCLEVBQUUsRUFBRUMsU0FBUyxFQUNULE1BQU0sQ0FBQyxDQUFXO1FBQ3RCLEVBQUUsRUFBRUgsTUFBTSxFQUNOLE1BQU0sQ0FBQyxDQUFTO1FBQ3BCLE1BQU0sQ0FBQyxDQUFnQjtJQUMzQixDQUFDLEVBQUUsQ0FBQ0o7UUFBQUEsUUFBUTtRQUFFTSxVQUFVO1FBQUVDLFNBQVM7UUFBRUgsTUFBTTtJQUFBLENBQUM7SUFDNUMsTUFBTSxlQUFFekIsMERBQW1CLENBQUNHLDJDQUFNLEVBQUVPLE1BQU0sQ0FBQ3lCLE1BQU0sQ0FBQyxDQUFDO1FBQUNDLFNBQVMsRUFBRSxDQUErQjtRQUFFZCxRQUFRLEVBQUVBLFFBQVEsS0FBS0csTUFBTSxJQUFJRSxVQUFVLElBQUlDLFNBQVM7UUFBRVMsU0FBUyxFQUFFWixNQUFNLGlCQUFHekIsMERBQW1CLENBQUNJLG1EQUFVLEVBQUUsQ0FBQztZQUFDcUIsTUFBTSxFQUFFQSxNQUFNO1FBQUMsQ0FBQyxJQUFJYSxTQUFTO1FBQUVmLE9BQU8sRUFBRU0sV0FBVztJQUFDLENBQUMsRUFBRUwsS0FBSyxHQUFHUyxPQUFPO0FBQzFSLENBQUMsQ0FDRCxDQUErQztHQXZCbENkLG1CQUFtQjs7UUFFdUJwQixtRUFBUzs7O0tBRm5Eb0IsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpL2xpYi9XYWxsZXRDb25uZWN0QnV0dG9uLmpzPzRhMmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IHsgdXNlV2FsbGV0IH0gZnJvbSAnQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdCc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuL0J1dHRvbic7XG5pbXBvcnQgeyBXYWxsZXRJY29uIH0gZnJvbSAnLi9XYWxsZXRJY29uJztcbmV4cG9ydCBjb25zdCBXYWxsZXRDb25uZWN0QnV0dG9uID0gKF9hKSA9PiB7XG4gICAgdmFyIHsgY2hpbGRyZW4sIGRpc2FibGVkLCBvbkNsaWNrIH0gPSBfYSwgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcImNoaWxkcmVuXCIsIFwiZGlzYWJsZWRcIiwgXCJvbkNsaWNrXCJdKTtcbiAgICBjb25zdCB7IHdhbGxldCwgY29ubmVjdCwgY29ubmVjdGluZywgY29ubmVjdGVkIH0gPSB1c2VXYWxsZXQoKTtcbiAgICBjb25zdCBoYW5kbGVDbGljayA9IHVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBpZiAob25DbGljaylcbiAgICAgICAgICAgIG9uQ2xpY2soZXZlbnQpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZClcbiAgICAgICAgICAgIGNvbm5lY3QoKS5jYXRjaCgoKSA9PiB7IH0pO1xuICAgIH0sIFtvbkNsaWNrLCBjb25uZWN0XSk7XG4gICAgY29uc3QgY29udGVudCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoY2hpbGRyZW4pXG4gICAgICAgICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgICAgIGlmIChjb25uZWN0aW5nKVxuICAgICAgICAgICAgcmV0dXJuICdDb25uZWN0aW5nIC4uLic7XG4gICAgICAgIGlmIChjb25uZWN0ZWQpXG4gICAgICAgICAgICByZXR1cm4gJ0Nvbm5lY3RlZCc7XG4gICAgICAgIGlmICh3YWxsZXQpXG4gICAgICAgICAgICByZXR1cm4gJ0Nvbm5lY3QnO1xuICAgICAgICByZXR1cm4gJ0Nvbm5lY3QgV2FsbGV0JztcbiAgICB9LCBbY2hpbGRyZW4sIGNvbm5lY3RpbmcsIGNvbm5lY3RlZCwgd2FsbGV0XSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgT2JqZWN0LmFzc2lnbih7IGNsYXNzTmFtZTogXCJ3YWxsZXQtYWRhcHRlci1idXR0b24tdHJpZ2dlclwiLCBkaXNhYmxlZDogZGlzYWJsZWQgfHwgIXdhbGxldCB8fCBjb25uZWN0aW5nIHx8IGNvbm5lY3RlZCwgc3RhcnRJY29uOiB3YWxsZXQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KFdhbGxldEljb24sIHsgd2FsbGV0OiB3YWxsZXQgfSkgOiB1bmRlZmluZWQsIG9uQ2xpY2s6IGhhbmRsZUNsaWNrIH0sIHByb3BzKSwgY29udGVudCkpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdhbGxldENvbm5lY3RCdXR0b24uanMubWFwIl0sIm5hbWVzIjpbInVzZVdhbGxldCIsIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VNZW1vIiwiQnV0dG9uIiwiV2FsbGV0SWNvbiIsIl9fcmVzdCIsInMiLCJlIiwidCIsInAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaSIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiV2FsbGV0Q29ubmVjdEJ1dHRvbiIsIl9hIiwiY2hpbGRyZW4iLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJwcm9wcyIsIndhbGxldCIsImNvbm5lY3QiLCJjb25uZWN0aW5nIiwiY29ubmVjdGVkIiwiaGFuZGxlQ2xpY2siLCJldmVudCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJjYXRjaCIsImNvbnRlbnQiLCJjcmVhdGVFbGVtZW50IiwiYXNzaWduIiwiY2xhc3NOYW1lIiwic3RhcnRJY29uIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletConnectButton.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletDisconnectButton.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletDisconnectButton.js ***!
  \************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletDisconnectButton\": function() { return /* binding */ WalletDisconnectButton; }\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\");\n/* harmony import */ var _WalletIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WalletIcon */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js\");\n\n\n\n\nvar _s = $RefreshSig$();\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar WalletDisconnectButton = function(_a) {\n    _s();\n    var children = _a.children, disabled = _a.disabled, onClick = _a.onClick, props = __rest(_a, [\n        \"children\",\n        \"disabled\",\n        \"onClick\"\n    ]);\n    var ref = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet)(), wallet = ref.wallet, disconnect = ref.disconnect, disconnecting = ref.disconnecting;\n    var handleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        if (onClick) onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented) disconnect().catch(function() {});\n    }, [\n        onClick,\n        disconnect\n    ]);\n    var content = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        if (children) return children;\n        if (disconnecting) return 'Disconnecting ...';\n        if (wallet) return 'Disconnect';\n        return 'Disconnect Wallet';\n    }, [\n        children,\n        disconnecting,\n        wallet\n    ]);\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, Object.assign({\n        className: \"wallet-adapter-button-trigger\",\n        disabled: disabled || !wallet,\n        startIcon: wallet ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_WalletIcon__WEBPACK_IMPORTED_MODULE_2__.WalletIcon, {\n            wallet: wallet\n        }) : undefined,\n        onClick: handleClick\n    }, props), content));\n}; //# sourceMappingURL=WalletDisconnectButton.js.map\n_s(WalletDisconnectButton, \"eBY2eeGkcd7vzj1OReg2NIUIPE4=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet\n    ];\n});\n_c = WalletDisconnectButton;\nvar _c;\n$RefreshReg$(_c, \"WalletDisconnectButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0RGlzY29ubmVjdEJ1dHRvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFXd0Q7QUFDTDtBQUNsQjtBQUNROztBQWR6QyxHQUFHLENBQUNNLE1BQU0sR0FBSSxTQUFJLElBQUksU0FBSSxDQUFDQSxNQUFNLElBQUssUUFBUSxDQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRSxDQUFDO0lBQ25ELEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNWLEdBQUcsQ0FBRSxHQUFHLENBQUNDLENBQUMsSUFBSUgsQ0FBQyxDQUFFLEVBQUUsRUFBRUksTUFBTSxDQUFDQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUCxDQUFDLEVBQUVHLENBQUMsS0FBS0YsQ0FBQyxDQUFDTyxPQUFPLENBQUNMLENBQUMsSUFBSSxDQUFDLEVBQy9FRCxDQUFDLENBQUNDLENBQUMsSUFBSUgsQ0FBQyxDQUFDRyxDQUFDO0lBQ2QsRUFBRSxFQUFFSCxDQUFDLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQ0ksTUFBTSxDQUFDSyxxQkFBcUIsS0FBSyxDQUFVLFdBQy9ELEdBQUcsQ0FBRSxHQUFHLENBQUNDLENBQUMsR0FBRyxDQUFDLEVBQUVQLENBQUMsR0FBR0MsTUFBTSxDQUFDSyxxQkFBcUIsQ0FBQ1QsQ0FBQyxHQUFHVSxDQUFDLEdBQUdQLENBQUMsQ0FBQ1EsTUFBTSxFQUFFRCxDQUFDLEdBQUksQ0FBQztRQUNyRSxFQUFFLEVBQUVULENBQUMsQ0FBQ08sT0FBTyxDQUFDTCxDQUFDLENBQUNPLENBQUMsS0FBSyxDQUFDLElBQUlOLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDTyxvQkFBb0IsQ0FBQ0wsSUFBSSxDQUFDUCxDQUFDLEVBQUVHLENBQUMsQ0FBQ08sQ0FBQyxJQUN4RVIsQ0FBQyxDQUFDQyxDQUFDLENBQUNPLENBQUMsS0FBS1YsQ0FBQyxDQUFDRyxDQUFDLENBQUNPLENBQUM7SUFDdkIsQ0FBQztJQUNMLE1BQU0sQ0FBQ1IsQ0FBQztBQUNaLENBQUM7QUFLTSxHQUFLLENBQUNXLHNCQUFzQixHQUFHLFFBQVEsQ0FBUEMsRUFBRSxFQUFLLENBQUM7O0lBQzNDLEdBQUcsQ0FBR0MsUUFBUSxHQUF3QkQsRUFBRSxDQUFsQ0MsUUFBUSxFQUFFQyxRQUFRLEdBQWNGLEVBQUUsQ0FBeEJFLFFBQVEsRUFBRUMsT0FBTyxHQUFLSCxFQUFFLENBQWRHLE9BQU8sRUFBU0MsS0FBSyxHQUFHbkIsTUFBTSxDQUFDZSxFQUFFLEVBQUUsQ0FBQztRQUFBLENBQVU7UUFBRSxDQUFVO1FBQUUsQ0FBUztJQUFBLENBQUM7SUFDaEcsR0FBSyxDQUF5Q3JCLEdBQVcsR0FBWEEsdUVBQVMsSUFBL0MwQixNQUFNLEdBQWdDMUIsR0FBVyxDQUFqRDBCLE1BQU0sRUFBRUMsVUFBVSxHQUFvQjNCLEdBQVcsQ0FBekMyQixVQUFVLEVBQUVDLGFBQWEsR0FBSzVCLEdBQVcsQ0FBN0I0QixhQUFhO0lBQ3pDLEdBQUssQ0FBQ0MsV0FBVyxHQUFHM0Isa0RBQVcsQ0FBQyxRQUFRLENBQVA0QixLQUFLLEVBQUssQ0FBQztRQUN4QyxFQUFFLEVBQUVOLE9BQU8sRUFDUEEsT0FBTyxDQUFDTSxLQUFLO1FBQ2pCLEVBQWdFO1FBQ2hFLEVBQUUsR0FBR0EsS0FBSyxDQUFDQyxnQkFBZ0IsRUFDdkJKLFVBQVUsR0FBR0ssS0FBSyxDQUFDLFFBQVEsR0FBRixDQUFDLENBQUU7SUFDcEMsQ0FBQyxFQUFFLENBQUNSO1FBQUFBLE9BQU87UUFBRUcsVUFBVTtJQUFBLENBQUM7SUFDeEIsR0FBSyxDQUFDTSxPQUFPLEdBQUc5Qiw4Q0FBTyxDQUFDLFFBQzVCLEdBRGtDLENBQUM7UUFDM0IsRUFBRSxFQUFFbUIsUUFBUSxFQUNSLE1BQU0sQ0FBQ0EsUUFBUTtRQUNuQixFQUFFLEVBQUVNLGFBQWEsRUFDYixNQUFNLENBQUMsQ0FBbUI7UUFDOUIsRUFBRSxFQUFFRixNQUFNLEVBQ04sTUFBTSxDQUFDLENBQVk7UUFDdkIsTUFBTSxDQUFDLENBQW1CO0lBQzlCLENBQUMsRUFBRSxDQUFDSjtRQUFBQSxRQUFRO1FBQUVNLGFBQWE7UUFBRUYsTUFBTTtJQUFBLENBQUM7SUFDcEMsTUFBTSxlQUFFekIsMERBQW1CLENBQUNHLDJDQUFNLEVBQUVPLE1BQU0sQ0FBQ3dCLE1BQU0sQ0FBQyxDQUFDO1FBQUNDLFNBQVMsRUFBRSxDQUErQjtRQUFFYixRQUFRLEVBQUVBLFFBQVEsS0FBS0csTUFBTTtRQUFFVyxTQUFTLEVBQUVYLE1BQU0saUJBQUd6QiwwREFBbUIsQ0FBQ0ksbURBQVUsRUFBRSxDQUFDO1lBQUNxQixNQUFNLEVBQUVBLE1BQU07UUFBQyxDQUFDLElBQUlZLFNBQVM7UUFBRWQsT0FBTyxFQUFFSyxXQUFXO0lBQUMsQ0FBQyxFQUFFSixLQUFLLEdBQUdRLE9BQU87QUFDL1AsQ0FBQyxDQUNELENBQWtEO0dBckJyQ2Isc0JBQXNCOztRQUVlcEIsbUVBQVM7OztLQUY5Q29CLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0RGlzY29ubmVjdEJ1dHRvbi5qcz80ZGUxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCB7IHVzZVdhbGxldCB9IGZyb20gJ0Bzb2xhbmEvd2FsbGV0LWFkYXB0ZXItcmVhY3QnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IHsgV2FsbGV0SWNvbiB9IGZyb20gJy4vV2FsbGV0SWNvbic7XG5leHBvcnQgY29uc3QgV2FsbGV0RGlzY29ubmVjdEJ1dHRvbiA9IChfYSkgPT4ge1xuICAgIHZhciB7IGNoaWxkcmVuLCBkaXNhYmxlZCwgb25DbGljayB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjaGlsZHJlblwiLCBcImRpc2FibGVkXCIsIFwib25DbGlja1wiXSk7XG4gICAgY29uc3QgeyB3YWxsZXQsIGRpc2Nvbm5lY3QsIGRpc2Nvbm5lY3RpbmcgfSA9IHVzZVdhbGxldCgpO1xuICAgIGNvbnN0IGhhbmRsZUNsaWNrID0gdXNlQ2FsbGJhY2soKGV2ZW50KSA9PiB7XG4gICAgICAgIGlmIChvbkNsaWNrKVxuICAgICAgICAgICAgb25DbGljayhldmVudCk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkKVxuICAgICAgICAgICAgZGlzY29ubmVjdCgpLmNhdGNoKCgpID0+IHsgfSk7XG4gICAgfSwgW29uQ2xpY2ssIGRpc2Nvbm5lY3RdKTtcbiAgICBjb25zdCBjb250ZW50ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmIChjaGlsZHJlbilcbiAgICAgICAgICAgIHJldHVybiBjaGlsZHJlbjtcbiAgICAgICAgaWYgKGRpc2Nvbm5lY3RpbmcpXG4gICAgICAgICAgICByZXR1cm4gJ0Rpc2Nvbm5lY3RpbmcgLi4uJztcbiAgICAgICAgaWYgKHdhbGxldClcbiAgICAgICAgICAgIHJldHVybiAnRGlzY29ubmVjdCc7XG4gICAgICAgIHJldHVybiAnRGlzY29ubmVjdCBXYWxsZXQnO1xuICAgIH0sIFtjaGlsZHJlbiwgZGlzY29ubmVjdGluZywgd2FsbGV0XSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgT2JqZWN0LmFzc2lnbih7IGNsYXNzTmFtZTogXCJ3YWxsZXQtYWRhcHRlci1idXR0b24tdHJpZ2dlclwiLCBkaXNhYmxlZDogZGlzYWJsZWQgfHwgIXdhbGxldCwgc3RhcnRJY29uOiB3YWxsZXQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KFdhbGxldEljb24sIHsgd2FsbGV0OiB3YWxsZXQgfSkgOiB1bmRlZmluZWQsIG9uQ2xpY2s6IGhhbmRsZUNsaWNrIH0sIHByb3BzKSwgY29udGVudCkpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdhbGxldERpc2Nvbm5lY3RCdXR0b24uanMubWFwIl0sIm5hbWVzIjpbInVzZVdhbGxldCIsIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VNZW1vIiwiQnV0dG9uIiwiV2FsbGV0SWNvbiIsIl9fcmVzdCIsInMiLCJlIiwidCIsInAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaSIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiV2FsbGV0RGlzY29ubmVjdEJ1dHRvbiIsIl9hIiwiY2hpbGRyZW4iLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJwcm9wcyIsIndhbGxldCIsImRpc2Nvbm5lY3QiLCJkaXNjb25uZWN0aW5nIiwiaGFuZGxlQ2xpY2siLCJldmVudCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJjYXRjaCIsImNvbnRlbnQiLCJjcmVhdGVFbGVtZW50IiwiYXNzaWduIiwiY2xhc3NOYW1lIiwic3RhcnRJY29uIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletDisconnectButton.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js":
/*!************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js ***!
  \************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletIcon\": function() { return /* binding */ WalletIcon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar WalletIcon = function(_a) {\n    var wallet = _a.wallet, props = __rest(_a, [\n        \"wallet\"\n    ]);\n    return wallet && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", Object.assign({\n        src: wallet.icon,\n        alt: \"\".concat(wallet.name, \" icon\")\n    }, props));\n}; //# sourceMappingURL=WalletIcon.js.map\n_c = WalletIcon;\nvar _c;\n$RefreshReg$(_c, \"WalletIcon\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0SWNvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFXeUI7QUFYekIsR0FBRyxDQUFDQyxNQUFNLEdBQUksU0FBSSxJQUFJLFNBQUksQ0FBQ0EsTUFBTSxJQUFLLFFBQVEsQ0FBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUUsQ0FBQztJQUNuRCxHQUFHLENBQUNDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDVixHQUFHLENBQUUsR0FBRyxDQUFDQyxDQUFDLElBQUlILENBQUMsQ0FBRSxFQUFFLEVBQUVJLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1AsQ0FBQyxFQUFFRyxDQUFDLEtBQUtGLENBQUMsQ0FBQ08sT0FBTyxDQUFDTCxDQUFDLElBQUksQ0FBQyxFQUMvRUQsQ0FBQyxDQUFDQyxDQUFDLElBQUlILENBQUMsQ0FBQ0csQ0FBQztJQUNkLEVBQUUsRUFBRUgsQ0FBQyxJQUFJLElBQUksSUFBSSxNQUFNLENBQUNJLE1BQU0sQ0FBQ0sscUJBQXFCLEtBQUssQ0FBVSxXQUMvRCxHQUFHLENBQUUsR0FBRyxDQUFDQyxDQUFDLEdBQUcsQ0FBQyxFQUFFUCxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0sscUJBQXFCLENBQUNULENBQUMsR0FBR1UsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLE1BQU0sRUFBRUQsQ0FBQyxHQUFJLENBQUM7UUFDckUsRUFBRSxFQUFFVCxDQUFDLENBQUNPLE9BQU8sQ0FBQ0wsQ0FBQyxDQUFDTyxDQUFDLEtBQUssQ0FBQyxJQUFJTixNQUFNLENBQUNDLFNBQVMsQ0FBQ08sb0JBQW9CLENBQUNMLElBQUksQ0FBQ1AsQ0FBQyxFQUFFRyxDQUFDLENBQUNPLENBQUMsSUFDeEVSLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDTyxDQUFDLEtBQUtWLENBQUMsQ0FBQ0csQ0FBQyxDQUFDTyxDQUFDO0lBQ3ZCLENBQUM7SUFDTCxNQUFNLENBQUNSLENBQUM7QUFDWixDQUFDO0FBRU0sR0FBSyxDQUFDVyxVQUFVLEdBQUcsUUFBUSxDQUFQQyxFQUFFLEVBQUssQ0FBQztJQUMvQixHQUFHLENBQUdDLE1BQU0sR0FBS0QsRUFBRSxDQUFiQyxNQUFNLEVBQVNDLEtBQUssR0FBR2pCLE1BQU0sQ0FBQ2UsRUFBRSxFQUFFLENBQUM7UUFBQSxDQUFRO0lBQUEsQ0FBQztJQUNsRCxNQUFNLENBQUNDLE1BQU0sa0JBQUlqQiwwREFBbUIsQ0FBQyxDQUFLLE1BQUVNLE1BQU0sQ0FBQ2MsTUFBTSxDQUFDLENBQUM7UUFBQ0MsR0FBRyxFQUFFSixNQUFNLENBQUNLLElBQUk7UUFBRUMsR0FBRyxFQUFHLEdBQWMsTUFBSyxDQUFqQk4sTUFBTSxDQUFDTyxJQUFJLEVBQUMsQ0FBSztJQUFFLENBQUMsRUFBRU4sS0FBSztBQUNySCxDQUFDLENBQ0QsQ0FBc0M7S0FKekJILFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvd2FsbGV0LWFkYXB0ZXItcmVhY3QtdWkvbGliL1dhbGxldEljb24uanM/NTk5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGNvbnN0IFdhbGxldEljb24gPSAoX2EpID0+IHtcbiAgICB2YXIgeyB3YWxsZXQgfSA9IF9hLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wid2FsbGV0XCJdKTtcbiAgICByZXR1cm4gd2FsbGV0ICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgT2JqZWN0LmFzc2lnbih7IHNyYzogd2FsbGV0Lmljb24sIGFsdDogYCR7d2FsbGV0Lm5hbWV9IGljb25gIH0sIHByb3BzKSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2FsbGV0SWNvbi5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIldhbGxldEljb24iLCJfYSIsIndhbGxldCIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsImFzc2lnbiIsInNyYyIsImljb24iLCJhbHQiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletListItem.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletListItem.js ***!
  \****************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletListItem\": function() { return /* binding */ WalletListItem; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\");\n/* harmony import */ var _WalletIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WalletIcon */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js\");\n\n\n\nvar WalletListItem = function(param) {\n    var handleClick = param.handleClick, tabIndex = param.tabIndex, wallet = param.wallet;\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n        onClick: handleClick,\n        endIcon: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_WalletIcon__WEBPACK_IMPORTED_MODULE_2__.WalletIcon, {\n            wallet: wallet\n        }),\n        tabIndex: tabIndex\n    }, wallet.name)));\n}; //# sourceMappingURL=WalletListItem.js.map\n_c = WalletListItem;\nvar _c;\n$RefreshReg$(_c, \"WalletListItem\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0TGlzdEl0ZW0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUI7QUFDUTtBQUNRO0FBQ2xDLEdBQUssQ0FBQ0csY0FBYyxHQUFHLFFBQVEsUUFBK0IsQ0FBQztRQUFyQ0MsV0FBVyxTQUFYQSxXQUFXLEVBQUVDLFFBQVEsU0FBUkEsUUFBUSxFQUFFQyxNQUFNLFNBQU5BLE1BQU07SUFDMUQsTUFBTSxlQUFFTiwwREFBbUIsQ0FBQyxDQUFJLEtBQUUsSUFBSSxnQkFDbENBLDBEQUFtQixDQUFDQywyQ0FBTSxFQUFFLENBQUM7UUFBQ08sT0FBTyxFQUFFSixXQUFXO1FBQUVLLE9BQU8sZ0JBQUVULDBEQUFtQixDQUFDRSxtREFBVSxFQUFFLENBQUM7WUFBQ0ksTUFBTSxFQUFFQSxNQUFNO1FBQUMsQ0FBQztRQUFHRCxRQUFRLEVBQUVBLFFBQVE7SUFBQyxDQUFDLEVBQUVDLE1BQU0sQ0FBQ0ksSUFBSTtBQUMzSixDQUFDLENBQ0QsQ0FBMEM7S0FKN0JQLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvd2FsbGV0LWFkYXB0ZXItcmVhY3QtdWkvbGliL1dhbGxldExpc3RJdGVtLmpzPzljYzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IFdhbGxldEljb24gfSBmcm9tICcuL1dhbGxldEljb24nO1xuZXhwb3J0IGNvbnN0IFdhbGxldExpc3RJdGVtID0gKHsgaGFuZGxlQ2xpY2ssIHRhYkluZGV4LCB3YWxsZXQgfSkgPT4ge1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7IG9uQ2xpY2s6IGhhbmRsZUNsaWNrLCBlbmRJY29uOiBSZWFjdC5jcmVhdGVFbGVtZW50KFdhbGxldEljb24sIHsgd2FsbGV0OiB3YWxsZXQgfSksIHRhYkluZGV4OiB0YWJJbmRleCB9LCB3YWxsZXQubmFtZSkpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XYWxsZXRMaXN0SXRlbS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJCdXR0b24iLCJXYWxsZXRJY29uIiwiV2FsbGV0TGlzdEl0ZW0iLCJoYW5kbGVDbGljayIsInRhYkluZGV4Iiwid2FsbGV0IiwiY3JlYXRlRWxlbWVudCIsIm9uQ2xpY2siLCJlbmRJY29uIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletListItem.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModal.js ***!
  \*************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletModal\": function() { return /* binding */ WalletModal; }\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\");\n/* harmony import */ var _Collapse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Collapse */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Collapse.js\");\n/* harmony import */ var _useWalletModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useWalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js\");\n/* harmony import */ var _WalletListItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WalletListItem */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletListItem.js\");\n\n\n\n\n\n\n\nvar _s = $RefreshSig$();\nvar WalletModal = function(param) {\n    var _className = param.className, className = _className === void 0 ? '' : _className, logo = param.logo, _featuredWallets = param.featuredWallets, featuredWallets = _featuredWallets === void 0 ? 3 : _featuredWallets, _container = param.container, container = _container === void 0 ? 'body' : _container;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var ref1 = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_6__.useWallet)(), wallets = ref1.wallets, select = ref1.select;\n    var setVisible = (0,_useWalletModal__WEBPACK_IMPORTED_MODULE_4__.useWalletModal)().setVisible;\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), expanded = ref2[0], setExpanded = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), fadeIn = ref3[0], setFadeIn = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), portal = ref4[0], setPortal = ref4[1];\n    var ref5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return [\n            wallets.slice(0, featuredWallets),\n            wallets.slice(featuredWallets)\n        ];\n    }, [\n        wallets,\n        featuredWallets\n    ]), featured = ref5[0], more = ref5[1];\n    var hideModal = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        setFadeIn(false);\n        setTimeout(function() {\n            return setVisible(false);\n        }, 150);\n    }, [\n        setFadeIn,\n        setVisible\n    ]);\n    var handleClose = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        event.preventDefault();\n        hideModal();\n    }, [\n        hideModal\n    ]);\n    var handleWalletClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event, walletName) {\n        select(walletName);\n        handleClose(event);\n    }, [\n        select,\n        handleClose\n    ]);\n    var handleCollapseClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        return setExpanded(!expanded);\n    }, [\n        setExpanded,\n        expanded\n    ]);\n    var handleTabKey = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        var node = ref.current;\n        if (!node) return;\n        // here we query all focusable elements\n        var focusableElements = node.querySelectorAll('button');\n        var firstElement = focusableElements[0];\n        var lastElement = focusableElements[focusableElements.length - 1];\n        if (event.shiftKey) {\n            // if going backward by pressing tab and firstElement is active, shift focus to last focusable element\n            if (document.activeElement === firstElement) {\n                lastElement.focus();\n                event.preventDefault();\n            }\n        } else {\n            // if going forward by pressing tab and lastElement is active, shift focus to first focusable element\n            if (document.activeElement === lastElement) {\n                firstElement.focus();\n                event.preventDefault();\n            }\n        }\n    }, [\n        ref\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function() {\n        var handleKeyDown = function(event) {\n            if (event.key === 'Escape') {\n                hideModal();\n            } else if (event.key === 'Tab') {\n                handleTabKey(event);\n            }\n        };\n        // Get original overflow\n        var overflow = window.getComputedStyle(document.body).overflow;\n        // Hack to enable fade in animation after mount\n        setTimeout(function() {\n            return setFadeIn(true);\n        }, 0);\n        // Prevent scrolling on mount\n        document.body.style.overflow = 'hidden';\n        // Listen for keydown events\n        window.addEventListener('keydown', handleKeyDown, false);\n        return function() {\n            // Re-enable scrolling when component unmounts\n            document.body.style.overflow = overflow;\n            window.removeEventListener('keydown', handleKeyDown, false);\n        };\n    }, [\n        hideModal,\n        handleTabKey\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function() {\n        return setPortal(document.querySelector(container));\n    }, [\n        setPortal,\n        container\n    ]);\n    return portal && /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        \"aria-labelledby\": \"wallet-adapter-modal-title\",\n        \"aria-modal\": \"true\",\n        className: \"wallet-adapter-modal \".concat(fadeIn && 'wallet-adapter-modal-fade-in', \" \").concat(className),\n        ref: ref,\n        role: \"dialog\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"wallet-adapter-modal-container\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"wallet-adapter-modal-wrapper \".concat(!logo && 'wallet-adapter-modal-wrapper-no-logo')\n    }, logo && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"wallet-adapter-modal-logo-wrapper\"\n    }, typeof logo === 'string' ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n        alt: \"logo\",\n        className: \"wallet-adapter-modal-logo\",\n        src: logo\n    }) : logo), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h1\", {\n        className: \"wallet-adapter-modal-title\",\n        id: \"wallet-adapter-modal-title\"\n    }, \"Connect Wallet\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n        onClick: handleClose,\n        className: \"wallet-adapter-modal-button-close\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        width: \"14\",\n        height: \"14\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n        d: \"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n        className: \"wallet-adapter-modal-list\"\n    }, featured.map(function(wallet) {\n        return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_WalletListItem__WEBPACK_IMPORTED_MODULE_5__.WalletListItem, {\n            key: wallet.name,\n            handleClick: function(event) {\n                return handleWalletClick(event, wallet.name);\n            },\n            wallet: wallet\n        }));\n    })), more.length ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Collapse__WEBPACK_IMPORTED_MODULE_3__.Collapse, {\n        expanded: expanded,\n        id: \"wallet-adapter-modal-collapse\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n        className: \"wallet-adapter-modal-list\"\n    }, more.map(function(wallet) {\n        return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_WalletListItem__WEBPACK_IMPORTED_MODULE_5__.WalletListItem, {\n            key: wallet.name,\n            handleClick: function(event) {\n                return handleWalletClick(event, wallet.name);\n            },\n            tabIndex: expanded ? 0 : -1,\n            wallet: wallet\n        }));\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        \"aria-controls\": \"wallet-adapter-modal-collapse\",\n        \"aria-expanded\": expanded,\n        className: \"wallet-adapter-modal-collapse-button \".concat(expanded && 'wallet-adapter-modal-collapse-button-active'),\n        endIcon: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n            width: \"11\",\n            height: \"6\",\n            xmlns: \"http://www.w3.org/2000/svg\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n            d: \"m5.938 5.73 4.28-4.126a.915.915 0 0 0 0-1.322 1 1 0 0 0-1.371 0L5.253 3.736 1.659.272a1 1 0 0 0-1.371 0A.93.93 0 0 0 0 .932c0 .246.1.48.288.662l4.28 4.125a.99.99 0 0 0 1.37.01z\"\n        })),\n        onClick: handleCollapseClick\n    }, expanded ? 'Less' : 'More', \" options\")) : null)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"wallet-adapter-modal-overlay\",\n        onMouseDown: handleClose\n    })), portal);\n}; //# sourceMappingURL=WalletModal.js.map\n_s(WalletModal, \"MXqq2HaeNKSMxf67jTzC24j+fAE=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_6__.useWallet,\n        _useWalletModal__WEBPACK_IMPORTED_MODULE_4__.useWalletModal\n    ];\n});\n_c = WalletModal;\nvar _c;\n$RefreshReg$(_c, \"WalletModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModal.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalButton.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalButton.js ***!
  \*******************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletModalButton\": function() { return /* binding */ WalletModalButton; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\");\n/* harmony import */ var _useWalletModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useWalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js\");\n\n\n\nvar _s = $RefreshSig$();\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar WalletModalButton = function(_a) {\n    _s();\n    var _children = _a.children, children = _children === void 0 ? 'Select Wallet' : _children, onClick = _a.onClick, props = __rest(_a, [\n        \"children\",\n        \"onClick\"\n    ]);\n    var ref = (0,_useWalletModal__WEBPACK_IMPORTED_MODULE_2__.useWalletModal)(), visible = ref.visible, setVisible = ref.setVisible;\n    var handleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        if (onClick) onClick(event);\n        if (!event.defaultPrevented) setVisible(!visible);\n    }, [\n        onClick,\n        setVisible,\n        visible\n    ]);\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, Object.assign({\n        className: \"wallet-adapter-button-trigger\",\n        onClick: handleClick\n    }, props), children));\n}; //# sourceMappingURL=WalletModalButton.js.map\n_s(WalletModalButton, \"vk0H1Rb0JG3jd753xDzYSzdQmyM=\", false, function() {\n    return [\n        _useWalletModal__WEBPACK_IMPORTED_MODULE_2__.useWalletModal\n    ];\n});\n_c = WalletModalButton;\nvar _c;\n$RefreshReg$(_c, \"WalletModalButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0TW9kYWxCdXR0b24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFXMEM7QUFDVDtBQUNnQjs7QUFiakQsR0FBRyxDQUFDSSxNQUFNLEdBQUksU0FBSSxJQUFJLFNBQUksQ0FBQ0EsTUFBTSxJQUFLLFFBQVEsQ0FBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUUsQ0FBQztJQUNuRCxHQUFHLENBQUNDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDVixHQUFHLENBQUUsR0FBRyxDQUFDQyxDQUFDLElBQUlILENBQUMsQ0FBRSxFQUFFLEVBQUVJLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1AsQ0FBQyxFQUFFRyxDQUFDLEtBQUtGLENBQUMsQ0FBQ08sT0FBTyxDQUFDTCxDQUFDLElBQUksQ0FBQyxFQUMvRUQsQ0FBQyxDQUFDQyxDQUFDLElBQUlILENBQUMsQ0FBQ0csQ0FBQztJQUNkLEVBQUUsRUFBRUgsQ0FBQyxJQUFJLElBQUksSUFBSSxNQUFNLENBQUNJLE1BQU0sQ0FBQ0sscUJBQXFCLEtBQUssQ0FBVSxXQUMvRCxHQUFHLENBQUUsR0FBRyxDQUFDQyxDQUFDLEdBQUcsQ0FBQyxFQUFFUCxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0sscUJBQXFCLENBQUNULENBQUMsR0FBR1UsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLE1BQU0sRUFBRUQsQ0FBQyxHQUFJLENBQUM7UUFDckUsRUFBRSxFQUFFVCxDQUFDLENBQUNPLE9BQU8sQ0FBQ0wsQ0FBQyxDQUFDTyxDQUFDLEtBQUssQ0FBQyxJQUFJTixNQUFNLENBQUNDLFNBQVMsQ0FBQ08sb0JBQW9CLENBQUNMLElBQUksQ0FBQ1AsQ0FBQyxFQUFFRyxDQUFDLENBQUNPLENBQUMsSUFDeEVSLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDTyxDQUFDLEtBQUtWLENBQUMsQ0FBQ0csQ0FBQyxDQUFDTyxDQUFDO0lBQ3ZCLENBQUM7SUFDTCxNQUFNLENBQUNSLENBQUM7QUFDWixDQUFDO0FBSU0sR0FBSyxDQUFDVyxpQkFBaUIsR0FBRyxRQUFRLENBQVBDLEVBQUUsRUFBSyxDQUFDOztJQUN0QyxHQUFHLGFBQTJDQSxFQUFFLENBQTFDQyxRQUFRLEVBQVJBLFFBQVEsMEJBQUcsQ0FBZSw0QkFBRUMsT0FBTyxHQUFLRixFQUFFLENBQWRFLE9BQU8sRUFBU0MsS0FBSyxHQUFHbEIsTUFBTSxDQUFDZSxFQUFFLEVBQUUsQ0FBQztRQUFBLENBQVU7UUFBRSxDQUFTO0lBQUEsQ0FBQztJQUM1RixHQUFLLENBQTJCaEIsR0FBZ0IsR0FBaEJBLCtEQUFjLElBQXRDb0IsT0FBTyxHQUFpQnBCLEdBQWdCLENBQXhDb0IsT0FBTyxFQUFFQyxVQUFVLEdBQUtyQixHQUFnQixDQUEvQnFCLFVBQVU7SUFDM0IsR0FBSyxDQUFDQyxXQUFXLEdBQUd4QixrREFBVyxDQUFDLFFBQVEsQ0FBUHlCLEtBQUssRUFBSyxDQUFDO1FBQ3hDLEVBQUUsRUFBRUwsT0FBTyxFQUNQQSxPQUFPLENBQUNLLEtBQUs7UUFDakIsRUFBRSxHQUFHQSxLQUFLLENBQUNDLGdCQUFnQixFQUN2QkgsVUFBVSxFQUFFRCxPQUFPO0lBQzNCLENBQUMsRUFBRSxDQUFDRjtRQUFBQSxPQUFPO1FBQUVHLFVBQVU7UUFBRUQsT0FBTztJQUFBLENBQUM7SUFDakMsTUFBTSxlQUFFdkIsMERBQW1CLENBQUNFLDJDQUFNLEVBQUVPLE1BQU0sQ0FBQ29CLE1BQU0sQ0FBQyxDQUFDO1FBQUNDLFNBQVMsRUFBRSxDQUErQjtRQUFFVCxPQUFPLEVBQUVJLFdBQVc7SUFBQyxDQUFDLEVBQUVILEtBQUssR0FBR0YsUUFBUTtBQUM1SSxDQUFDLENBQ0QsQ0FBNkM7R0FYaENGLGlCQUFpQjs7UUFFTWYsMkRBQWM7OztLQUZyQ2UsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpL2xpYi9XYWxsZXRNb2RhbEJ1dHRvbi5qcz81YjgwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IHVzZVdhbGxldE1vZGFsIH0gZnJvbSAnLi91c2VXYWxsZXRNb2RhbCc7XG5leHBvcnQgY29uc3QgV2FsbGV0TW9kYWxCdXR0b24gPSAoX2EpID0+IHtcbiAgICB2YXIgeyBjaGlsZHJlbiA9ICdTZWxlY3QgV2FsbGV0Jywgb25DbGljayB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjaGlsZHJlblwiLCBcIm9uQ2xpY2tcIl0pO1xuICAgIGNvbnN0IHsgdmlzaWJsZSwgc2V0VmlzaWJsZSB9ID0gdXNlV2FsbGV0TW9kYWwoKTtcbiAgICBjb25zdCBoYW5kbGVDbGljayA9IHVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBpZiAob25DbGljaylcbiAgICAgICAgICAgIG9uQ2xpY2soZXZlbnQpO1xuICAgICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpXG4gICAgICAgICAgICBzZXRWaXNpYmxlKCF2aXNpYmxlKTtcbiAgICB9LCBbb25DbGljaywgc2V0VmlzaWJsZSwgdmlzaWJsZV0pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIE9iamVjdC5hc3NpZ24oeyBjbGFzc05hbWU6IFwid2FsbGV0LWFkYXB0ZXItYnV0dG9uLXRyaWdnZXJcIiwgb25DbGljazogaGFuZGxlQ2xpY2sgfSwgcHJvcHMpLCBjaGlsZHJlbikpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdhbGxldE1vZGFsQnV0dG9uLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNhbGxiYWNrIiwiQnV0dG9uIiwidXNlV2FsbGV0TW9kYWwiLCJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIldhbGxldE1vZGFsQnV0dG9uIiwiX2EiLCJjaGlsZHJlbiIsIm9uQ2xpY2siLCJwcm9wcyIsInZpc2libGUiLCJzZXRWaXNpYmxlIiwiaGFuZGxlQ2xpY2siLCJldmVudCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJjcmVhdGVFbGVtZW50IiwiYXNzaWduIiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalButton.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalProvider.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalProvider.js ***!
  \*********************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletModalProvider\": function() { return /* binding */ WalletModalProvider; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useWalletModal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useWalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js\");\n/* harmony import */ var _WalletModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModal.js\");\n\n\n\nvar _s = $RefreshSig$();\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar WalletModalProvider = function(_a) {\n    _s();\n    var children = _a.children, props = __rest(_a, [\n        \"children\"\n    ]);\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), visible = ref[0], setVisible = ref[1];\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_useWalletModal__WEBPACK_IMPORTED_MODULE_1__.WalletModalContext.Provider, {\n        value: {\n            visible: visible,\n            setVisible: setVisible\n        }\n    }, children, visible && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_WalletModal__WEBPACK_IMPORTED_MODULE_2__.WalletModal, Object.assign({}, props))));\n}; //# sourceMappingURL=WalletModalProvider.js.map\n_s(WalletModalProvider, \"Hdw5EO+DplCNBEJcNuH8tsP7WZ4=\");\n_c = WalletModalProvider;\nvar _c;\n$RefreshReg$(_c, \"WalletModalProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0TW9kYWxQcm92aWRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQVd1QztBQUNjO0FBQ1Y7O0FBYjNDLEdBQUcsQ0FBQ0ksTUFBTSxHQUFJLFNBQUksSUFBSSxTQUFJLENBQUNBLE1BQU0sSUFBSyxRQUFRLENBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFLENBQUM7SUFDbkQsR0FBRyxDQUFDQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ1YsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxJQUFJSCxDQUFDLENBQUUsRUFBRSxFQUFFSSxNQUFNLENBQUNDLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNQLENBQUMsRUFBRUcsQ0FBQyxLQUFLRixDQUFDLENBQUNPLE9BQU8sQ0FBQ0wsQ0FBQyxJQUFJLENBQUMsRUFDL0VELENBQUMsQ0FBQ0MsQ0FBQyxJQUFJSCxDQUFDLENBQUNHLENBQUM7SUFDZCxFQUFFLEVBQUVILENBQUMsSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDSSxNQUFNLENBQUNLLHFCQUFxQixLQUFLLENBQVUsV0FDL0QsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsRUFBRVAsQ0FBQyxHQUFHQyxNQUFNLENBQUNLLHFCQUFxQixDQUFDVCxDQUFDLEdBQUdVLENBQUMsR0FBR1AsQ0FBQyxDQUFDUSxNQUFNLEVBQUVELENBQUMsR0FBSSxDQUFDO1FBQ3JFLEVBQUUsRUFBRVQsQ0FBQyxDQUFDTyxPQUFPLENBQUNMLENBQUMsQ0FBQ08sQ0FBQyxLQUFLLENBQUMsSUFBSU4sTUFBTSxDQUFDQyxTQUFTLENBQUNPLG9CQUFvQixDQUFDTCxJQUFJLENBQUNQLENBQUMsRUFBRUcsQ0FBQyxDQUFDTyxDQUFDLElBQ3hFUixDQUFDLENBQUNDLENBQUMsQ0FBQ08sQ0FBQyxLQUFLVixDQUFDLENBQUNHLENBQUMsQ0FBQ08sQ0FBQztJQUN2QixDQUFDO0lBQ0wsTUFBTSxDQUFDUixDQUFDO0FBQ1osQ0FBQztBQUlNLEdBQUssQ0FBQ1csbUJBQW1CLEdBQUcsUUFBUSxDQUFQQyxFQUFFLEVBQUssQ0FBQzs7SUFDeEMsR0FBRyxDQUFHQyxRQUFRLEdBQUtELEVBQUUsQ0FBZkMsUUFBUSxFQUFTQyxLQUFLLEdBQUdqQixNQUFNLENBQUNlLEVBQUUsRUFBRSxDQUFDO1FBQUEsQ0FBVTtJQUFBLENBQUM7SUFDdEQsR0FBSyxDQUF5QmxCLEdBQWUsR0FBZkEsK0NBQVEsQ0FBQyxLQUFLLEdBQXJDcUIsT0FBTyxHQUFnQnJCLEdBQWUsS0FBN0JzQixVQUFVLEdBQUl0QixHQUFlO0lBQzdDLE1BQU0sZUFBRUQsMERBQW1CLENBQUNFLHdFQUEyQixFQUFFLENBQUM7UUFBQ3dCLEtBQUssRUFBRSxDQUFDO1lBQzNESixPQUFPLEVBQVBBLE9BQU87WUFDUEMsVUFBVSxFQUFWQSxVQUFVO1FBQ2QsQ0FBQztJQUFDLENBQUMsRUFDSEgsUUFBUSxFQUNSRSxPQUFPLGtCQUFJdEIsMERBQW1CLENBQUNHLHFEQUFXLEVBQUVNLE1BQU0sQ0FBQ2tCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRU4sS0FBSztBQUMzRSxDQUFDLENBQ0QsQ0FBK0M7R0FWbENILG1CQUFtQjtLQUFuQkEsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpL2xpYi9XYWxsZXRNb2RhbFByb3ZpZGVyLmpzP2ZmZjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgV2FsbGV0TW9kYWxDb250ZXh0IH0gZnJvbSAnLi91c2VXYWxsZXRNb2RhbCc7XG5pbXBvcnQgeyBXYWxsZXRNb2RhbCB9IGZyb20gJy4vV2FsbGV0TW9kYWwnO1xuZXhwb3J0IGNvbnN0IFdhbGxldE1vZGFsUHJvdmlkZXIgPSAoX2EpID0+IHtcbiAgICB2YXIgeyBjaGlsZHJlbiB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjaGlsZHJlblwiXSk7XG4gICAgY29uc3QgW3Zpc2libGUsIHNldFZpc2libGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChXYWxsZXRNb2RhbENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IHtcbiAgICAgICAgICAgIHZpc2libGUsXG4gICAgICAgICAgICBzZXRWaXNpYmxlLFxuICAgICAgICB9IH0sXG4gICAgICAgIGNoaWxkcmVuLFxuICAgICAgICB2aXNpYmxlICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2FsbGV0TW9kYWwsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzKSkpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XYWxsZXRNb2RhbFByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwiV2FsbGV0TW9kYWxDb250ZXh0IiwiV2FsbGV0TW9kYWwiLCJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIldhbGxldE1vZGFsUHJvdmlkZXIiLCJfYSIsImNoaWxkcmVuIiwicHJvcHMiLCJ2aXNpYmxlIiwic2V0VmlzaWJsZSIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsInZhbHVlIiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalProvider.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/WalletMultiButton.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/WalletMultiButton.js ***!
  \*******************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletMultiButton\": function() { return /* binding */ WalletMultiButton; }\n/* harmony export */ });\n/* harmony import */ var _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/Button.js\");\n/* harmony import */ var _useWalletModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useWalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js\");\n/* harmony import */ var _WalletConnectButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WalletConnectButton */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletConnectButton.js\");\n/* harmony import */ var _WalletIcon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WalletIcon */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js\");\n/* harmony import */ var _WalletModalButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WalletModalButton */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalButton.js\");\n\n\n\n\n\n\n\n\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nvar _s = $RefreshSig$();\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    var adopt = function adopt(value) {\n        return _instanceof(value, P) ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    };\n    return new (P || (P = Promise))(function(resolve, reject) {\n        var fulfilled = function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        };\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar WalletMultiButton = function(_a) {\n    _s();\n    var children = _a.children, props = __rest(_a, [\n        \"children\"\n    ]);\n    var ref = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_7__.useWallet)(), publicKey = ref.publicKey, wallet = ref.wallet, disconnect = ref.disconnect;\n    var setVisible = (0,_useWalletModal__WEBPACK_IMPORTED_MODULE_3__.useWalletModal)().setVisible;\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), copied = ref1[0], setCopied = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), active = ref2[0], setActive = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var base58 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function() {\n        return publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58();\n    }, [\n        publicKey\n    ]);\n    var content = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function() {\n        if (children) return children;\n        if (!wallet || !base58) return null;\n        return base58.slice(0, 4) + '..' + base58.slice(-4);\n    }, [\n        children,\n        wallet,\n        base58\n    ]);\n    var copyAddress = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return __awaiter(void 0, void 0, void 0, _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            return _Users_nhatminhphan_Desktop_Code_Solana_solana_swap_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (!base58) {\n                            _ctx.next = 5;\n                            break;\n                        }\n                        _ctx.next = 3;\n                        return navigator.clipboard.writeText(base58);\n                    case 3:\n                        setCopied(true);\n                        setTimeout(function() {\n                            return setCopied(false);\n                        }, 400);\n                    case 5:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n    }, [\n        base58\n    ]);\n    var openDropdown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return setActive(true);\n    }, [\n        setActive\n    ]);\n    var closeDropdown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return setActive(false);\n    }, [\n        setActive\n    ]);\n    var openModal = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        setVisible(true);\n        closeDropdown();\n    }, [\n        setVisible,\n        closeDropdown\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var listener = function(event) {\n            var node = ref3.current;\n            // Do nothing if clicking dropdown or its descendants\n            if (!node || node.contains(event.target)) return;\n            closeDropdown();\n        };\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n        return function() {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, [\n        ref3,\n        closeDropdown\n    ]);\n    if (!wallet) return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_WalletModalButton__WEBPACK_IMPORTED_MODULE_6__.WalletModalButton, Object.assign({}, props), children));\n    if (!base58) return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_WalletConnectButton__WEBPACK_IMPORTED_MODULE_4__.WalletConnectButton, Object.assign({}, props), children));\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: \"wallet-adapter-dropdown\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_2__.Button, Object.assign({\n        \"aria-expanded\": active,\n        className: \"wallet-adapter-button-trigger\",\n        style: Object.assign({\n            pointerEvents: active ? 'none' : 'auto'\n        }, props.style),\n        onClick: openDropdown,\n        startIcon: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_WalletIcon__WEBPACK_IMPORTED_MODULE_5__.WalletIcon, {\n            wallet: wallet\n        })\n    }, props), content), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"ul\", {\n        \"aria-label\": \"dropdown-list\",\n        className: \"wallet-adapter-dropdown-list \".concat(active && 'wallet-adapter-dropdown-list-active'),\n        ref: ref3,\n        role: \"menu\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"li\", {\n        onClick: copyAddress,\n        className: \"wallet-adapter-dropdown-list-item\",\n        role: \"menuitem\"\n    }, copied ? 'Copied' : 'Copy address'), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"li\", {\n        onClick: openModal,\n        className: \"wallet-adapter-dropdown-list-item\",\n        role: \"menuitem\"\n    }, \"Connect a different wallet\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"li\", {\n        onClick: disconnect,\n        className: \"wallet-adapter-dropdown-list-item\",\n        role: \"menuitem\"\n    }, \"Disconnect\"))));\n}; //# sourceMappingURL=WalletMultiButton.js.map\n_s(WalletMultiButton, \"0ZcIJBOzB53fCHlYszk/7cTlA3E=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_7__.useWallet,\n        _useWalletModal__WEBPACK_IMPORTED_MODULE_3__.useWalletModal\n    ];\n});\n_c = WalletMultiButton;\nvar _c;\n$RefreshReg$(_c, \"WalletMultiButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0TXVsdGlCdXR0b24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBb0J3RDtBQUN3QjtBQUMvQztBQUNnQjtBQUNVO0FBQ2xCO0FBQ2M7Ozs7Ozs7OztBQTFCdkQsR0FBRyxDQUFDWSxTQUFTLEdBQUksU0FBSSxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFFBQVEsQ0FBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUyxFQUFFLENBQUM7UUFDN0VDLEtBQUssR0FBZCxRQUFRLENBQUNBLEtBQUssQ0FBQ0MsS0FBSyxFQUFFLENBQUM7UUFBQyxNQUFNLENBQUNBLFdBQWtCLENBQWxCQSxLQUFLLEVBQVlILENBQUMsSUFBR0csS0FBSyxHQUFHLEdBQUcsQ0FBQ0gsQ0FBQyxDQUFDLFFBQVEsQ0FBRUksT0FBTyxFQUFFLENBQUM7WUFBQ0EsT0FBTyxDQUFDRCxLQUFLO1FBQUcsQ0FBQztJQUFHLENBQUM7SUFDNUcsTUFBTSxDQUFDLEdBQUcsRUFBRUgsQ0FBQyxLQUFLQSxDQUFDLEdBQUdLLE9BQU8sR0FBRyxRQUFRLENBQUVELE9BQU8sRUFBRUUsTUFBTSxFQUFFLENBQUM7WUFDL0NDLFNBQVMsR0FBbEIsUUFBUSxDQUFDQSxTQUFTLENBQUNKLEtBQUssRUFBRSxDQUFDO1lBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQUNLLElBQUksQ0FBQ1AsU0FBUyxDQUFDUSxJQUFJLENBQUNOLEtBQUs7WUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFTyxDQUFDLEVBQUUsQ0FBQztnQkFBQ0osTUFBTSxDQUFDSSxDQUFDO1lBQUcsQ0FBQztRQUFDLENBQUM7WUFDbEZDLFFBQVEsR0FBakIsUUFBUSxDQUFDQSxRQUFRLENBQUNSLEtBQUssRUFBRSxDQUFDO1lBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQUNLLElBQUksQ0FBQ1AsU0FBUyxDQUFDLENBQU8sUUFBRUUsS0FBSztZQUFJLENBQUMsQ0FBQyxLQUFLLEVBQUVPLENBQUMsRUFBRSxDQUFDO2dCQUFDSixNQUFNLENBQUNJLENBQUM7WUFBRyxDQUFDO1FBQUMsQ0FBQztZQUNyRkYsSUFBSSxHQUFiLFFBQVEsQ0FBQ0EsSUFBSSxDQUFDSSxNQUFNLEVBQUUsQ0FBQztZQUFDQSxNQUFNLENBQUNDLElBQUksR0FBR1QsT0FBTyxDQUFDUSxNQUFNLENBQUNULEtBQUssSUFBSUQsS0FBSyxDQUFDVSxNQUFNLENBQUNULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxTQUFTLEVBQUVJLFFBQVE7UUFBRyxDQUFDO1FBQzlHSCxJQUFJLEVBQUVQLFNBQVMsR0FBR0EsU0FBUyxDQUFDYyxLQUFLLENBQUNqQixPQUFPLEVBQUVDLFVBQVUsSUFBSSxDQUFDLENBQUMsR0FBR1UsSUFBSTtJQUN0RSxDQUFDO0FBQ0wsQ0FBQztBQUNELEdBQUcsQ0FBQ08sTUFBTSxHQUFJLFNBQUksSUFBSSxTQUFJLENBQUNBLE1BQU0sSUFBSyxRQUFRLENBQUVDLENBQUMsRUFBRVAsQ0FBQyxFQUFFLENBQUM7SUFDbkQsR0FBRyxDQUFDUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ1YsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxJQUFJRixDQUFDLENBQUUsRUFBRSxFQUFFRyxNQUFNLENBQUNDLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNOLENBQUMsRUFBRUUsQ0FBQyxLQUFLVCxDQUFDLENBQUNjLE9BQU8sQ0FBQ0wsQ0FBQyxJQUFJLENBQUMsRUFDL0VELENBQUMsQ0FBQ0MsQ0FBQyxJQUFJRixDQUFDLENBQUNFLENBQUM7SUFDZCxFQUFFLEVBQUVGLENBQUMsSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDRyxNQUFNLENBQUNLLHFCQUFxQixLQUFLLENBQVUsV0FDL0QsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsRUFBRVAsQ0FBQyxHQUFHQyxNQUFNLENBQUNLLHFCQUFxQixDQUFDUixDQUFDLEdBQUdTLENBQUMsR0FBR1AsQ0FBQyxDQUFDUSxNQUFNLEVBQUVELENBQUMsR0FBSSxDQUFDO1FBQ3JFLEVBQUUsRUFBRWhCLENBQUMsQ0FBQ2MsT0FBTyxDQUFDTCxDQUFDLENBQUNPLENBQUMsS0FBSyxDQUFDLElBQUlOLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDTyxvQkFBb0IsQ0FBQ0wsSUFBSSxDQUFDTixDQUFDLEVBQUVFLENBQUMsQ0FBQ08sQ0FBQyxJQUN4RVIsQ0FBQyxDQUFDQyxDQUFDLENBQUNPLENBQUMsS0FBS1QsQ0FBQyxDQUFDRSxDQUFDLENBQUNPLENBQUM7SUFDdkIsQ0FBQztJQUNMLE1BQU0sQ0FBQ1IsQ0FBQztBQUNaLENBQUM7QUFRTSxHQUFLLENBQUNXLGlCQUFpQixHQUFHLFFBQVEsQ0FBUEMsRUFBRSxFQUFLLENBQUM7O0lBQ3RDLEdBQUcsQ0FBR0MsUUFBUSxHQUFLRCxFQUFFLENBQWZDLFFBQVEsRUFBU0MsS0FBSyxHQUFHaEIsTUFBTSxDQUFDYyxFQUFFLEVBQUUsQ0FBQztRQUFBLENBQVU7SUFBQSxDQUFDO0lBQ3RELEdBQUssQ0FBcUM3QyxHQUFXLEdBQVhBLHVFQUFTLElBQTNDZ0QsU0FBUyxHQUF5QmhELEdBQVcsQ0FBN0NnRCxTQUFTLEVBQUVDLE1BQU0sR0FBaUJqRCxHQUFXLENBQWxDaUQsTUFBTSxFQUFFQyxVQUFVLEdBQUtsRCxHQUFXLENBQTFCa0QsVUFBVTtJQUNyQyxHQUFLLENBQUdDLFVBQVUsR0FBSzNDLCtEQUFjLEdBQTdCMkMsVUFBVTtJQUNsQixHQUFLLENBQXVCN0MsSUFBZSxHQUFmQSwrQ0FBUSxDQUFDLEtBQUssR0FBbkM4QyxNQUFNLEdBQWU5QyxJQUFlLEtBQTVCK0MsU0FBUyxHQUFJL0MsSUFBZTtJQUMzQyxHQUFLLENBQXVCQSxJQUFlLEdBQWZBLCtDQUFRLENBQUMsS0FBSyxHQUFuQ2dELE1BQU0sR0FBZWhELElBQWUsS0FBNUJpRCxTQUFTLEdBQUlqRCxJQUFlO0lBQzNDLEdBQUssQ0FBQ2tELElBQUcsR0FBR25ELDZDQUFNLENBQUMsSUFBSTtJQUN2QixHQUFLLENBQUNvRCxNQUFNLEdBQUdyRCw4Q0FBTyxDQUFDLFFBQVE7UUFBRjRDLE1BQU0sQ0FBTkEsU0FBUyxLQUFLLElBQUksSUFBSUEsU0FBUyxLQUFLLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBR0EsU0FBUyxDQUFDVSxRQUFRO09BQUksQ0FBQ1Y7UUFBQUEsU0FBUztJQUFBLENBQUM7SUFDcEgsR0FBSyxDQUFDVyxPQUFPLEdBQUd2RCw4Q0FBTyxDQUFDLFFBQzVCLEdBRGtDLENBQUM7UUFDM0IsRUFBRSxFQUFFMEMsUUFBUSxFQUNSLE1BQU0sQ0FBQ0EsUUFBUTtRQUNuQixFQUFFLEdBQUdHLE1BQU0sS0FBS1EsTUFBTSxFQUNsQixNQUFNLENBQUMsSUFBSTtRQUNmLE1BQU0sQ0FBQ0EsTUFBTSxDQUFDRyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFJLE1BQUdILE1BQU0sQ0FBQ0csS0FBSyxFQUFFLENBQUM7SUFDdEQsQ0FBQyxFQUFFLENBQUNkO1FBQUFBLFFBQVE7UUFBRUcsTUFBTTtRQUFFUSxNQUFNO0lBQUEsQ0FBQztJQUM3QixHQUFLLENBQUNJLFdBQVcsR0FBRzNELGtEQUFXLENBQUMsUUFBUTtRQUFGVSxNQUFNLENBQU5BLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSwyS0FBUSxXQUFLLENBQUM7Ozs7NkJBQzlFNkMsTUFBTTs7Ozs7K0JBQ0FLLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDQyxTQUFTLENBQUNQLE1BQU07O3dCQUMxQ0osU0FBUyxDQUFDLElBQUk7d0JBQ2RZLFVBQVUsQ0FBQyxRQUFROzRCQUFGWixNQUFNLENBQU5BLFNBQVMsQ0FBQyxLQUFLOzJCQUFHLEdBQUc7Ozs7OztRQUU5QyxDQUFDO09BQUcsQ0FBQ0k7UUFBQUEsTUFBTTtJQUFBLENBQUM7SUFDWixHQUFLLENBQUNTLFlBQVksR0FBR2hFLGtEQUFXLENBQUMsUUFBUTtRQUFGcUQsTUFBTSxDQUFOQSxTQUFTLENBQUMsSUFBSTtPQUFHLENBQUNBO1FBQUFBLFNBQVM7SUFBQSxDQUFDO0lBQ25FLEdBQUssQ0FBQ1ksYUFBYSxHQUFHakUsa0RBQVcsQ0FBQyxRQUFRO1FBQUZxRCxNQUFNLENBQU5BLFNBQVMsQ0FBQyxLQUFLO09BQUcsQ0FBQ0E7UUFBQUEsU0FBUztJQUFBLENBQUM7SUFDckUsR0FBSyxDQUFDYSxTQUFTLEdBQUdsRSxrREFBVyxDQUFDLFFBQ2xDLEdBRHdDLENBQUM7UUFDakNpRCxVQUFVLENBQUMsSUFBSTtRQUNmZ0IsYUFBYTtJQUNqQixDQUFDLEVBQUUsQ0FBQ2hCO1FBQUFBLFVBQVU7UUFBRWdCLGFBQWE7SUFBQSxDQUFDO0lBQzlCaEUsZ0RBQVMsQ0FBQyxRQUNkLEdBRG9CLENBQUM7UUFDYixHQUFLLENBQUNrRSxRQUFRLEdBQUcsUUFBUSxDQUFQQyxLQUFLLEVBQUssQ0FBQztZQUN6QixHQUFLLENBQUNDLElBQUksR0FBR2YsSUFBRyxDQUFDZ0IsT0FBTztZQUN4QixFQUFxRDtZQUNyRCxFQUFFLEdBQUdELElBQUksSUFBSUEsSUFBSSxDQUFDRSxRQUFRLENBQUNILEtBQUssQ0FBQ0ksTUFBTSxHQUNuQyxNQUFNO1lBQ1ZQLGFBQWE7UUFDakIsQ0FBQztRQUNEUSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLENBQVcsWUFBRVAsUUFBUTtRQUMvQ00sUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxDQUFZLGFBQUVQLFFBQVE7UUFDaEQsTUFBTSxDQUFDLFFBQ2YsR0FEcUIsQ0FBQztZQUNWTSxRQUFRLENBQUNFLG1CQUFtQixDQUFDLENBQVcsWUFBRVIsUUFBUTtZQUNsRE0sUUFBUSxDQUFDRSxtQkFBbUIsQ0FBQyxDQUFZLGFBQUVSLFFBQVE7UUFDdkQsQ0FBQztJQUNMLENBQUMsRUFBRSxDQUFDYjtRQUFBQSxJQUFHO1FBQUVXLGFBQWE7SUFBQSxDQUFDO0lBQ3ZCLEVBQUUsR0FBR2xCLE1BQU0sRUFDUCxNQUFNLGVBQUNoRCwwREFBbUIsQ0FBQ1UsaUVBQWlCLEVBQUV3QixNQUFNLENBQUM0QyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUVoQyxLQUFLLEdBQUdELFFBQVE7SUFDcEYsRUFBRSxHQUFHVyxNQUFNLEVBQ1AsTUFBTSxlQUFDeEQsMERBQW1CLENBQUNRLHFFQUFtQixFQUFFMEIsTUFBTSxDQUFDNEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFaEMsS0FBSyxHQUFHRCxRQUFRO0lBQ3RGLE1BQU0sZUFBRTdDLDBEQUFtQixDQUFDLENBQUssTUFBRSxDQUFDO1FBQUMrRSxTQUFTLEVBQUUsQ0FBeUI7SUFBQyxDQUFDLGdCQUN2RS9FLDBEQUFtQixDQUFDTSwyQ0FBTSxFQUFFNEIsTUFBTSxDQUFDNEMsTUFBTSxDQUFDLENBQUM7UUFBQyxDQUFlLGdCQUFFekIsTUFBTTtRQUFFMEIsU0FBUyxFQUFFLENBQStCO1FBQUVDLEtBQUssRUFBRTlDLE1BQU0sQ0FBQzRDLE1BQU0sQ0FBQyxDQUFDO1lBQUNHLGFBQWEsRUFBRTVCLE1BQU0sR0FBRyxDQUFNLFFBQUcsQ0FBTTtRQUFDLENBQUMsRUFBRVAsS0FBSyxDQUFDa0MsS0FBSztRQUFHRSxPQUFPLEVBQUVqQixZQUFZO1FBQUVrQixTQUFTLGdCQUFFbkYsMERBQW1CLENBQUNTLG1EQUFVLEVBQUUsQ0FBQztZQUFDdUMsTUFBTSxFQUFFQSxNQUFNO1FBQUMsQ0FBQztJQUFFLENBQUMsRUFBRUYsS0FBSyxHQUFHWSxPQUFPLGlCQUN6UzFELDBEQUFtQixDQUFDLENBQUksS0FBRSxDQUFDO1FBQUMsQ0FBWSxhQUFFLENBQWU7UUFBRStFLFNBQVMsRUFBRyxDQUE2QiwrQkFBa0QsT0FBaEQxQixNQUFNLElBQUksQ0FBcUM7UUFBSUUsR0FBRyxFQUFFQSxJQUFHO1FBQUU2QixJQUFJLEVBQUUsQ0FBTTtJQUFDLENBQUMsZ0JBQzdLcEYsMERBQW1CLENBQUMsQ0FBSSxLQUFFLENBQUM7UUFBQ2tGLE9BQU8sRUFBRXRCLFdBQVc7UUFBRW1CLFNBQVMsRUFBRSxDQUFtQztRQUFFSyxJQUFJLEVBQUUsQ0FBVTtJQUFDLENBQUMsRUFBRWpDLE1BQU0sR0FBRyxDQUFRLFVBQUcsQ0FBYyw4QkFDeEpuRCwwREFBbUIsQ0FBQyxDQUFJLEtBQUUsQ0FBQztRQUFDa0YsT0FBTyxFQUFFZixTQUFTO1FBQUVZLFNBQVMsRUFBRSxDQUFtQztRQUFFSyxJQUFJLEVBQUUsQ0FBVTtJQUFDLENBQUMsRUFBRSxDQUE0Qiw0Q0FDaEpwRiwwREFBbUIsQ0FBQyxDQUFJLEtBQUUsQ0FBQztRQUFDa0YsT0FBTyxFQUFFakMsVUFBVTtRQUFFOEIsU0FBUyxFQUFFLENBQW1DO1FBQUVLLElBQUksRUFBRSxDQUFVO0lBQUMsQ0FBQyxFQUFFLENBQVk7QUFDN0ksQ0FBQyxDQUNELENBQTZDO0dBdERoQ3pDLGlCQUFpQjs7UUFFZ0I1QyxtRUFBUztRQUM1QlEsMkRBQWM7OztLQUg1Qm9DLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvV2FsbGV0TXVsdGlCdXR0b24uanM/MjIzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCB7IHVzZVdhbGxldCB9IGZyb20gJ0Bzb2xhbmEvd2FsbGV0LWFkYXB0ZXItcmVhY3QnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuL0J1dHRvbic7XG5pbXBvcnQgeyB1c2VXYWxsZXRNb2RhbCB9IGZyb20gJy4vdXNlV2FsbGV0TW9kYWwnO1xuaW1wb3J0IHsgV2FsbGV0Q29ubmVjdEJ1dHRvbiB9IGZyb20gJy4vV2FsbGV0Q29ubmVjdEJ1dHRvbic7XG5pbXBvcnQgeyBXYWxsZXRJY29uIH0gZnJvbSAnLi9XYWxsZXRJY29uJztcbmltcG9ydCB7IFdhbGxldE1vZGFsQnV0dG9uIH0gZnJvbSAnLi9XYWxsZXRNb2RhbEJ1dHRvbic7XG5leHBvcnQgY29uc3QgV2FsbGV0TXVsdGlCdXR0b24gPSAoX2EpID0+IHtcbiAgICB2YXIgeyBjaGlsZHJlbiB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjaGlsZHJlblwiXSk7XG4gICAgY29uc3QgeyBwdWJsaWNLZXksIHdhbGxldCwgZGlzY29ubmVjdCB9ID0gdXNlV2FsbGV0KCk7XG4gICAgY29uc3QgeyBzZXRWaXNpYmxlIH0gPSB1c2VXYWxsZXRNb2RhbCgpO1xuICAgIGNvbnN0IFtjb3BpZWQsIHNldENvcGllZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2FjdGl2ZSwgc2V0QWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgY29uc3QgYmFzZTU4ID0gdXNlTWVtbygoKSA9PiBwdWJsaWNLZXkgPT09IG51bGwgfHwgcHVibGljS2V5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwdWJsaWNLZXkudG9CYXNlNTgoKSwgW3B1YmxpY0tleV0pO1xuICAgIGNvbnN0IGNvbnRlbnQgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKGNoaWxkcmVuKVxuICAgICAgICAgICAgcmV0dXJuIGNoaWxkcmVuO1xuICAgICAgICBpZiAoIXdhbGxldCB8fCAhYmFzZTU4KVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHJldHVybiBiYXNlNTguc2xpY2UoMCwgNCkgKyAnLi4nICsgYmFzZTU4LnNsaWNlKC00KTtcbiAgICB9LCBbY2hpbGRyZW4sIHdhbGxldCwgYmFzZTU4XSk7XG4gICAgY29uc3QgY29weUFkZHJlc3MgPSB1c2VDYWxsYmFjaygoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgaWYgKGJhc2U1OCkge1xuICAgICAgICAgICAgeWllbGQgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoYmFzZTU4KTtcbiAgICAgICAgICAgIHNldENvcGllZCh0cnVlKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0Q29waWVkKGZhbHNlKSwgNDAwKTtcbiAgICAgICAgfVxuICAgIH0pLCBbYmFzZTU4XSk7XG4gICAgY29uc3Qgb3BlbkRyb3Bkb3duID0gdXNlQ2FsbGJhY2soKCkgPT4gc2V0QWN0aXZlKHRydWUpLCBbc2V0QWN0aXZlXSk7XG4gICAgY29uc3QgY2xvc2VEcm9wZG93biA9IHVzZUNhbGxiYWNrKCgpID0+IHNldEFjdGl2ZShmYWxzZSksIFtzZXRBY3RpdmVdKTtcbiAgICBjb25zdCBvcGVuTW9kYWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgIGNsb3NlRHJvcGRvd24oKTtcbiAgICB9LCBbc2V0VmlzaWJsZSwgY2xvc2VEcm9wZG93bl0pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gcmVmLmN1cnJlbnQ7XG4gICAgICAgICAgICAvLyBEbyBub3RoaW5nIGlmIGNsaWNraW5nIGRyb3Bkb3duIG9yIGl0cyBkZXNjZW5kYW50c1xuICAgICAgICAgICAgaWYgKCFub2RlIHx8IG5vZGUuY29udGFpbnMoZXZlbnQudGFyZ2V0KSlcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjbG9zZURyb3Bkb3duKCk7XG4gICAgICAgIH07XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGxpc3RlbmVyKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGxpc3RlbmVyKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBsaXN0ZW5lcik7XG4gICAgICAgIH07XG4gICAgfSwgW3JlZiwgY2xvc2VEcm9wZG93bl0pO1xuICAgIGlmICghd2FsbGV0KVxuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChXYWxsZXRNb2RhbEJ1dHRvbiwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMpLCBjaGlsZHJlbik7XG4gICAgaWYgKCFiYXNlNTgpXG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFdhbGxldENvbm5lY3RCdXR0b24sIE9iamVjdC5hc3NpZ24oe30sIHByb3BzKSwgY2hpbGRyZW4pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJ3YWxsZXQtYWRhcHRlci1kcm9wZG93blwiIH0sXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCBPYmplY3QuYXNzaWduKHsgXCJhcmlhLWV4cGFuZGVkXCI6IGFjdGl2ZSwgY2xhc3NOYW1lOiBcIndhbGxldC1hZGFwdGVyLWJ1dHRvbi10cmlnZ2VyXCIsIHN0eWxlOiBPYmplY3QuYXNzaWduKHsgcG9pbnRlckV2ZW50czogYWN0aXZlID8gJ25vbmUnIDogJ2F1dG8nIH0sIHByb3BzLnN0eWxlKSwgb25DbGljazogb3BlbkRyb3Bkb3duLCBzdGFydEljb246IFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2FsbGV0SWNvbiwgeyB3YWxsZXQ6IHdhbGxldCB9KSB9LCBwcm9wcyksIGNvbnRlbnQpLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgeyBcImFyaWEtbGFiZWxcIjogXCJkcm9wZG93bi1saXN0XCIsIGNsYXNzTmFtZTogYHdhbGxldC1hZGFwdGVyLWRyb3Bkb3duLWxpc3QgJHthY3RpdmUgJiYgJ3dhbGxldC1hZGFwdGVyLWRyb3Bkb3duLWxpc3QtYWN0aXZlJ31gLCByZWY6IHJlZiwgcm9sZTogXCJtZW51XCIgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IG9uQ2xpY2s6IGNvcHlBZGRyZXNzLCBjbGFzc05hbWU6IFwid2FsbGV0LWFkYXB0ZXItZHJvcGRvd24tbGlzdC1pdGVtXCIsIHJvbGU6IFwibWVudWl0ZW1cIiB9LCBjb3BpZWQgPyAnQ29waWVkJyA6ICdDb3B5IGFkZHJlc3MnKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IG9uQ2xpY2s6IG9wZW5Nb2RhbCwgY2xhc3NOYW1lOiBcIndhbGxldC1hZGFwdGVyLWRyb3Bkb3duLWxpc3QtaXRlbVwiLCByb2xlOiBcIm1lbnVpdGVtXCIgfSwgXCJDb25uZWN0IGEgZGlmZmVyZW50IHdhbGxldFwiKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IG9uQ2xpY2s6IGRpc2Nvbm5lY3QsIGNsYXNzTmFtZTogXCJ3YWxsZXQtYWRhcHRlci1kcm9wZG93bi1saXN0LWl0ZW1cIiwgcm9sZTogXCJtZW51aXRlbVwiIH0sIFwiRGlzY29ubmVjdFwiKSkpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XYWxsZXRNdWx0aUJ1dHRvbi5qcy5tYXAiXSwibmFtZXMiOlsidXNlV2FsbGV0IiwiUmVhY3QiLCJ1c2VDYWxsYmFjayIsInVzZUVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkJ1dHRvbiIsInVzZVdhbGxldE1vZGFsIiwiV2FsbGV0Q29ubmVjdEJ1dHRvbiIsIldhbGxldEljb24iLCJXYWxsZXRNb2RhbEJ1dHRvbiIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIl9fcmVzdCIsInMiLCJ0IiwicCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJpIiwibGVuZ3RoIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJXYWxsZXRNdWx0aUJ1dHRvbiIsIl9hIiwiY2hpbGRyZW4iLCJwcm9wcyIsInB1YmxpY0tleSIsIndhbGxldCIsImRpc2Nvbm5lY3QiLCJzZXRWaXNpYmxlIiwiY29waWVkIiwic2V0Q29waWVkIiwiYWN0aXZlIiwic2V0QWN0aXZlIiwicmVmIiwiYmFzZTU4IiwidG9CYXNlNTgiLCJjb250ZW50Iiwic2xpY2UiLCJjb3B5QWRkcmVzcyIsIm5hdmlnYXRvciIsImNsaXBib2FyZCIsIndyaXRlVGV4dCIsInNldFRpbWVvdXQiLCJvcGVuRHJvcGRvd24iLCJjbG9zZURyb3Bkb3duIiwib3Blbk1vZGFsIiwibGlzdGVuZXIiLCJldmVudCIsIm5vZGUiLCJjdXJyZW50IiwiY29udGFpbnMiLCJ0YXJnZXQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY3JlYXRlRWxlbWVudCIsImFzc2lnbiIsImNsYXNzTmFtZSIsInN0eWxlIiwicG9pbnRlckV2ZW50cyIsIm9uQ2xpY2siLCJzdGFydEljb24iLCJyb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/WalletMultiButton.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/index.js ***!
  \*******************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _useWalletModal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useWalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _useWalletModal__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _useWalletModal__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletConnectButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WalletConnectButton */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletConnectButton.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletConnectButton__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletConnectButton__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WalletModal */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModal.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletModal__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletModal__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletModalButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WalletModalButton */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalButton.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletModalButton__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletModalButton__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletModalProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WalletModalProvider */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletModalProvider.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletModalProvider__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletModalProvider__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletDisconnectButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WalletDisconnectButton */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletDisconnectButton.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletDisconnectButton__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletDisconnectButton__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletIcon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WalletIcon */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletIcon.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletIcon__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletIcon__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _WalletMultiButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WalletMultiButton */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/WalletMultiButton.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _WalletMultiButton__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _WalletMultiButton__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0s7QUFDUjtBQUNNO0FBQ0U7QUFDRztBQUNaO0FBRTVCLENBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpL2xpYi9pbmRleC5qcz82MTkzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vdXNlV2FsbGV0TW9kYWwnO1xuZXhwb3J0ICogZnJvbSAnLi9XYWxsZXRDb25uZWN0QnV0dG9uJztcbmV4cG9ydCAqIGZyb20gJy4vV2FsbGV0TW9kYWwnO1xuZXhwb3J0ICogZnJvbSAnLi9XYWxsZXRNb2RhbEJ1dHRvbic7XG5leHBvcnQgKiBmcm9tICcuL1dhbGxldE1vZGFsUHJvdmlkZXInO1xuZXhwb3J0ICogZnJvbSAnLi9XYWxsZXREaXNjb25uZWN0QnV0dG9uJztcbmV4cG9ydCAqIGZyb20gJy4vV2FsbGV0SWNvbic7XG5leHBvcnQgKiBmcm9tICcuL1dhbGxldE11bHRpQnV0dG9uJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js ***!
  \****************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletModalContext\": function() { return /* binding */ WalletModalContext; },\n/* harmony export */   \"useWalletModal\": function() { return /* binding */ useWalletModal; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar _s = $RefreshSig$();\nvar WalletModalContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nfunction useWalletModal() {\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(WalletModalContext);\n} //# sourceMappingURL=useWalletModal.js.map\n_s(useWalletModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdC11aS9saWIvdXNlV2FsbGV0TW9kYWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRDs7QUFDMUMsR0FBSyxDQUFDRSxrQkFBa0IsaUJBQUdGLG9EQUFhLENBQUMsQ0FBQyxDQUFDO0FBQzNDLFNBQVNHLGNBQWMsR0FBRyxDQUFDOztJQUM5QixNQUFNLENBQUNGLGlEQUFVLENBQUNDLGtCQUFrQjtBQUN4QyxDQUFDLENBQ3lDO0dBSDFCQyxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpL2xpYi91c2VXYWxsZXRNb2RhbC5qcz9kZWQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5leHBvcnQgY29uc3QgV2FsbGV0TW9kYWxDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh7fSk7XG5leHBvcnQgZnVuY3Rpb24gdXNlV2FsbGV0TW9kYWwoKSB7XG4gICAgcmV0dXJuIHVzZUNvbnRleHQoV2FsbGV0TW9kYWxDb250ZXh0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZVdhbGxldE1vZGFsLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsIldhbGxldE1vZGFsQ29udGV4dCIsInVzZVdhbGxldE1vZGFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/wallet-adapter-react-ui/lib/useWalletModal.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/assert/assert.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/compiled/assert/assert.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"../node_modules/process/browser.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n(function(){var e={901:function(e){e.exports=function(e,r,n){if(e.filter)return e.filter(r,n);if(void 0===e||null===e)throw new TypeError;if(\"function\"!=typeof r)throw new TypeError;var o=[];for(var a=0;a<e.length;a++){if(!t.call(e,a))continue;var i=e[a];if(r.call(n,i,a,e))o.push(i)}return o};var t=Object.prototype.hasOwnProperty},313:function(e,t,r){\"use strict\";function _typeof(e){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(e){return typeof e}}else{_typeof=function _typeof(e){return e&&typeof Symbol===\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e}}return _typeof(e)}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}var n=r(823),o=n.codes,a=o.ERR_AMBIGUOUS_ARGUMENT,i=o.ERR_INVALID_ARG_TYPE,c=o.ERR_INVALID_ARG_VALUE,u=o.ERR_INVALID_RETURN_VALUE,f=o.ERR_MISSING_ARGS;var s=r(298);var p=r(650),l=p.inspect;var y=r(650).types,d=y.isPromise,g=y.isRegExp;var v=Object.assign?Object.assign:r(274).assign;var b=Object.is?Object.is:r(450);var h=new Map;var m;var A;var S;var E;var P;function lazyLoadComparison(){var e=r(655);m=e.isDeepEqual;A=e.isDeepStrictEqual}var w=/[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;var O=null&&0;var j=function escapeFn(e){return O[e.charCodeAt(0)]};var _=false;var x=e.exports=ok;var I={};function innerFail(e){if(e.message instanceof Error)throw e.message;throw new s(e)}function fail(e,t,r,n,o){var a=arguments.length;var i;if(a===0){i=\"Failed\"}else if(a===1){r=e;e=undefined}else{if(_===false){_=true;var c=process.emitWarning?process.emitWarning:console.warn.bind(console);c(\"assert.fail() with more than one argument is deprecated. \"+\"Please use assert.strictEqual() instead or only pass a message.\",\"DeprecationWarning\",\"DEP0094\")}if(a===2)n=\"!=\"}if(r instanceof Error)throw r;var u={actual:e,expected:t,operator:n===undefined?\"fail\":n,stackStartFn:o||fail};if(r!==undefined){u.message=r}var f=new s(u);if(i){f.message=i;f.generatedMessage=true}throw f}x.fail=fail;x.AssertionError=s;function innerOk(e,t,r,n){if(!r){var o=false;if(t===0){o=true;n=\"No value argument passed to `assert.ok()`\"}else if(n instanceof Error){throw n}var a=new s({actual:r,expected:true,message:n,operator:\"==\",stackStartFn:e});a.generatedMessage=o;throw a}}function ok(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}innerOk.apply(void 0,[ok,t.length].concat(t))}x.ok=ok;x.equal=function equal(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(e!=t){innerFail({actual:e,expected:t,message:r,operator:\"==\",stackStartFn:equal})}};x.notEqual=function notEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(e==t){innerFail({actual:e,expected:t,message:r,operator:\"!=\",stackStartFn:notEqual})}};x.deepEqual=function deepEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(m===undefined)lazyLoadComparison();if(!m(e,t)){innerFail({actual:e,expected:t,message:r,operator:\"deepEqual\",stackStartFn:deepEqual})}};x.notDeepEqual=function notDeepEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(m===undefined)lazyLoadComparison();if(m(e,t)){innerFail({actual:e,expected:t,message:r,operator:\"notDeepEqual\",stackStartFn:notDeepEqual})}};x.deepStrictEqual=function deepStrictEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(m===undefined)lazyLoadComparison();if(!A(e,t)){innerFail({actual:e,expected:t,message:r,operator:\"deepStrictEqual\",stackStartFn:deepStrictEqual})}};x.notDeepStrictEqual=notDeepStrictEqual;function notDeepStrictEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(m===undefined)lazyLoadComparison();if(A(e,t)){innerFail({actual:e,expected:t,message:r,operator:\"notDeepStrictEqual\",stackStartFn:notDeepStrictEqual})}}x.strictEqual=function strictEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(!b(e,t)){innerFail({actual:e,expected:t,message:r,operator:\"strictEqual\",stackStartFn:strictEqual})}};x.notStrictEqual=function notStrictEqual(e,t,r){if(arguments.length<2){throw new f(\"actual\",\"expected\")}if(b(e,t)){innerFail({actual:e,expected:t,message:r,operator:\"notStrictEqual\",stackStartFn:notStrictEqual})}};var F=function Comparison(e,t,r){var n=this;_classCallCheck(this,Comparison);t.forEach((function(t){if(t in e){if(r!==undefined&&typeof r[t]===\"string\"&&g(e[t])&&e[t].test(r[t])){n[t]=r[t]}else{n[t]=e[t]}}}))};function compareExceptionKey(e,t,r,n,o,a){if(!(r in e)||!A(e[r],t[r])){if(!n){var i=new F(e,o);var c=new F(t,o,e);var u=new s({actual:i,expected:c,operator:\"deepStrictEqual\",stackStartFn:a});u.actual=e;u.expected=t;u.operator=a.name;throw u}innerFail({actual:e,expected:t,message:n,operator:a.name,stackStartFn:a})}}function expectedException(e,t,r,n){if(typeof t!==\"function\"){if(g(t))return t.test(e);if(arguments.length===2){throw new i(\"expected\",[\"Function\",\"RegExp\"],t)}if(_typeof(e)!==\"object\"||e===null){var o=new s({actual:e,expected:t,message:r,operator:\"deepStrictEqual\",stackStartFn:n});o.operator=n.name;throw o}var a=Object.keys(t);if(t instanceof Error){a.push(\"name\",\"message\")}else if(a.length===0){throw new c(\"error\",t,\"may not be an empty object\")}if(m===undefined)lazyLoadComparison();a.forEach((function(o){if(typeof e[o]===\"string\"&&g(t[o])&&t[o].test(e[o])){return}compareExceptionKey(e,t,o,r,a,n)}));return true}if(t.prototype!==undefined&&e instanceof t){return true}if(Error.isPrototypeOf(t)){return false}return t.call({},e)===true}function getActual(e){if(typeof e!==\"function\"){throw new i(\"fn\",\"Function\",e)}try{e()}catch(e){return e}return I}function checkIsPromise(e){return d(e)||e!==null&&_typeof(e)===\"object\"&&typeof e.then===\"function\"&&typeof e.catch===\"function\"}function waitForActual(e){return Promise.resolve().then((function(){var t;if(typeof e===\"function\"){t=e();if(!checkIsPromise(t)){throw new u(\"instance of Promise\",\"promiseFn\",t)}}else if(checkIsPromise(e)){t=e}else{throw new i(\"promiseFn\",[\"Function\",\"Promise\"],e)}return Promise.resolve().then((function(){return t})).then((function(){return I})).catch((function(e){return e}))}))}function expectsError(e,t,r,n){if(typeof r===\"string\"){if(arguments.length===4){throw new i(\"error\",[\"Object\",\"Error\",\"Function\",\"RegExp\"],r)}if(_typeof(t)===\"object\"&&t!==null){if(t.message===r){throw new a(\"error/message\",'The error message \"'.concat(t.message,'\" is identical to the message.'))}}else if(t===r){throw new a(\"error/message\",'The error \"'.concat(t,'\" is identical to the message.'))}n=r;r=undefined}else if(r!=null&&_typeof(r)!==\"object\"&&typeof r!==\"function\"){throw new i(\"error\",[\"Object\",\"Error\",\"Function\",\"RegExp\"],r)}if(t===I){var o=\"\";if(r&&r.name){o+=\" (\".concat(r.name,\")\")}o+=n?\": \".concat(n):\".\";var c=e.name===\"rejects\"?\"rejection\":\"exception\";innerFail({actual:undefined,expected:r,operator:e.name,message:\"Missing expected \".concat(c).concat(o),stackStartFn:e})}if(r&&!expectedException(t,r,n,e)){throw t}}function expectsNoError(e,t,r,n){if(t===I)return;if(typeof r===\"string\"){n=r;r=undefined}if(!r||expectedException(t,r)){var o=n?\": \".concat(n):\".\";var a=e.name===\"doesNotReject\"?\"rejection\":\"exception\";innerFail({actual:t,expected:r,operator:e.name,message:\"Got unwanted \".concat(a).concat(o,\"\\n\")+'Actual message: \"'.concat(t&&t.message,'\"'),stackStartFn:e})}throw t}x.throws=function throws(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++){r[n-1]=arguments[n]}expectsError.apply(void 0,[throws,getActual(e)].concat(r))};x.rejects=function rejects(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++){r[n-1]=arguments[n]}return waitForActual(e).then((function(e){return expectsError.apply(void 0,[rejects,e].concat(r))}))};x.doesNotThrow=function doesNotThrow(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++){r[n-1]=arguments[n]}expectsNoError.apply(void 0,[doesNotThrow,getActual(e)].concat(r))};x.doesNotReject=function doesNotReject(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++){r[n-1]=arguments[n]}return waitForActual(e).then((function(e){return expectsNoError.apply(void 0,[doesNotReject,e].concat(r))}))};x.ifError=function ifError(e){if(e!==null&&e!==undefined){var t=\"ifError got unwanted exception: \";if(_typeof(e)===\"object\"&&typeof e.message===\"string\"){if(e.message.length===0&&e.constructor){t+=e.constructor.name}else{t+=e.message}}else{t+=l(e)}var r=new s({actual:e,expected:null,operator:\"ifError\",message:t,stackStartFn:ifError});var n=e.stack;if(typeof n===\"string\"){var o=n.split(\"\\n\");o.shift();var a=r.stack.split(\"\\n\");for(var i=0;i<o.length;i++){var c=a.indexOf(o[i]);if(c!==-1){a=a.slice(0,c);break}}r.stack=\"\".concat(a.join(\"\\n\"),\"\\n\").concat(o.join(\"\\n\"))}throw r}};function strict(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}innerOk.apply(void 0,[strict,t.length].concat(t))}x.strict=v(strict,x,{equal:x.strictEqual,deepEqual:x.deepStrictEqual,notEqual:x.notStrictEqual,notDeepEqual:x.notDeepStrictEqual});x.strict.strict=x.strict},298:function(e,t,r){\"use strict\";function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};var n=Object.keys(r);if(typeof Object.getOwnPropertySymbols===\"function\"){n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))}n.forEach((function(t){_defineProperty(e,t,r[t])}))}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||false;n.configurable=true;if(\"value\"in n)n.writable=true;Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}function _possibleConstructorReturn(e,t){if(t&&(_typeof(t)===\"object\"||typeof t===\"function\")){return t}return _assertThisInitialized(e)}function _assertThisInitialized(e){if(e===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}return e}function _inherits(e,t){if(typeof t!==\"function\"&&t!==null){throw new TypeError(\"Super expression must either be null or a function\")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)_setPrototypeOf(e,t)}function _wrapNativeSuper(e){var t=typeof Map===\"function\"?new Map:undefined;_wrapNativeSuper=function _wrapNativeSuper(e){if(e===null||!_isNativeFunction(e))return e;if(typeof e!==\"function\"){throw new TypeError(\"Super expression must either be null or a function\")}if(typeof t!==\"undefined\"){if(t.has(e))return t.get(e);t.set(e,Wrapper)}function Wrapper(){return _construct(e,arguments,_getPrototypeOf(this).constructor)}Wrapper.prototype=Object.create(e.prototype,{constructor:{value:Wrapper,enumerable:false,writable:true,configurable:true}});return _setPrototypeOf(Wrapper,e)};return _wrapNativeSuper(e)}function isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],(function(){})));return true}catch(e){return false}}function _construct(e,t,r){if(isNativeReflectConstruct()){_construct=Reflect.construct}else{_construct=function _construct(e,t,r){var n=[null];n.push.apply(n,t);var o=Function.bind.apply(e,n);var a=new o;if(r)_setPrototypeOf(a,r.prototype);return a}}return _construct.apply(null,arguments)}function _isNativeFunction(e){return Function.toString.call(e).indexOf(\"[native code]\")!==-1}function _setPrototypeOf(e,t){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(e,t){e.__proto__=t;return e};return _setPrototypeOf(e,t)}function _getPrototypeOf(e){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(e){return e.__proto__||Object.getPrototypeOf(e)};return _getPrototypeOf(e)}function _typeof(e){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(e){return typeof e}}else{_typeof=function _typeof(e){return e&&typeof Symbol===\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e}}return _typeof(e)}var n=r(650),o=n.inspect;var a=r(823),i=a.codes.ERR_INVALID_ARG_TYPE;function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function repeat(e,t){t=Math.floor(t);if(e.length==0||t==0)return\"\";var r=e.length*t;t=Math.floor(Math.log(t)/Math.log(2));while(t){e+=e;t--}e+=e.substring(0,r-e.length);return e}var c=\"\";var u=\"\";var f=\"\";var s=\"\";var p={deepStrictEqual:\"Expected values to be strictly deep-equal:\",strictEqual:\"Expected values to be strictly equal:\",strictEqualObject:'Expected \"actual\" to be reference-equal to \"expected\":',deepEqual:\"Expected values to be loosely deep-equal:\",equal:\"Expected values to be loosely equal:\",notDeepStrictEqual:'Expected \"actual\" not to be strictly deep-equal to:',notStrictEqual:'Expected \"actual\" to be strictly unequal to:',notStrictEqualObject:'Expected \"actual\" not to be reference-equal to \"expected\":',notDeepEqual:'Expected \"actual\" not to be loosely deep-equal to:',notEqual:'Expected \"actual\" to be loosely unequal to:',notIdentical:\"Values identical but not reference-equal:\"};var l=10;function copyError(e){var t=Object.keys(e);var r=Object.create(Object.getPrototypeOf(e));t.forEach((function(t){r[t]=e[t]}));Object.defineProperty(r,\"message\",{value:e.message});return r}function inspectValue(e){return o(e,{compact:false,customInspect:false,depth:1e3,maxArrayLength:Infinity,showHidden:false,breakLength:Infinity,showProxy:false,sorted:true,getters:true})}function createErrDiff(e,t,r){var n=\"\";var o=\"\";var a=0;var i=\"\";var y=false;var d=inspectValue(e);var g=d.split(\"\\n\");var v=inspectValue(t).split(\"\\n\");var b=0;var h=\"\";if(r===\"strictEqual\"&&_typeof(e)===\"object\"&&_typeof(t)===\"object\"&&e!==null&&t!==null){r=\"strictEqualObject\"}if(g.length===1&&v.length===1&&g[0]!==v[0]){var m=g[0].length+v[0].length;if(m<=l){if((_typeof(e)!==\"object\"||e===null)&&(_typeof(t)!==\"object\"||t===null)&&(e!==0||t!==0)){return\"\".concat(p[r],\"\\n\\n\")+\"\".concat(g[0],\" !== \").concat(v[0],\"\\n\")}}else if(r!==\"strictEqualObject\"){var A=process.stderr&&process.stderr.isTTY?process.stderr.columns:80;if(m<A){while(g[0][b]===v[0][b]){b++}if(b>2){h=\"\\n  \".concat(repeat(\" \",b),\"^\");b=0}}}}var S=g[g.length-1];var E=v[v.length-1];while(S===E){if(b++<2){i=\"\\n  \".concat(S).concat(i)}else{n=S}g.pop();v.pop();if(g.length===0||v.length===0)break;S=g[g.length-1];E=v[v.length-1]}var P=Math.max(g.length,v.length);if(P===0){var w=d.split(\"\\n\");if(w.length>30){w[26]=\"\".concat(c,\"...\").concat(s);while(w.length>27){w.pop()}}return\"\".concat(p.notIdentical,\"\\n\\n\").concat(w.join(\"\\n\"),\"\\n\")}if(b>3){i=\"\\n\".concat(c,\"...\").concat(s).concat(i);y=true}if(n!==\"\"){i=\"\\n  \".concat(n).concat(i);n=\"\"}var O=0;var j=p[r]+\"\\n\".concat(u,\"+ actual\").concat(s,\" \").concat(f,\"- expected\").concat(s);var _=\" \".concat(c,\"...\").concat(s,\" Lines skipped\");for(b=0;b<P;b++){var x=b-a;if(g.length<b+1){if(x>1&&b>2){if(x>4){o+=\"\\n\".concat(c,\"...\").concat(s);y=true}else if(x>3){o+=\"\\n  \".concat(v[b-2]);O++}o+=\"\\n  \".concat(v[b-1]);O++}a=b;n+=\"\\n\".concat(f,\"-\").concat(s,\" \").concat(v[b]);O++}else if(v.length<b+1){if(x>1&&b>2){if(x>4){o+=\"\\n\".concat(c,\"...\").concat(s);y=true}else if(x>3){o+=\"\\n  \".concat(g[b-2]);O++}o+=\"\\n  \".concat(g[b-1]);O++}a=b;o+=\"\\n\".concat(u,\"+\").concat(s,\" \").concat(g[b]);O++}else{var I=v[b];var F=g[b];var k=F!==I&&(!endsWith(F,\",\")||F.slice(0,-1)!==I);if(k&&endsWith(I,\",\")&&I.slice(0,-1)===F){k=false;F+=\",\"}if(k){if(x>1&&b>2){if(x>4){o+=\"\\n\".concat(c,\"...\").concat(s);y=true}else if(x>3){o+=\"\\n  \".concat(g[b-2]);O++}o+=\"\\n  \".concat(g[b-1]);O++}a=b;o+=\"\\n\".concat(u,\"+\").concat(s,\" \").concat(F);n+=\"\\n\".concat(f,\"-\").concat(s,\" \").concat(I);O+=2}else{o+=n;n=\"\";if(x===1||b===0){o+=\"\\n  \".concat(F);O++}}}if(O>20&&b<P-2){return\"\".concat(j).concat(_,\"\\n\").concat(o,\"\\n\").concat(c,\"...\").concat(s).concat(n,\"\\n\")+\"\".concat(c,\"...\").concat(s)}}return\"\".concat(j).concat(y?_:\"\",\"\\n\").concat(o).concat(n).concat(i).concat(h)}var y=function(e){_inherits(AssertionError,e);function AssertionError(e){var t;_classCallCheck(this,AssertionError);if(_typeof(e)!==\"object\"||e===null){throw new i(\"options\",\"Object\",e)}var r=e.message,n=e.operator,o=e.stackStartFn;var a=e.actual,l=e.expected;var y=Error.stackTraceLimit;Error.stackTraceLimit=0;if(r!=null){t=_possibleConstructorReturn(this,_getPrototypeOf(AssertionError).call(this,String(r)))}else{if(process.stderr&&process.stderr.isTTY){if(process.stderr&&process.stderr.getColorDepth&&process.stderr.getColorDepth()!==1){c=\"\u001b[34m\";u=\"\u001b[32m\";s=\"\u001b[39m\";f=\"\u001b[31m\"}else{c=\"\";u=\"\";s=\"\";f=\"\"}}if(_typeof(a)===\"object\"&&a!==null&&_typeof(l)===\"object\"&&l!==null&&\"stack\"in a&&a instanceof Error&&\"stack\"in l&&l instanceof Error){a=copyError(a);l=copyError(l)}if(n===\"deepStrictEqual\"||n===\"strictEqual\"){t=_possibleConstructorReturn(this,_getPrototypeOf(AssertionError).call(this,createErrDiff(a,l,n)))}else if(n===\"notDeepStrictEqual\"||n===\"notStrictEqual\"){var d=p[n];var g=inspectValue(a).split(\"\\n\");if(n===\"notStrictEqual\"&&_typeof(a)===\"object\"&&a!==null){d=p.notStrictEqualObject}if(g.length>30){g[26]=\"\".concat(c,\"...\").concat(s);while(g.length>27){g.pop()}}if(g.length===1){t=_possibleConstructorReturn(this,_getPrototypeOf(AssertionError).call(this,\"\".concat(d,\" \").concat(g[0])))}else{t=_possibleConstructorReturn(this,_getPrototypeOf(AssertionError).call(this,\"\".concat(d,\"\\n\\n\").concat(g.join(\"\\n\"),\"\\n\")))}}else{var v=inspectValue(a);var b=\"\";var h=p[n];if(n===\"notDeepEqual\"||n===\"notEqual\"){v=\"\".concat(p[n],\"\\n\\n\").concat(v);if(v.length>1024){v=\"\".concat(v.slice(0,1021),\"...\")}}else{b=\"\".concat(inspectValue(l));if(v.length>512){v=\"\".concat(v.slice(0,509),\"...\")}if(b.length>512){b=\"\".concat(b.slice(0,509),\"...\")}if(n===\"deepEqual\"||n===\"equal\"){v=\"\".concat(h,\"\\n\\n\").concat(v,\"\\n\\nshould equal\\n\\n\")}else{b=\" \".concat(n,\" \").concat(b)}}t=_possibleConstructorReturn(this,_getPrototypeOf(AssertionError).call(this,\"\".concat(v).concat(b)))}}Error.stackTraceLimit=y;t.generatedMessage=!r;Object.defineProperty(_assertThisInitialized(t),\"name\",{value:\"AssertionError [ERR_ASSERTION]\",enumerable:false,writable:true,configurable:true});t.code=\"ERR_ASSERTION\";t.actual=a;t.expected=l;t.operator=n;if(Error.captureStackTrace){Error.captureStackTrace(_assertThisInitialized(t),o)}t.stack;t.name=\"AssertionError\";return _possibleConstructorReturn(t)}_createClass(AssertionError,[{key:\"toString\",value:function toString(){return\"\".concat(this.name,\" [\").concat(this.code,\"]: \").concat(this.message)}},{key:o.custom,value:function value(e,t){return o(this,_objectSpread({},t,{customInspect:false,depth:0}))}}]);return AssertionError}(_wrapNativeSuper(Error));e.exports=y},823:function(e,t,r){\"use strict\";function _typeof(e){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(e){return typeof e}}else{_typeof=function _typeof(e){return e&&typeof Symbol===\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e}}return _typeof(e)}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _possibleConstructorReturn(e,t){if(t&&(_typeof(t)===\"object\"||typeof t===\"function\")){return t}return _assertThisInitialized(e)}function _assertThisInitialized(e){if(e===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}return e}function _getPrototypeOf(e){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(e){return e.__proto__||Object.getPrototypeOf(e)};return _getPrototypeOf(e)}function _inherits(e,t){if(typeof t!==\"function\"&&t!==null){throw new TypeError(\"Super expression must either be null or a function\")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(e,t){e.__proto__=t;return e};return _setPrototypeOf(e,t)}var n={};var o;var a;function createErrorType(e,t,r){if(!r){r=Error}function getMessage(e,r,n){if(typeof t===\"string\"){return t}else{return t(e,r,n)}}var o=function(t){_inherits(NodeError,t);function NodeError(t,r,n){var o;_classCallCheck(this,NodeError);o=_possibleConstructorReturn(this,_getPrototypeOf(NodeError).call(this,getMessage(t,r,n)));o.code=e;return o}return NodeError}(r);n[e]=o}function oneOf(e,t){if(Array.isArray(e)){var r=e.length;e=e.map((function(e){return String(e)}));if(r>2){return\"one of \".concat(t,\" \").concat(e.slice(0,r-1).join(\", \"),\", or \")+e[r-1]}else if(r===2){return\"one of \".concat(t,\" \").concat(e[0],\" or \").concat(e[1])}else{return\"of \".concat(t,\" \").concat(e[0])}}else{return\"of \".concat(t,\" \").concat(String(e))}}function startsWith(e,t,r){return e.substr(!r||r<0?0:+r,t.length)===t}function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function includes(e,t,r){if(typeof r!==\"number\"){r=0}if(r+t.length>e.length){return false}else{return e.indexOf(t,r)!==-1}}createErrorType(\"ERR_AMBIGUOUS_ARGUMENT\",'The \"%s\" argument is ambiguous. %s',TypeError);createErrorType(\"ERR_INVALID_ARG_TYPE\",(function(e,t,n){if(o===undefined)o=r(313);o(typeof e===\"string\",\"'name' must be a string\");var a;if(typeof t===\"string\"&&startsWith(t,\"not \")){a=\"must not be\";t=t.replace(/^not /,\"\")}else{a=\"must be\"}var i;if(endsWith(e,\" argument\")){i=\"The \".concat(e,\" \").concat(a,\" \").concat(oneOf(t,\"type\"))}else{var c=includes(e,\".\")?\"property\":\"argument\";i='The \"'.concat(e,'\" ').concat(c,\" \").concat(a,\" \").concat(oneOf(t,\"type\"))}i+=\". Received type \".concat(_typeof(n));return i}),TypeError);createErrorType(\"ERR_INVALID_ARG_VALUE\",(function(e,t){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"is invalid\";if(a===undefined)a=r(650);var o=a.inspect(t);if(o.length>128){o=\"\".concat(o.slice(0,128),\"...\")}return\"The argument '\".concat(e,\"' \").concat(n,\". Received \").concat(o)}),TypeError,RangeError);createErrorType(\"ERR_INVALID_RETURN_VALUE\",(function(e,t,r){var n;if(r&&r.constructor&&r.constructor.name){n=\"instance of \".concat(r.constructor.name)}else{n=\"type \".concat(_typeof(r))}return\"Expected \".concat(e,' to be returned from the \"').concat(t,'\"')+\" function but got \".concat(n,\".\")}),TypeError);createErrorType(\"ERR_MISSING_ARGS\",(function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++){t[n]=arguments[n]}if(o===undefined)o=r(313);o(t.length>0,\"At least one arg needs to be specified\");var a=\"The \";var i=t.length;t=t.map((function(e){return'\"'.concat(e,'\"')}));switch(i){case 1:a+=\"\".concat(t[0],\" argument\");break;case 2:a+=\"\".concat(t[0],\" and \").concat(t[1],\" arguments\");break;default:a+=t.slice(0,i-1).join(\", \");a+=\", and \".concat(t[i-1],\" arguments\");break}return\"\".concat(a,\" must be specified\")}),TypeError);e.exports.codes=n},655:function(e,t,r){\"use strict\";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(e,t){var r=[];var n=true;var o=false;var a=undefined;try{for(var i=e[Symbol.iterator](),c;!(n=(c=i.next()).done);n=true){r.push(c.value);if(t&&r.length===t)break}}catch(e){o=true;a=e}finally{try{if(!n&&i[\"return\"]!=null)i[\"return\"]()}finally{if(o)throw a}}return r}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _typeof(e){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(e){return typeof e}}else{_typeof=function _typeof(e){return e&&typeof Symbol===\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e}}return _typeof(e)}var n=/a/g.flags!==undefined;var o=function arrayFromSet(e){var t=[];e.forEach((function(e){return t.push(e)}));return t};var a=function arrayFromMap(e){var t=[];e.forEach((function(e,r){return t.push([r,e])}));return t};var i=Object.is?Object.is:r(450);var c=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols:function(){return[]};var u=Number.isNaN?Number.isNaN:r(674);function uncurryThis(e){return e.call.bind(e)}var f=uncurryThis(Object.prototype.hasOwnProperty);var s=uncurryThis(Object.prototype.propertyIsEnumerable);var p=uncurryThis(Object.prototype.toString);var l=r(650).types,y=l.isAnyArrayBuffer,d=l.isArrayBufferView,g=l.isDate,v=l.isMap,b=l.isRegExp,h=l.isSet,m=l.isNativeError,A=l.isBoxedPrimitive,S=l.isNumberObject,E=l.isStringObject,P=l.isBooleanObject,w=l.isBigIntObject,O=l.isSymbolObject,j=l.isFloat32Array,_=l.isFloat64Array;function isNonIndex(e){if(e.length===0||e.length>10)return true;for(var t=0;t<e.length;t++){var r=e.charCodeAt(t);if(r<48||r>57)return true}return e.length===10&&e>=Math.pow(2,32)}function getOwnNonIndexProperties(e){return Object.keys(e).filter(isNonIndex).concat(c(e).filter(Object.prototype.propertyIsEnumerable.bind(e)))}\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */function compare(e,t){if(e===t){return 0}var r=e.length;var n=t.length;for(var o=0,a=Math.min(r,n);o<a;++o){if(e[o]!==t[o]){r=e[o];n=t[o];break}}if(r<n){return-1}if(n<r){return 1}return 0}var x=undefined;var I=true;var F=false;var k=0;var R=1;var T=2;var N=3;function areSimilarRegExps(e,t){return n?e.source===t.source&&e.flags===t.flags:RegExp.prototype.toString.call(e)===RegExp.prototype.toString.call(t)}function areSimilarFloatArrays(e,t){if(e.byteLength!==t.byteLength){return false}for(var r=0;r<e.byteLength;r++){if(e[r]!==t[r]){return false}}return true}function areSimilarTypedArrays(e,t){if(e.byteLength!==t.byteLength){return false}return compare(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),new Uint8Array(t.buffer,t.byteOffset,t.byteLength))===0}function areEqualArrayBuffers(e,t){return e.byteLength===t.byteLength&&compare(new Uint8Array(e),new Uint8Array(t))===0}function isEqualBoxedPrimitive(e,t){if(S(e)){return S(t)&&i(Number.prototype.valueOf.call(e),Number.prototype.valueOf.call(t))}if(E(e)){return E(t)&&String.prototype.valueOf.call(e)===String.prototype.valueOf.call(t)}if(P(e)){return P(t)&&Boolean.prototype.valueOf.call(e)===Boolean.prototype.valueOf.call(t)}if(w(e)){return w(t)&&BigInt.prototype.valueOf.call(e)===BigInt.prototype.valueOf.call(t)}return O(t)&&Symbol.prototype.valueOf.call(e)===Symbol.prototype.valueOf.call(t)}function innerDeepEqual(e,t,r,n){if(e===t){if(e!==0)return true;return r?i(e,t):true}if(r){if(_typeof(e)!==\"object\"){return typeof e===\"number\"&&u(e)&&u(t)}if(_typeof(t)!==\"object\"||e===null||t===null){return false}if(Object.getPrototypeOf(e)!==Object.getPrototypeOf(t)){return false}}else{if(e===null||_typeof(e)!==\"object\"){if(t===null||_typeof(t)!==\"object\"){return e==t}return false}if(t===null||_typeof(t)!==\"object\"){return false}}var o=p(e);var a=p(t);if(o!==a){return false}if(Array.isArray(e)){if(e.length!==t.length){return false}var c=getOwnNonIndexProperties(e,x);var f=getOwnNonIndexProperties(t,x);if(c.length!==f.length){return false}return keyCheck(e,t,r,n,R,c)}if(o===\"[object Object]\"){if(!v(e)&&v(t)||!h(e)&&h(t)){return false}}if(g(e)){if(!g(t)||Date.prototype.getTime.call(e)!==Date.prototype.getTime.call(t)){return false}}else if(b(e)){if(!b(t)||!areSimilarRegExps(e,t)){return false}}else if(m(e)||e instanceof Error){if(e.message!==t.message||e.name!==t.name){return false}}else if(d(e)){if(!r&&(j(e)||_(e))){if(!areSimilarFloatArrays(e,t)){return false}}else if(!areSimilarTypedArrays(e,t)){return false}var s=getOwnNonIndexProperties(e,x);var l=getOwnNonIndexProperties(t,x);if(s.length!==l.length){return false}return keyCheck(e,t,r,n,k,s)}else if(h(e)){if(!h(t)||e.size!==t.size){return false}return keyCheck(e,t,r,n,T)}else if(v(e)){if(!v(t)||e.size!==t.size){return false}return keyCheck(e,t,r,n,N)}else if(y(e)){if(!areEqualArrayBuffers(e,t)){return false}}else if(A(e)&&!isEqualBoxedPrimitive(e,t)){return false}return keyCheck(e,t,r,n,k)}function getEnumerables(e,t){return t.filter((function(t){return s(e,t)}))}function keyCheck(e,t,r,n,o,a){if(arguments.length===5){a=Object.keys(e);var i=Object.keys(t);if(a.length!==i.length){return false}}var u=0;for(;u<a.length;u++){if(!f(t,a[u])){return false}}if(r&&arguments.length===5){var p=c(e);if(p.length!==0){var l=0;for(u=0;u<p.length;u++){var y=p[u];if(s(e,y)){if(!s(t,y)){return false}a.push(y);l++}else if(s(t,y)){return false}}var d=c(t);if(p.length!==d.length&&getEnumerables(t,d).length!==l){return false}}else{var g=c(t);if(g.length!==0&&getEnumerables(t,g).length!==0){return false}}}if(a.length===0&&(o===k||o===R&&e.length===0||e.size===0)){return true}if(n===undefined){n={val1:new Map,val2:new Map,position:0}}else{var v=n.val1.get(e);if(v!==undefined){var b=n.val2.get(t);if(b!==undefined){return v===b}}n.position++}n.val1.set(e,n.position);n.val2.set(t,n.position);var h=objEquiv(e,t,r,a,n,o);n.val1.delete(e);n.val2.delete(t);return h}function setHasEqualElement(e,t,r,n){var a=o(e);for(var i=0;i<a.length;i++){var c=a[i];if(innerDeepEqual(t,c,r,n)){e.delete(c);return true}}return false}function findLooseMatchingPrimitives(e){switch(_typeof(e)){case\"undefined\":return null;case\"object\":return undefined;case\"symbol\":return false;case\"string\":e=+e;case\"number\":if(u(e)){return false}}return true}function setMightHaveLoosePrim(e,t,r){var n=findLooseMatchingPrimitives(r);if(n!=null)return n;return t.has(n)&&!e.has(n)}function mapMightHaveLoosePrim(e,t,r,n,o){var a=findLooseMatchingPrimitives(r);if(a!=null){return a}var i=t.get(a);if(i===undefined&&!t.has(a)||!innerDeepEqual(n,i,false,o)){return false}return!e.has(a)&&innerDeepEqual(n,i,false,o)}function setEquiv(e,t,r,n){var a=null;var i=o(e);for(var c=0;c<i.length;c++){var u=i[c];if(_typeof(u)===\"object\"&&u!==null){if(a===null){a=new Set}a.add(u)}else if(!t.has(u)){if(r)return false;if(!setMightHaveLoosePrim(e,t,u)){return false}if(a===null){a=new Set}a.add(u)}}if(a!==null){var f=o(t);for(var s=0;s<f.length;s++){var p=f[s];if(_typeof(p)===\"object\"&&p!==null){if(!setHasEqualElement(a,p,r,n))return false}else if(!r&&!e.has(p)&&!setHasEqualElement(a,p,r,n)){return false}}return a.size===0}return true}function mapHasEqualEntry(e,t,r,n,a,i){var c=o(e);for(var u=0;u<c.length;u++){var f=c[u];if(innerDeepEqual(r,f,a,i)&&innerDeepEqual(n,t.get(f),a,i)){e.delete(f);return true}}return false}function mapEquiv(e,t,r,n){var o=null;var i=a(e);for(var c=0;c<i.length;c++){var u=_slicedToArray(i[c],2),f=u[0],s=u[1];if(_typeof(f)===\"object\"&&f!==null){if(o===null){o=new Set}o.add(f)}else{var p=t.get(f);if(p===undefined&&!t.has(f)||!innerDeepEqual(s,p,r,n)){if(r)return false;if(!mapMightHaveLoosePrim(e,t,f,s,n))return false;if(o===null){o=new Set}o.add(f)}}}if(o!==null){var l=a(t);for(var y=0;y<l.length;y++){var d=_slicedToArray(l[y],2),f=d[0],g=d[1];if(_typeof(f)===\"object\"&&f!==null){if(!mapHasEqualEntry(o,e,f,g,r,n))return false}else if(!r&&(!e.has(f)||!innerDeepEqual(e.get(f),g,false,n))&&!mapHasEqualEntry(o,e,f,g,false,n)){return false}}return o.size===0}return true}function objEquiv(e,t,r,n,o,a){var i=0;if(a===T){if(!setEquiv(e,t,r,o)){return false}}else if(a===N){if(!mapEquiv(e,t,r,o)){return false}}else if(a===R){for(;i<e.length;i++){if(f(e,i)){if(!f(t,i)||!innerDeepEqual(e[i],t[i],r,o)){return false}}else if(f(t,i)){return false}else{var c=Object.keys(e);for(;i<c.length;i++){var u=c[i];if(!f(t,u)||!innerDeepEqual(e[u],t[u],r,o)){return false}}if(c.length!==Object.keys(t).length){return false}return true}}}for(i=0;i<n.length;i++){var s=n[i];if(!innerDeepEqual(e[s],t[s],r,o)){return false}}return true}function isDeepEqual(e,t){return innerDeepEqual(e,t,F)}function isDeepStrictEqual(e,t){return innerDeepEqual(e,t,I)}e.exports={isDeepEqual:isDeepEqual,isDeepStrictEqual:isDeepStrictEqual}},749:function(e,t,r){\"use strict\";var n=r(91);var o=r(112);var a=o(n(\"String.prototype.indexOf\"));e.exports=function callBoundIntrinsic(e,t){var r=n(e,!!t);if(typeof r===\"function\"&&a(e,\".prototype.\")>-1){return o(r)}return r}},112:function(e,t,r){\"use strict\";var n=r(517);var o=r(91);var a=o(\"%Function.prototype.apply%\");var i=o(\"%Function.prototype.call%\");var c=o(\"%Reflect.apply%\",true)||n.call(i,a);var u=o(\"%Object.getOwnPropertyDescriptor%\",true);var f=o(\"%Object.defineProperty%\",true);var s=o(\"%Math.max%\");if(f){try{f({},\"a\",{value:1})}catch(e){f=null}}e.exports=function callBind(e){var t=c(n,i,arguments);if(u&&f){var r=u(t,\"length\");if(r.configurable){f(t,\"length\",{value:1+s(0,e.length-(arguments.length-1))})}}return t};var p=function applyBind(){return c(n,a,arguments)};if(f){f(e.exports,\"apply\",{value:p})}else{e.exports.apply=p}},91:function(e,t,r){\"use strict\";var n;var o=SyntaxError;var a=Function;var i=TypeError;var getEvalledConstructor=function(e){try{return Function('\"use strict\"; return ('+e+\").constructor;\")()}catch(e){}};var c=Object.getOwnPropertyDescriptor;if(c){try{c({},\"\")}catch(e){c=null}}var throwTypeError=function(){throw new i};var u=c?function(){try{arguments.callee;return throwTypeError}catch(e){try{return c(arguments,\"callee\").get}catch(e){return throwTypeError}}}():throwTypeError;var f=r(449)();var s=Object.getPrototypeOf||function(e){return e.__proto__};var p=getEvalledConstructor(\"async function* () {}\");var l=p?p.prototype:n;var y=l?l.prototype:n;var d=typeof Uint8Array===\"undefined\"?n:s(Uint8Array);var g={\"%AggregateError%\":typeof AggregateError===\"undefined\"?n:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?n:ArrayBuffer,\"%ArrayIteratorPrototype%\":f?s([][Symbol.iterator]()):n,\"%AsyncFromSyncIteratorPrototype%\":n,\"%AsyncFunction%\":getEvalledConstructor(\"async function () {}\"),\"%AsyncGenerator%\":l,\"%AsyncGeneratorFunction%\":p,\"%AsyncIteratorPrototype%\":y?s(y):n,\"%Atomics%\":typeof Atomics===\"undefined\"?n:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?n:BigInt,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?n:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?n:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?n:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?n:FinalizationRegistry,\"%Function%\":a,\"%GeneratorFunction%\":getEvalledConstructor(\"function* () {}\"),\"%Int8Array%\":typeof Int8Array===\"undefined\"?n:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?n:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?n:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":f?s(s([][Symbol.iterator]())):n,\"%JSON%\":typeof JSON===\"object\"?JSON:n,\"%Map%\":typeof Map===\"undefined\"?n:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!f?n:s((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?n:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?n:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?n:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?n:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!f?n:s((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?n:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":f?s(\"\"[Symbol.iterator]()):n,\"%Symbol%\":f?Symbol:n,\"%SyntaxError%\":o,\"%ThrowTypeError%\":u,\"%TypedArray%\":d,\"%TypeError%\":i,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?n:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?n:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?n:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?n:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?n:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?n:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?n:WeakSet};var v={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var b=r(517);var h=r(793);var m=b.call(Function.call,Array.prototype.concat);var A=b.call(Function.apply,Array.prototype.splice);var S=b.call(Function.call,String.prototype.replace);var E=b.call(Function.call,String.prototype.slice);var P=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var w=/\\\\(\\\\)?/g;var O=function stringToPath(e){var t=E(e,0,1);var r=E(e,-1);if(t===\"%\"&&r!==\"%\"){throw new o(\"invalid intrinsic syntax, expected closing `%`\")}else if(r===\"%\"&&t!==\"%\"){throw new o(\"invalid intrinsic syntax, expected opening `%`\")}var n=[];S(e,P,(function(e,t,r,o){n[n.length]=r?S(o,w,\"$1\"):t||e}));return n};var j=function getBaseIntrinsic(e,t){var r=e;var n;if(h(v,r)){n=v[r];r=\"%\"+n[0]+\"%\"}if(h(g,r)){var a=g[r];if(typeof a===\"undefined\"&&!t){throw new i(\"intrinsic \"+e+\" exists, but is not available. Please file an issue!\")}return{alias:n,name:r,value:a}}throw new o(\"intrinsic \"+e+\" does not exist!\")};e.exports=function GetIntrinsic(e,t){if(typeof e!==\"string\"||e.length===0){throw new i(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof t!==\"boolean\"){throw new i('\"allowMissing\" argument must be a boolean')}var r=O(e);var a=r.length>0?r[0]:\"\";var u=j(\"%\"+a+\"%\",t);var f=u.name;var s=u.value;var p=false;var l=u.alias;if(l){a=l[0];A(r,m([0,1],l))}for(var y=1,d=true;y<r.length;y+=1){var v=r[y];var b=E(v,0,1);var S=E(v,-1);if((b==='\"'||b===\"'\"||b===\"`\"||(S==='\"'||S===\"'\"||S===\"`\"))&&b!==S){throw new o(\"property names with quotes must have matching quotes\")}if(v===\"constructor\"||!d){p=true}a+=\".\"+v;f=\"%\"+a+\"%\";if(h(g,f)){s=g[f]}else if(s!=null){if(!(v in s)){if(!t){throw new i(\"base intrinsic for \"+e+\" exists, but the property is not available.\")}return void n}if(c&&y+1>=r.length){var P=c(s,v);d=!!P;if(d&&\"get\"in P&&!(\"originalValue\"in P.get)){s=P.get}else{s=s[v]}}else{d=h(s,v);s=s[v]}if(d&&!p){g[f]=s}}}return s}},961:function(e,t,r){\"use strict\";var n=r(283);var o=typeof Symbol===\"function\"&&typeof Symbol(\"foo\")===\"symbol\";var a=Object.prototype.toString;var i=Array.prototype.concat;var c=Object.defineProperty;var isFunction=function(e){return typeof e===\"function\"&&a.call(e)===\"[object Function]\"};var arePropertyDescriptorsSupported=function(){var e={};try{c(e,\"x\",{enumerable:false,value:e});for(var t in e){return false}return e.x===e}catch(e){return false}};var u=c&&arePropertyDescriptorsSupported();var defineProperty=function(e,t,r,n){if(t in e&&(!isFunction(n)||!n())){return}if(u){c(e,t,{configurable:true,enumerable:false,value:r,writable:true})}else{e[t]=r}};var defineProperties=function(e,t){var r=arguments.length>2?arguments[2]:{};var a=n(t);if(o){a=i.call(a,Object.getOwnPropertySymbols(t))}for(var c=0;c<a.length;c+=1){defineProperty(e,a[c],t[a[c]],r[a[c]])}};defineProperties.supportsDescriptors=!!u;e.exports=defineProperties},274:function(e){\"use strict\";function assign(e,t){if(e===undefined||e===null){throw new TypeError(\"Cannot convert first argument to object\")}var r=Object(e);for(var n=1;n<arguments.length;n++){var o=arguments[n];if(o===undefined||o===null){continue}var a=Object.keys(Object(o));for(var i=0,c=a.length;i<c;i++){var u=a[i];var f=Object.getOwnPropertyDescriptor(o,u);if(f!==undefined&&f.enumerable){r[u]=o[u]}}}return r}function polyfill(){if(!Object.assign){Object.defineProperty(Object,\"assign\",{enumerable:false,configurable:true,writable:true,value:assign})}}e.exports={assign:assign,polyfill:polyfill}},219:function(e){var t=Object.prototype.hasOwnProperty;var r=Object.prototype.toString;e.exports=function forEach(e,n,o){if(r.call(n)!==\"[object Function]\"){throw new TypeError(\"iterator must be a function\")}var a=e.length;if(a===+a){for(var i=0;i<a;i++){n.call(o,e[i],i,e)}}else{for(var c in e){if(t.call(e,c)){n.call(o,e[c],c,e)}}}}},733:function(e){\"use strict\";var t=\"Function.prototype.bind called on incompatible \";var r=Array.prototype.slice;var n=Object.prototype.toString;var o=\"[object Function]\";e.exports=function bind(e){var a=this;if(typeof a!==\"function\"||n.call(a)!==o){throw new TypeError(t+a)}var i=r.call(arguments,1);var c;var binder=function(){if(this instanceof c){var t=a.apply(this,i.concat(r.call(arguments)));if(Object(t)===t){return t}return this}else{return a.apply(e,i.concat(r.call(arguments)))}};var u=Math.max(0,a.length-i.length);var f=[];for(var s=0;s<u;s++){f.push(\"$\"+s)}c=Function(\"binder\",\"return function (\"+f.join(\",\")+\"){ return binder.apply(this,arguments); }\")(binder);if(a.prototype){var p=function Empty(){};p.prototype=a.prototype;c.prototype=new p;p.prototype=null}return c}},517:function(e,t,r){\"use strict\";var n=r(733);e.exports=Function.prototype.bind||n},879:function(e,t,r){\"use strict\";var n;var o=SyntaxError;var a=Function;var i=TypeError;var getEvalledConstructor=function(e){try{return a('\"use strict\"; return ('+e+\").constructor;\")()}catch(e){}};var c=Object.getOwnPropertyDescriptor;if(c){try{c({},\"\")}catch(e){c=null}}var throwTypeError=function(){throw new i};var u=c?function(){try{arguments.callee;return throwTypeError}catch(e){try{return c(arguments,\"callee\").get}catch(e){return throwTypeError}}}():throwTypeError;var f=r(449)();var s=Object.getPrototypeOf||function(e){return e.__proto__};var p={};var l=typeof Uint8Array===\"undefined\"?n:s(Uint8Array);var y={\"%AggregateError%\":typeof AggregateError===\"undefined\"?n:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?n:ArrayBuffer,\"%ArrayIteratorPrototype%\":f?s([][Symbol.iterator]()):n,\"%AsyncFromSyncIteratorPrototype%\":n,\"%AsyncFunction%\":p,\"%AsyncGenerator%\":p,\"%AsyncGeneratorFunction%\":p,\"%AsyncIteratorPrototype%\":p,\"%Atomics%\":typeof Atomics===\"undefined\"?n:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?n:BigInt,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?n:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?n:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?n:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?n:FinalizationRegistry,\"%Function%\":a,\"%GeneratorFunction%\":p,\"%Int8Array%\":typeof Int8Array===\"undefined\"?n:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?n:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?n:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":f?s(s([][Symbol.iterator]())):n,\"%JSON%\":typeof JSON===\"object\"?JSON:n,\"%Map%\":typeof Map===\"undefined\"?n:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!f?n:s((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?n:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?n:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?n:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?n:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!f?n:s((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?n:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":f?s(\"\"[Symbol.iterator]()):n,\"%Symbol%\":f?Symbol:n,\"%SyntaxError%\":o,\"%ThrowTypeError%\":u,\"%TypedArray%\":l,\"%TypeError%\":i,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?n:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?n:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?n:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?n:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?n:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?n:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?n:WeakSet};var d=function doEval(e){var t;if(e===\"%AsyncFunction%\"){t=getEvalledConstructor(\"async function () {}\")}else if(e===\"%GeneratorFunction%\"){t=getEvalledConstructor(\"function* () {}\")}else if(e===\"%AsyncGeneratorFunction%\"){t=getEvalledConstructor(\"async function* () {}\")}else if(e===\"%AsyncGenerator%\"){var r=doEval(\"%AsyncGeneratorFunction%\");if(r){t=r.prototype}}else if(e===\"%AsyncIteratorPrototype%\"){var n=doEval(\"%AsyncGenerator%\");if(n){t=s(n.prototype)}}y[e]=t;return t};var g={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var v=r(517);var b=r(793);var h=v.call(Function.call,Array.prototype.concat);var m=v.call(Function.apply,Array.prototype.splice);var A=v.call(Function.call,String.prototype.replace);var S=v.call(Function.call,String.prototype.slice);var E=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var P=/\\\\(\\\\)?/g;var w=function stringToPath(e){var t=S(e,0,1);var r=S(e,-1);if(t===\"%\"&&r!==\"%\"){throw new o(\"invalid intrinsic syntax, expected closing `%`\")}else if(r===\"%\"&&t!==\"%\"){throw new o(\"invalid intrinsic syntax, expected opening `%`\")}var n=[];A(e,E,(function(e,t,r,o){n[n.length]=r?A(o,P,\"$1\"):t||e}));return n};var O=function getBaseIntrinsic(e,t){var r=e;var n;if(b(g,r)){n=g[r];r=\"%\"+n[0]+\"%\"}if(b(y,r)){var a=y[r];if(a===p){a=d(r)}if(typeof a===\"undefined\"&&!t){throw new i(\"intrinsic \"+e+\" exists, but is not available. Please file an issue!\")}return{alias:n,name:r,value:a}}throw new o(\"intrinsic \"+e+\" does not exist!\")};e.exports=function GetIntrinsic(e,t){if(typeof e!==\"string\"||e.length===0){throw new i(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof t!==\"boolean\"){throw new i('\"allowMissing\" argument must be a boolean')}var r=w(e);var a=r.length>0?r[0]:\"\";var u=O(\"%\"+a+\"%\",t);var f=u.name;var s=u.value;var p=false;var l=u.alias;if(l){a=l[0];m(r,h([0,1],l))}for(var d=1,g=true;d<r.length;d+=1){var v=r[d];var A=S(v,0,1);var E=S(v,-1);if((A==='\"'||A===\"'\"||A===\"`\"||(E==='\"'||E===\"'\"||E===\"`\"))&&A!==E){throw new o(\"property names with quotes must have matching quotes\")}if(v===\"constructor\"||!g){p=true}a+=\".\"+v;f=\"%\"+a+\"%\";if(b(y,f)){s=y[f]}else if(s!=null){if(!(v in s)){if(!t){throw new i(\"base intrinsic for \"+e+\" exists, but the property is not available.\")}return void n}if(c&&d+1>=r.length){var P=c(s,v);g=!!P;if(g&&\"get\"in P&&!(\"originalValue\"in P.get)){s=P.get}else{s=s[v]}}else{g=b(s,v);s=s[v]}if(g&&!p){y[f]=s}}}return s}},449:function(e,t,r){\"use strict\";var n=__webpack_require__.g.Symbol;var o=r(545);e.exports=function hasNativeSymbols(){if(typeof n!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof n(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return o()}},545:function(e){\"use strict\";e.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var e={};var t=Symbol(\"test\");var r=Object(t);if(typeof t===\"string\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(r)!==\"[object Symbol]\"){return false}var n=42;e[t]=n;for(t in e){return false}if(typeof Object.keys===\"function\"&&Object.keys(e).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(e).length!==0){return false}var o=Object.getOwnPropertySymbols(e);if(o.length!==1||o[0]!==t){return false}if(!Object.prototype.propertyIsEnumerable.call(e,t)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var a=Object.getOwnPropertyDescriptor(e,t);if(a.value!==n||a.enumerable!==true){return false}}return true}},793:function(e,t,r){\"use strict\";var n=r(517);e.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},526:function(e){if(typeof Object.create===\"function\"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},312:function(e){\"use strict\";var t=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var r=Object.prototype.toString;var n=function isArguments(e){if(t&&e&&typeof e===\"object\"&&Symbol.toStringTag in e){return false}return r.call(e)===\"[object Arguments]\"};var o=function isArguments(e){if(n(e)){return true}return e!==null&&typeof e===\"object\"&&typeof e.length===\"number\"&&e.length>=0&&r.call(e)!==\"[object Array]\"&&r.call(e.callee)===\"[object Function]\"};var a=function(){return n(arguments)}();n.isLegacyArguments=o;e.exports=a?n:o},906:function(e){\"use strict\";var t=Object.prototype.toString;var r=Function.prototype.toString;var n=/^\\s*(?:function)?\\*/;var o=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var a=Object.getPrototypeOf;var getGeneratorFunc=function(){if(!o){return false}try{return Function(\"return function*() {}\")()}catch(e){}};var i=getGeneratorFunc();var c=i?a(i):{};e.exports=function isGeneratorFunction(e){if(typeof e!==\"function\"){return false}if(n.test(r.call(e))){return true}if(!o){var i=t.call(e);return i===\"[object GeneratorFunction]\"}return a(e)===c}},720:function(e){\"use strict\";e.exports=function isNaN(e){return e!==e}},674:function(e,t,r){\"use strict\";var n=r(112);var o=r(961);var a=r(720);var i=r(78);var c=r(81);var u=n(i(),Number);o(u,{getPolyfill:i,implementation:a,shim:c});e.exports=u},78:function(e,t,r){\"use strict\";var n=r(720);e.exports=function getPolyfill(){if(Number.isNaN&&Number.isNaN(NaN)&&!Number.isNaN(\"a\")){return Number.isNaN}return n}},81:function(e,t,r){\"use strict\";var n=r(961);var o=r(78);e.exports=function shimNumberIsNaN(){var e=o();n(Number,{isNaN:e},{isNaN:function testIsNaN(){return Number.isNaN!==e}});return e}},234:function(e,t,r){\"use strict\";var n=r(219);var o=r(627);var a=r(749);var i=a(\"Object.prototype.toString\");var c=r(449)();var u=c&&typeof Symbol.toStringTag===\"symbol\";var f=o();var s=a(\"Array.prototype.indexOf\",true)||function indexOf(e,t){for(var r=0;r<e.length;r+=1){if(e[r]===t){return r}}return-1};var p=a(\"String.prototype.slice\");var l={};var y=r(982);var d=Object.getPrototypeOf;if(u&&y&&d){n(f,(function(e){var t=new __webpack_require__.g[e];if(!(Symbol.toStringTag in t)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+e+\" does not have the property! Please report this.\")}var r=d(t);var n=y(r,Symbol.toStringTag);if(!n){var o=d(r);n=y(o,Symbol.toStringTag)}l[e]=n.get}))}var g=function tryAllTypedArrays(e){var t=false;n(l,(function(r,n){if(!t){try{t=r.call(e)===n}catch(e){}}}));return t};e.exports=function isTypedArray(e){if(!e||typeof e!==\"object\"){return false}if(!u){var t=p(i(e),8,-1);return s(f,t)>-1}if(!y){return false}return g(e)}},982:function(e,t,r){\"use strict\";var n=r(879);var o=n(\"%Object.getOwnPropertyDescriptor%\");if(o){try{o([],\"length\")}catch(e){o=null}}e.exports=o},450:function(e){\"use strict\";var numberIsNaN=function(e){return e!==e};e.exports=function is(e,t){if(e===0&&t===0){return 1/e===1/t}if(e===t){return true}if(numberIsNaN(e)&&numberIsNaN(t)){return true}return false}},595:function(e,t,r){\"use strict\";var n;if(!Object.keys){var o=Object.prototype.hasOwnProperty;var a=Object.prototype.toString;var i=r(750);var c=Object.prototype.propertyIsEnumerable;var u=!c.call({toString:null},\"toString\");var f=c.call((function(){}),\"prototype\");var s=[\"toString\",\"toLocaleString\",\"valueOf\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"constructor\"];var equalsConstructorPrototype=function(e){var t=e.constructor;return t&&t.prototype===e};var p={$applicationCache:true,$console:true,$external:true,$frame:true,$frameElement:true,$frames:true,$innerHeight:true,$innerWidth:true,$onmozfullscreenchange:true,$onmozfullscreenerror:true,$outerHeight:true,$outerWidth:true,$pageXOffset:true,$pageYOffset:true,$parent:true,$scrollLeft:true,$scrollTop:true,$scrollX:true,$scrollY:true,$self:true,$webkitIndexedDB:true,$webkitStorageInfo:true,$window:true};var l=function(){if(typeof window===\"undefined\"){return false}for(var e in window){try{if(!p[\"$\"+e]&&o.call(window,e)&&window[e]!==null&&typeof window[e]===\"object\"){try{equalsConstructorPrototype(window[e])}catch(e){return true}}}catch(e){return true}}return false}();var equalsConstructorPrototypeIfNotBuggy=function(e){if(typeof window===\"undefined\"||!l){return equalsConstructorPrototype(e)}try{return equalsConstructorPrototype(e)}catch(e){return false}};n=function keys(e){var t=e!==null&&typeof e===\"object\";var r=a.call(e)===\"[object Function]\";var n=i(e);var c=t&&a.call(e)===\"[object String]\";var p=[];if(!t&&!r&&!n){throw new TypeError(\"Object.keys called on a non-object\")}var l=f&&r;if(c&&e.length>0&&!o.call(e,0)){for(var y=0;y<e.length;++y){p.push(String(y))}}if(n&&e.length>0){for(var d=0;d<e.length;++d){p.push(String(d))}}else{for(var g in e){if(!(l&&g===\"prototype\")&&o.call(e,g)){p.push(String(g))}}}if(u){var v=equalsConstructorPrototypeIfNotBuggy(e);for(var b=0;b<s.length;++b){if(!(v&&s[b]===\"constructor\")&&o.call(e,s[b])){p.push(s[b])}}}return p}}e.exports=n},283:function(e,t,r){\"use strict\";var n=Array.prototype.slice;var o=r(750);var a=Object.keys;var i=a?function keys(e){return a(e)}:r(595);var c=Object.keys;i.shim=function shimObjectKeys(){if(Object.keys){var e=function(){var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2);if(!e){Object.keys=function keys(e){if(o(e)){return c(n.call(e))}return c(e)}}}else{Object.keys=i}return Object.keys||i};e.exports=i},750:function(e){\"use strict\";var t=Object.prototype.toString;e.exports=function isArguments(e){var r=t.call(e);var n=r===\"[object Arguments]\";if(!n){n=r!==\"[object Array]\"&&e!==null&&typeof e===\"object\"&&typeof e.length===\"number\"&&e.length>=0&&t.call(e.callee)===\"[object Function]\"}return n}},536:function(e){e.exports=function isBuffer(e){return e instanceof Buffer}},3:function(e,t,r){\"use strict\";var n=r(312);var o=r(906);var a=r(715);var i=r(234);function uncurryThis(e){return e.call.bind(e)}var c=typeof BigInt!==\"undefined\";var u=typeof Symbol!==\"undefined\";var f=uncurryThis(Object.prototype.toString);var s=uncurryThis(Number.prototype.valueOf);var p=uncurryThis(String.prototype.valueOf);var l=uncurryThis(Boolean.prototype.valueOf);if(c){var y=uncurryThis(BigInt.prototype.valueOf)}if(u){var d=uncurryThis(Symbol.prototype.valueOf)}function checkBoxedPrimitive(e,t){if(typeof e!==\"object\"){return false}try{t(e);return true}catch(e){return false}}t.isArgumentsObject=n;t.isGeneratorFunction=o;t.isTypedArray=i;function isPromise(e){return typeof Promise!==\"undefined\"&&e instanceof Promise||e!==null&&typeof e===\"object\"&&typeof e.then===\"function\"&&typeof e.catch===\"function\"}t.isPromise=isPromise;function isArrayBufferView(e){if(typeof ArrayBuffer!==\"undefined\"&&ArrayBuffer.isView){return ArrayBuffer.isView(e)}return i(e)||isDataView(e)}t.isArrayBufferView=isArrayBufferView;function isUint8Array(e){return a(e)===\"Uint8Array\"}t.isUint8Array=isUint8Array;function isUint8ClampedArray(e){return a(e)===\"Uint8ClampedArray\"}t.isUint8ClampedArray=isUint8ClampedArray;function isUint16Array(e){return a(e)===\"Uint16Array\"}t.isUint16Array=isUint16Array;function isUint32Array(e){return a(e)===\"Uint32Array\"}t.isUint32Array=isUint32Array;function isInt8Array(e){return a(e)===\"Int8Array\"}t.isInt8Array=isInt8Array;function isInt16Array(e){return a(e)===\"Int16Array\"}t.isInt16Array=isInt16Array;function isInt32Array(e){return a(e)===\"Int32Array\"}t.isInt32Array=isInt32Array;function isFloat32Array(e){return a(e)===\"Float32Array\"}t.isFloat32Array=isFloat32Array;function isFloat64Array(e){return a(e)===\"Float64Array\"}t.isFloat64Array=isFloat64Array;function isBigInt64Array(e){return a(e)===\"BigInt64Array\"}t.isBigInt64Array=isBigInt64Array;function isBigUint64Array(e){return a(e)===\"BigUint64Array\"}t.isBigUint64Array=isBigUint64Array;function isMapToString(e){return f(e)===\"[object Map]\"}isMapToString.working=typeof Map!==\"undefined\"&&isMapToString(new Map);function isMap(e){if(typeof Map===\"undefined\"){return false}return isMapToString.working?isMapToString(e):e instanceof Map}t.isMap=isMap;function isSetToString(e){return f(e)===\"[object Set]\"}isSetToString.working=typeof Set!==\"undefined\"&&isSetToString(new Set);function isSet(e){if(typeof Set===\"undefined\"){return false}return isSetToString.working?isSetToString(e):e instanceof Set}t.isSet=isSet;function isWeakMapToString(e){return f(e)===\"[object WeakMap]\"}isWeakMapToString.working=typeof WeakMap!==\"undefined\"&&isWeakMapToString(new WeakMap);function isWeakMap(e){if(typeof WeakMap===\"undefined\"){return false}return isWeakMapToString.working?isWeakMapToString(e):e instanceof WeakMap}t.isWeakMap=isWeakMap;function isWeakSetToString(e){return f(e)===\"[object WeakSet]\"}isWeakSetToString.working=typeof WeakSet!==\"undefined\"&&isWeakSetToString(new WeakSet);function isWeakSet(e){return isWeakSetToString(e)}t.isWeakSet=isWeakSet;function isArrayBufferToString(e){return f(e)===\"[object ArrayBuffer]\"}isArrayBufferToString.working=typeof ArrayBuffer!==\"undefined\"&&isArrayBufferToString(new ArrayBuffer);function isArrayBuffer(e){if(typeof ArrayBuffer===\"undefined\"){return false}return isArrayBufferToString.working?isArrayBufferToString(e):e instanceof ArrayBuffer}t.isArrayBuffer=isArrayBuffer;function isDataViewToString(e){return f(e)===\"[object DataView]\"}isDataViewToString.working=typeof ArrayBuffer!==\"undefined\"&&typeof DataView!==\"undefined\"&&isDataViewToString(new DataView(new ArrayBuffer(1),0,1));function isDataView(e){if(typeof DataView===\"undefined\"){return false}return isDataViewToString.working?isDataViewToString(e):e instanceof DataView}t.isDataView=isDataView;var g=typeof SharedArrayBuffer!==\"undefined\"?SharedArrayBuffer:undefined;function isSharedArrayBufferToString(e){return f(e)===\"[object SharedArrayBuffer]\"}function isSharedArrayBuffer(e){if(typeof g===\"undefined\"){return false}if(typeof isSharedArrayBufferToString.working===\"undefined\"){isSharedArrayBufferToString.working=isSharedArrayBufferToString(new g)}return isSharedArrayBufferToString.working?isSharedArrayBufferToString(e):e instanceof g}t.isSharedArrayBuffer=isSharedArrayBuffer;function isAsyncFunction(e){return f(e)===\"[object AsyncFunction]\"}t.isAsyncFunction=isAsyncFunction;function isMapIterator(e){return f(e)===\"[object Map Iterator]\"}t.isMapIterator=isMapIterator;function isSetIterator(e){return f(e)===\"[object Set Iterator]\"}t.isSetIterator=isSetIterator;function isGeneratorObject(e){return f(e)===\"[object Generator]\"}t.isGeneratorObject=isGeneratorObject;function isWebAssemblyCompiledModule(e){return f(e)===\"[object WebAssembly.Module]\"}t.isWebAssemblyCompiledModule=isWebAssemblyCompiledModule;function isNumberObject(e){return checkBoxedPrimitive(e,s)}t.isNumberObject=isNumberObject;function isStringObject(e){return checkBoxedPrimitive(e,p)}t.isStringObject=isStringObject;function isBooleanObject(e){return checkBoxedPrimitive(e,l)}t.isBooleanObject=isBooleanObject;function isBigIntObject(e){return c&&checkBoxedPrimitive(e,y)}t.isBigIntObject=isBigIntObject;function isSymbolObject(e){return u&&checkBoxedPrimitive(e,d)}t.isSymbolObject=isSymbolObject;function isBoxedPrimitive(e){return isNumberObject(e)||isStringObject(e)||isBooleanObject(e)||isBigIntObject(e)||isSymbolObject(e)}t.isBoxedPrimitive=isBoxedPrimitive;function isAnyArrayBuffer(e){return typeof Uint8Array!==\"undefined\"&&(isArrayBuffer(e)||isSharedArrayBuffer(e))}t.isAnyArrayBuffer=isAnyArrayBuffer;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach((function(e){Object.defineProperty(t,e,{enumerable:false,value:function(){throw new Error(e+\" is not supported in userland\")}})}))},650:function(e,t,r){var n=Object.getOwnPropertyDescriptors||function getOwnPropertyDescriptors(e){var t=Object.keys(e);var r={};for(var n=0;n<t.length;n++){r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n])}return r};var o=/%[sdj%]/g;t.format=function(e){if(!isString(e)){var t=[];for(var r=0;r<arguments.length;r++){t.push(inspect(arguments[r]))}return t.join(\" \")}var r=1;var n=arguments;var a=n.length;var i=String(e).replace(o,(function(e){if(e===\"%%\")return\"%\";if(r>=a)return e;switch(e){case\"%s\":return String(n[r++]);case\"%d\":return Number(n[r++]);case\"%j\":try{return JSON.stringify(n[r++])}catch(e){return\"[Circular]\"}default:return e}}));for(var c=n[r];r<a;c=n[++r]){if(isNull(c)||!isObject(c)){i+=\" \"+c}else{i+=\" \"+inspect(c)}}return i};t.deprecate=function(e,r){if(typeof process!==\"undefined\"&&process.noDeprecation===true){return e}if(typeof process===\"undefined\"){return function(){return t.deprecate(e,r).apply(this,arguments)}}var n=false;function deprecated(){if(!n){if(process.throwDeprecation){throw new Error(r)}else if(process.traceDeprecation){console.trace(r)}else{console.error(r)}n=true}return e.apply(this,arguments)}return deprecated};var a={};var i=/^$/;if(process.env.NODE_DEBUG){var c=process.env.NODE_DEBUG;c=c.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase();i=new RegExp(\"^\"+c+\"$\",\"i\")}t.debuglog=function(e){e=e.toUpperCase();if(!a[e]){if(i.test(e)){var r=process.pid;a[e]=function(){var n=t.format.apply(t,arguments);console.error(\"%s %d: %s\",e,r,n)}}else{a[e]=function(){}}}return a[e]};function inspect(e,r){var n={seen:[],stylize:stylizeNoColor};if(arguments.length>=3)n.depth=arguments[2];if(arguments.length>=4)n.colors=arguments[3];if(isBoolean(r)){n.showHidden=r}else if(r){t._extend(n,r)}if(isUndefined(n.showHidden))n.showHidden=false;if(isUndefined(n.depth))n.depth=2;if(isUndefined(n.colors))n.colors=false;if(isUndefined(n.customInspect))n.customInspect=true;if(n.colors)n.stylize=stylizeWithColor;return formatValue(n,e,n.depth)}t.inspect=inspect;inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]};inspect.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"};function stylizeWithColor(e,t){var r=inspect.styles[t];if(r){return\"\u001b[\"+inspect.colors[r][0]+\"m\"+e+\"\u001b[\"+inspect.colors[r][1]+\"m\"}else{return e}}function stylizeNoColor(e,t){return e}function arrayToHash(e){var t={};e.forEach((function(e,r){t[e]=true}));return t}function formatValue(e,r,n){if(e.customInspect&&r&&isFunction(r.inspect)&&r.inspect!==t.inspect&&!(r.constructor&&r.constructor.prototype===r)){var o=r.inspect(n,e);if(!isString(o)){o=formatValue(e,o,n)}return o}var a=formatPrimitive(e,r);if(a){return a}var i=Object.keys(r);var c=arrayToHash(i);if(e.showHidden){i=Object.getOwnPropertyNames(r)}if(isError(r)&&(i.indexOf(\"message\")>=0||i.indexOf(\"description\")>=0)){return formatError(r)}if(i.length===0){if(isFunction(r)){var u=r.name?\": \"+r.name:\"\";return e.stylize(\"[Function\"+u+\"]\",\"special\")}if(isRegExp(r)){return e.stylize(RegExp.prototype.toString.call(r),\"regexp\")}if(isDate(r)){return e.stylize(Date.prototype.toString.call(r),\"date\")}if(isError(r)){return formatError(r)}}var f=\"\",s=false,p=[\"{\",\"}\"];if(isArray(r)){s=true;p=[\"[\",\"]\"]}if(isFunction(r)){var l=r.name?\": \"+r.name:\"\";f=\" [Function\"+l+\"]\"}if(isRegExp(r)){f=\" \"+RegExp.prototype.toString.call(r)}if(isDate(r)){f=\" \"+Date.prototype.toUTCString.call(r)}if(isError(r)){f=\" \"+formatError(r)}if(i.length===0&&(!s||r.length==0)){return p[0]+f+p[1]}if(n<0){if(isRegExp(r)){return e.stylize(RegExp.prototype.toString.call(r),\"regexp\")}else{return e.stylize(\"[Object]\",\"special\")}}e.seen.push(r);var y;if(s){y=formatArray(e,r,n,c,i)}else{y=i.map((function(t){return formatProperty(e,r,n,c,t,s)}))}e.seen.pop();return reduceToSingleString(y,f,p)}function formatPrimitive(e,t){if(isUndefined(t))return e.stylize(\"undefined\",\"undefined\");if(isString(t)){var r=\"'\"+JSON.stringify(t).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return e.stylize(r,\"string\")}if(isNumber(t))return e.stylize(\"\"+t,\"number\");if(isBoolean(t))return e.stylize(\"\"+t,\"boolean\");if(isNull(t))return e.stylize(\"null\",\"null\")}function formatError(e){return\"[\"+Error.prototype.toString.call(e)+\"]\"}function formatArray(e,t,r,n,o){var a=[];for(var i=0,c=t.length;i<c;++i){if(hasOwnProperty(t,String(i))){a.push(formatProperty(e,t,r,n,String(i),true))}else{a.push(\"\")}}o.forEach((function(o){if(!o.match(/^\\d+$/)){a.push(formatProperty(e,t,r,n,o,true))}}));return a}function formatProperty(e,t,r,n,o,a){var i,c,u;u=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]};if(u.get){if(u.set){c=e.stylize(\"[Getter/Setter]\",\"special\")}else{c=e.stylize(\"[Getter]\",\"special\")}}else{if(u.set){c=e.stylize(\"[Setter]\",\"special\")}}if(!hasOwnProperty(n,o)){i=\"[\"+o+\"]\"}if(!c){if(e.seen.indexOf(u.value)<0){if(isNull(r)){c=formatValue(e,u.value,null)}else{c=formatValue(e,u.value,r-1)}if(c.indexOf(\"\\n\")>-1){if(a){c=c.split(\"\\n\").map((function(e){return\"  \"+e})).join(\"\\n\").substr(2)}else{c=\"\\n\"+c.split(\"\\n\").map((function(e){return\"   \"+e})).join(\"\\n\")}}}else{c=e.stylize(\"[Circular]\",\"special\")}}if(isUndefined(i)){if(a&&o.match(/^\\d+$/)){return c}i=JSON.stringify(\"\"+o);if(i.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){i=i.substr(1,i.length-2);i=e.stylize(i,\"name\")}else{i=i.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\");i=e.stylize(i,\"string\")}}return i+\": \"+c}function reduceToSingleString(e,t,r){var n=0;var o=e.reduce((function(e,t){n++;if(t.indexOf(\"\\n\")>=0)n++;return e+t.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0);if(o>60){return r[0]+(t===\"\"?\"\":t+\"\\n \")+\" \"+e.join(\",\\n  \")+\" \"+r[1]}return r[0]+t+\" \"+e.join(\", \")+\" \"+r[1]}t.types=r(3);function isArray(e){return Array.isArray(e)}t.isArray=isArray;function isBoolean(e){return typeof e===\"boolean\"}t.isBoolean=isBoolean;function isNull(e){return e===null}t.isNull=isNull;function isNullOrUndefined(e){return e==null}t.isNullOrUndefined=isNullOrUndefined;function isNumber(e){return typeof e===\"number\"}t.isNumber=isNumber;function isString(e){return typeof e===\"string\"}t.isString=isString;function isSymbol(e){return typeof e===\"symbol\"}t.isSymbol=isSymbol;function isUndefined(e){return e===void 0}t.isUndefined=isUndefined;function isRegExp(e){return isObject(e)&&objectToString(e)===\"[object RegExp]\"}t.isRegExp=isRegExp;t.types.isRegExp=isRegExp;function isObject(e){return typeof e===\"object\"&&e!==null}t.isObject=isObject;function isDate(e){return isObject(e)&&objectToString(e)===\"[object Date]\"}t.isDate=isDate;t.types.isDate=isDate;function isError(e){return isObject(e)&&(objectToString(e)===\"[object Error]\"||e instanceof Error)}t.isError=isError;t.types.isNativeError=isError;function isFunction(e){return typeof e===\"function\"}t.isFunction=isFunction;function isPrimitive(e){return e===null||typeof e===\"boolean\"||typeof e===\"number\"||typeof e===\"string\"||typeof e===\"symbol\"||typeof e===\"undefined\"}t.isPrimitive=isPrimitive;t.isBuffer=r(536);function objectToString(e){return Object.prototype.toString.call(e)}function pad(e){return e<10?\"0\"+e.toString(10):e.toString(10)}var u=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function timestamp(){var e=new Date;var t=[pad(e.getHours()),pad(e.getMinutes()),pad(e.getSeconds())].join(\":\");return[e.getDate(),u[e.getMonth()],t].join(\" \")}t.log=function(){console.log(\"%s - %s\",timestamp(),t.format.apply(t,arguments))};t.inherits=r(526);t._extend=function(e,t){if(!t||!isObject(t))return e;var r=Object.keys(t);var n=r.length;while(n--){e[r[n]]=t[r[n]]}return e};function hasOwnProperty(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var f=typeof Symbol!==\"undefined\"?Symbol(\"util.promisify.custom\"):undefined;t.promisify=function promisify(e){if(typeof e!==\"function\")throw new TypeError('The \"original\" argument must be of type Function');if(f&&e[f]){var t=e[f];if(typeof t!==\"function\"){throw new TypeError('The \"util.promisify.custom\" argument must be of type Function')}Object.defineProperty(t,f,{value:t,enumerable:false,writable:false,configurable:true});return t}function t(){var t,r;var n=new Promise((function(e,n){t=e;r=n}));var o=[];for(var a=0;a<arguments.length;a++){o.push(arguments[a])}o.push((function(e,n){if(e){r(e)}else{t(n)}}));try{e.apply(this,o)}catch(e){r(e)}return n}Object.setPrototypeOf(t,Object.getPrototypeOf(e));if(f)Object.defineProperty(t,f,{value:t,enumerable:false,writable:false,configurable:true});return Object.defineProperties(t,n(e))};t.promisify.custom=f;function callbackifyOnRejected(e,t){if(!e){var r=new Error(\"Promise was rejected with a falsy value\");r.reason=e;e=r}return t(e)}function callbackify(e){if(typeof e!==\"function\"){throw new TypeError('The \"original\" argument must be of type Function')}function callbackified(){var t=[];for(var r=0;r<arguments.length;r++){t.push(arguments[r])}var n=t.pop();if(typeof n!==\"function\"){throw new TypeError(\"The last argument must be of type Function\")}var o=this;var cb=function(){return n.apply(o,arguments)};e.apply(this,t).then((function(e){process.nextTick(cb.bind(null,null,e))}),(function(e){process.nextTick(callbackifyOnRejected.bind(null,e,cb))}))}Object.setPrototypeOf(callbackified,Object.getPrototypeOf(e));Object.defineProperties(callbackified,n(e));return callbackified}t.callbackify=callbackify},715:function(e,t,r){\"use strict\";var n=r(219);var o=r(627);var a=r(749);var i=a(\"Object.prototype.toString\");var c=r(449)();var u=c&&typeof Symbol.toStringTag===\"symbol\";var f=o();var s=a(\"String.prototype.slice\");var p={};var l=r(850);var y=Object.getPrototypeOf;if(u&&l&&y){n(f,(function(e){if(typeof __webpack_require__.g[e]===\"function\"){var t=new __webpack_require__.g[e];if(!(Symbol.toStringTag in t)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+e+\" does not have the property! Please report this.\")}var r=y(t);var n=l(r,Symbol.toStringTag);if(!n){var o=y(r);n=l(o,Symbol.toStringTag)}p[e]=n.get}}))}var d=function tryAllTypedArrays(e){var t=false;n(p,(function(r,n){if(!t){try{var o=r.call(e);if(o===n){t=o}}catch(e){}}}));return t};var g=r(234);e.exports=function whichTypedArray(e){if(!g(e)){return false}if(!u){return s(i(e),8,-1)}return d(e)}},227:function(e,t,r){\"use strict\";var n;var o=SyntaxError;var a=Function;var i=TypeError;var getEvalledConstructor=function(e){try{return Function('\"use strict\"; return ('+e+\").constructor;\")()}catch(e){}};var c=Object.getOwnPropertyDescriptor;if(c){try{c({},\"\")}catch(e){c=null}}var throwTypeError=function(){throw new i};var u=c?function(){try{arguments.callee;return throwTypeError}catch(e){try{return c(arguments,\"callee\").get}catch(e){return throwTypeError}}}():throwTypeError;var f=r(449)();var s=Object.getPrototypeOf||function(e){return e.__proto__};var p=getEvalledConstructor(\"async function* () {}\");var l=p?p.prototype:n;var y=l?l.prototype:n;var d=typeof Uint8Array===\"undefined\"?n:s(Uint8Array);var g={\"%AggregateError%\":typeof AggregateError===\"undefined\"?n:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?n:ArrayBuffer,\"%ArrayIteratorPrototype%\":f?s([][Symbol.iterator]()):n,\"%AsyncFromSyncIteratorPrototype%\":n,\"%AsyncFunction%\":getEvalledConstructor(\"async function () {}\"),\"%AsyncGenerator%\":l,\"%AsyncGeneratorFunction%\":p,\"%AsyncIteratorPrototype%\":y?s(y):n,\"%Atomics%\":typeof Atomics===\"undefined\"?n:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?n:BigInt,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?n:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?n:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?n:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?n:FinalizationRegistry,\"%Function%\":a,\"%GeneratorFunction%\":getEvalledConstructor(\"function* () {}\"),\"%Int8Array%\":typeof Int8Array===\"undefined\"?n:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?n:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?n:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":f?s(s([][Symbol.iterator]())):n,\"%JSON%\":typeof JSON===\"object\"?JSON:n,\"%Map%\":typeof Map===\"undefined\"?n:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!f?n:s((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?n:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?n:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?n:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?n:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!f?n:s((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?n:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":f?s(\"\"[Symbol.iterator]()):n,\"%Symbol%\":f?Symbol:n,\"%SyntaxError%\":o,\"%ThrowTypeError%\":u,\"%TypedArray%\":d,\"%TypeError%\":i,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?n:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?n:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?n:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?n:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?n:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?n:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?n:WeakSet};var v={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var b=r(517);var h=r(793);var m=b.call(Function.call,Array.prototype.concat);var A=b.call(Function.apply,Array.prototype.splice);var S=b.call(Function.call,String.prototype.replace);var E=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var P=/\\\\(\\\\)?/g;var w=function stringToPath(e){var t=[];S(e,E,(function(e,r,n,o){t[t.length]=n?S(o,P,\"$1\"):r||e}));return t};var O=function getBaseIntrinsic(e,t){var r=e;var n;if(h(v,r)){n=v[r];r=\"%\"+n[0]+\"%\"}if(h(g,r)){var a=g[r];if(typeof a===\"undefined\"&&!t){throw new i(\"intrinsic \"+e+\" exists, but is not available. Please file an issue!\")}return{alias:n,name:r,value:a}}throw new o(\"intrinsic \"+e+\" does not exist!\")};e.exports=function GetIntrinsic(e,t){if(typeof e!==\"string\"||e.length===0){throw new i(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof t!==\"boolean\"){throw new i('\"allowMissing\" argument must be a boolean')}var r=w(e);var n=r.length>0?r[0]:\"\";var o=O(\"%\"+n+\"%\",t);var a=o.name;var u=o.value;var f=false;var s=o.alias;if(s){n=s[0];A(r,m([0,1],s))}for(var p=1,l=true;p<r.length;p+=1){var y=r[p];if(y===\"constructor\"||!l){f=true}n+=\".\"+y;a=\"%\"+n+\"%\";if(h(g,a)){u=g[a]}else if(u!=null){if(c&&p+1>=r.length){var d=c(u,y);l=!!d;if(!t&&!(y in u)){throw new i(\"base intrinsic for \"+e+\" exists, but the property is not available.\")}if(l&&\"get\"in d&&!(\"originalValue\"in d.get)){u=d.get}else{u=u[y]}}else{l=h(u,y);u=u[y]}if(l&&!f){g[a]=u}}}return u}},850:function(e,t,r){\"use strict\";var n=r(227);var o=n(\"%Object.getOwnPropertyDescriptor%\");if(o){try{o([],\"length\")}catch(e){o=null}}e.exports=o},627:function(e,t,r){\"use strict\";var n=r(901);e.exports=function availableTypedArrays(){return n([\"BigInt64Array\",\"BigUint64Array\",\"Float32Array\",\"Float64Array\",\"Int16Array\",\"Int32Array\",\"Int8Array\",\"Uint16Array\",\"Uint32Array\",\"Uint8Array\",\"Uint8ClampedArray\"],(function(e){return typeof __webpack_require__.g[e]===\"function\"}))}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var o=t[r]={exports:{}};var a=true;try{e[r](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(313);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/assert/assert.js\n");

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n");

/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/***/ (function(module) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeDecode\": function() { return /* binding */ encodeDecode; }\n/* harmony export */ });\nconst encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vYmFzZS5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMvbGliL2VzbS9iYXNlLm1qcz9kOTZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlbmNvZGVEZWNvZGUgPSAobGF5b3V0KSA9PiB7XG4gICAgY29uc3QgZGVjb2RlID0gbGF5b3V0LmRlY29kZS5iaW5kKGxheW91dCk7XG4gICAgY29uc3QgZW5jb2RlID0gbGF5b3V0LmVuY29kZS5iaW5kKGxheW91dCk7XG4gICAgcmV0dXJuIHsgZGVjb2RlLCBlbmNvZGUgfTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs\n");

/***/ }),

/***/ "./node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bigInt\": function() { return /* binding */ bigInt; },\n/* harmony export */   \"bigIntBE\": function() { return /* binding */ bigIntBE; },\n/* harmony export */   \"u64\": function() { return /* binding */ u64; },\n/* harmony export */   \"u64be\": function() { return /* binding */ u64be; },\n/* harmony export */   \"u128\": function() { return /* binding */ u128; },\n/* harmony export */   \"u128be\": function() { return /* binding */ u128be; },\n/* harmony export */   \"u192\": function() { return /* binding */ u192; },\n/* harmony export */   \"u192be\": function() { return /* binding */ u192be; },\n/* harmony export */   \"u256\": function() { return /* binding */ u256; },\n/* harmony export */   \"u256be\": function() { return /* binding */ u256be; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var bigint_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bigint-buffer */ \"./node_modules/bigint-buffer/dist/browser.js\");\n/* harmony import */ var _base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\nconst bigInt = (length) => (property) => {\n    const layout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(length, property);\n    const { encode, decode } = (0,_base_mjs__WEBPACK_IMPORTED_MODULE_2__.encodeDecode)(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return (0,bigint_buffer__WEBPACK_IMPORTED_MODULE_1__.toBigIntLE)(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = (0,bigint_buffer__WEBPACK_IMPORTED_MODULE_1__.toBufferLE)(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nconst bigIntBE = (length) => (property) => {\n    const layout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(length, property);\n    const { encode, decode } = (0,_base_mjs__WEBPACK_IMPORTED_MODULE_2__.encodeDecode)(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return (0,bigint_buffer__WEBPACK_IMPORTED_MODULE_1__.toBigIntBE)(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = (0,bigint_buffer__WEBPACK_IMPORTED_MODULE_1__.toBufferBE)(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nconst u64 = bigInt(8);\nconst u64be = bigIntBE(8);\nconst u128 = bigInt(16);\nconst u128be = bigIntBE(16);\nconst u192 = bigInt(24);\nconst u192be = bigIntBE(24);\nconst u256 = bigInt(32);\nconst u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vYmlnaW50Lm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNrQztBQUNyQztBQUNuQztBQUNQLG1CQUFtQiwyREFBSTtBQUN2QixZQUFZLGlCQUFpQixFQUFFLHVEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGVBQWUseURBQVUsQ0FBQyxNQUFNO0FBQ2hDO0FBQ0E7QUFDQSxvQkFBb0IseURBQVU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG1CQUFtQiwyREFBSTtBQUN2QixZQUFZLGlCQUFpQixFQUFFLHVEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGVBQWUseURBQVUsQ0FBQyxNQUFNO0FBQ2hDO0FBQ0E7QUFDQSxvQkFBb0IseURBQVU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscy9saWIvZXNtL2JpZ2ludC5tanM/YWUwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibG9iIH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHRvQmlnSW50QkUsIHRvQmlnSW50TEUsIHRvQnVmZmVyQkUsIHRvQnVmZmVyTEUgfSBmcm9tICdiaWdpbnQtYnVmZmVyJztcbmltcG9ydCB7IGVuY29kZURlY29kZSB9IGZyb20gJy4vYmFzZS5tanMnO1xuZXhwb3J0IGNvbnN0IGJpZ0ludCA9IChsZW5ndGgpID0+IChwcm9wZXJ0eSkgPT4ge1xuICAgIGNvbnN0IGxheW91dCA9IGJsb2IobGVuZ3RoLCBwcm9wZXJ0eSk7XG4gICAgY29uc3QgeyBlbmNvZGUsIGRlY29kZSB9ID0gZW5jb2RlRGVjb2RlKGxheW91dCk7XG4gICAgY29uc3QgYmlnSW50TGF5b3V0ID0gbGF5b3V0O1xuICAgIGJpZ0ludExheW91dC5kZWNvZGUgPSAoYnVmZmVyLCBvZmZzZXQpID0+IHtcbiAgICAgICAgY29uc3Qgc3JjID0gZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICAgICAgcmV0dXJuIHRvQmlnSW50TEUoQnVmZmVyLmZyb20oc3JjKSk7XG4gICAgfTtcbiAgICBiaWdJbnRMYXlvdXQuZW5jb2RlID0gKGJpZ0ludCwgYnVmZmVyLCBvZmZzZXQpID0+IHtcbiAgICAgICAgY29uc3Qgc3JjID0gdG9CdWZmZXJMRShiaWdJbnQsIGxlbmd0aCk7XG4gICAgICAgIHJldHVybiBlbmNvZGUoc3JjLCBidWZmZXIsIG9mZnNldCk7XG4gICAgfTtcbiAgICByZXR1cm4gYmlnSW50TGF5b3V0O1xufTtcbmV4cG9ydCBjb25zdCBiaWdJbnRCRSA9IChsZW5ndGgpID0+IChwcm9wZXJ0eSkgPT4ge1xuICAgIGNvbnN0IGxheW91dCA9IGJsb2IobGVuZ3RoLCBwcm9wZXJ0eSk7XG4gICAgY29uc3QgeyBlbmNvZGUsIGRlY29kZSB9ID0gZW5jb2RlRGVjb2RlKGxheW91dCk7XG4gICAgY29uc3QgYmlnSW50TGF5b3V0ID0gbGF5b3V0O1xuICAgIGJpZ0ludExheW91dC5kZWNvZGUgPSAoYnVmZmVyLCBvZmZzZXQpID0+IHtcbiAgICAgICAgY29uc3Qgc3JjID0gZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICAgICAgcmV0dXJuIHRvQmlnSW50QkUoQnVmZmVyLmZyb20oc3JjKSk7XG4gICAgfTtcbiAgICBiaWdJbnRMYXlvdXQuZW5jb2RlID0gKGJpZ0ludCwgYnVmZmVyLCBvZmZzZXQpID0+IHtcbiAgICAgICAgY29uc3Qgc3JjID0gdG9CdWZmZXJCRShiaWdJbnQsIGxlbmd0aCk7XG4gICAgICAgIHJldHVybiBlbmNvZGUoc3JjLCBidWZmZXIsIG9mZnNldCk7XG4gICAgfTtcbiAgICByZXR1cm4gYmlnSW50TGF5b3V0O1xufTtcbmV4cG9ydCBjb25zdCB1NjQgPSBiaWdJbnQoOCk7XG5leHBvcnQgY29uc3QgdTY0YmUgPSBiaWdJbnRCRSg4KTtcbmV4cG9ydCBjb25zdCB1MTI4ID0gYmlnSW50KDE2KTtcbmV4cG9ydCBjb25zdCB1MTI4YmUgPSBiaWdJbnRCRSgxNik7XG5leHBvcnQgY29uc3QgdTE5MiA9IGJpZ0ludCgyNCk7XG5leHBvcnQgY29uc3QgdTE5MmJlID0gYmlnSW50QkUoMjQpO1xuZXhwb3J0IGNvbnN0IHUyNTYgPSBiaWdJbnQoMzIpO1xuZXhwb3J0IGNvbnN0IHUyNTZiZSA9IGJpZ0ludEJFKDMyKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJpZ2ludC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs\n");

/***/ }),

/***/ "./node_modules/@solana/buffer-layout-utils/lib/esm/decimal.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@solana/buffer-layout-utils/lib/esm/decimal.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WAD\": function() { return /* binding */ WAD; },\n/* harmony export */   \"decimal\": function() { return /* binding */ decimal; }\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs\");\n/* harmony import */ var _bigint_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bigint.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs\");\n\n\n\nconst WAD = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('1e+18');\nconst decimal = (property) => {\n    const layout = (0,_bigint_mjs__WEBPACK_IMPORTED_MODULE_2__.u128)(property);\n    const { encode, decode } = (0,_base_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeDecode)(layout);\n    const decimalLayout = layout;\n    decimalLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset).toString();\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](src).div(WAD);\n    };\n    decimalLayout.encode = (decimal, buffer, offset) => {\n        const src = BigInt(decimal.times(WAD).integerValue().toString());\n        return encode(src, buffer, offset);\n    };\n    return decimalLayout;\n};\n//# sourceMappingURL=decimal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vZGVjaW1hbC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUM7QUFDSztBQUNOO0FBQzdCLGdCQUFnQixvREFBUztBQUN6QjtBQUNQLG1CQUFtQixpREFBSTtBQUN2QixZQUFZLGlCQUFpQixFQUFFLHVEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixvREFBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMvbGliL2VzbS9kZWNpbWFsLm1qcz8zNjE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCaWdOdW1iZXIgZnJvbSAnYmlnbnVtYmVyLmpzJztcbmltcG9ydCB7IGVuY29kZURlY29kZSB9IGZyb20gJy4vYmFzZS5tanMnO1xuaW1wb3J0IHsgdTEyOCB9IGZyb20gJy4vYmlnaW50Lm1qcyc7XG5leHBvcnQgY29uc3QgV0FEID0gbmV3IEJpZ051bWJlcignMWUrMTgnKTtcbmV4cG9ydCBjb25zdCBkZWNpbWFsID0gKHByb3BlcnR5KSA9PiB7XG4gICAgY29uc3QgbGF5b3V0ID0gdTEyOChwcm9wZXJ0eSk7XG4gICAgY29uc3QgeyBlbmNvZGUsIGRlY29kZSB9ID0gZW5jb2RlRGVjb2RlKGxheW91dCk7XG4gICAgY29uc3QgZGVjaW1hbExheW91dCA9IGxheW91dDtcbiAgICBkZWNpbWFsTGF5b3V0LmRlY29kZSA9IChidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBkZWNvZGUoYnVmZmVyLCBvZmZzZXQpLnRvU3RyaW5nKCk7XG4gICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKHNyYykuZGl2KFdBRCk7XG4gICAgfTtcbiAgICBkZWNpbWFsTGF5b3V0LmVuY29kZSA9IChkZWNpbWFsLCBidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBCaWdJbnQoZGVjaW1hbC50aW1lcyhXQUQpLmludGVnZXJWYWx1ZSgpLnRvU3RyaW5nKCkpO1xuICAgICAgICByZXR1cm4gZW5jb2RlKHNyYywgYnVmZmVyLCBvZmZzZXQpO1xuICAgIH07XG4gICAgcmV0dXJuIGRlY2ltYWxMYXlvdXQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjaW1hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/buffer-layout-utils/lib/esm/decimal.mjs\n");

/***/ }),

/***/ "./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _base_mjs__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _base_mjs__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _bigint_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bigint.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _bigint_mjs__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _bigint_mjs__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _decimal_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decimal.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/decimal.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _decimal_mjs__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _decimal_mjs__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _native_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./native.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _native_mjs__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _native_mjs__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _web3_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _web3_mjs__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _web3_mjs__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vaW5kZXgubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEyQjtBQUNFO0FBQ0M7QUFDRDtBQUNGO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMvbGliL2VzbS9pbmRleC5tanM/NzIyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2Jhc2UubWpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmlnaW50Lm1qcyc7XG5leHBvcnQgKiBmcm9tICcuL2RlY2ltYWwubWpzJztcbmV4cG9ydCAqIGZyb20gJy4vbmF0aXZlLm1qcyc7XG5leHBvcnQgKiBmcm9tICcuL3dlYjMubWpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\n");

/***/ }),

/***/ "./node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bool\": function() { return /* binding */ bool; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs\");\n\n\nconst bool = (property) => {\n    const layout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)(property);\n    const { encode, decode } = (0,_base_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeDecode)(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vbmF0aXZlLm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDRDtBQUNuQztBQUNQLG1CQUFtQix5REFBRTtBQUNyQixZQUFZLGlCQUFpQixFQUFFLHVEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vbmF0aXZlLm1qcz8xOGM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IGVuY29kZURlY29kZSB9IGZyb20gJy4vYmFzZS5tanMnO1xuZXhwb3J0IGNvbnN0IGJvb2wgPSAocHJvcGVydHkpID0+IHtcbiAgICBjb25zdCBsYXlvdXQgPSB1OChwcm9wZXJ0eSk7XG4gICAgY29uc3QgeyBlbmNvZGUsIGRlY29kZSB9ID0gZW5jb2RlRGVjb2RlKGxheW91dCk7XG4gICAgY29uc3QgYm9vbExheW91dCA9IGxheW91dDtcbiAgICBib29sTGF5b3V0LmRlY29kZSA9IChidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBkZWNvZGUoYnVmZmVyLCBvZmZzZXQpO1xuICAgICAgICByZXR1cm4gISFzcmM7XG4gICAgfTtcbiAgICBib29sTGF5b3V0LmVuY29kZSA9IChib29sLCBidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBOdW1iZXIoYm9vbCk7XG4gICAgICAgIHJldHVybiBlbmNvZGUoc3JjLCBidWZmZXIsIG9mZnNldCk7XG4gICAgfTtcbiAgICByZXR1cm4gYm9vbExheW91dDtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYXRpdmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs\n");

/***/ }),

/***/ "./node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"publicKey\": function() { return /* binding */ publicKey; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.mjs */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs\");\n\n\n\nconst publicKey = (property) => {\n    const layout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(32, property);\n    const { encode, decode } = (0,_base_mjs__WEBPACK_IMPORTED_MODULE_2__.encodeDecode)(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vd2ViMy5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUNEO0FBQ0Y7QUFDbkM7QUFDUCxtQkFBbUIsMkRBQUk7QUFDdkIsWUFBWSxpQkFBaUIsRUFBRSx1REFBWTtBQUMzQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzL2xpYi9lc20vd2ViMy5tanM/NjczYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibG9iIH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBlbmNvZGVEZWNvZGUgfSBmcm9tICcuL2Jhc2UubWpzJztcbmV4cG9ydCBjb25zdCBwdWJsaWNLZXkgPSAocHJvcGVydHkpID0+IHtcbiAgICBjb25zdCBsYXlvdXQgPSBibG9iKDMyLCBwcm9wZXJ0eSk7XG4gICAgY29uc3QgeyBlbmNvZGUsIGRlY29kZSB9ID0gZW5jb2RlRGVjb2RlKGxheW91dCk7XG4gICAgY29uc3QgcHVibGljS2V5TGF5b3V0ID0gbGF5b3V0O1xuICAgIHB1YmxpY0tleUxheW91dC5kZWNvZGUgPSAoYnVmZmVyLCBvZmZzZXQpID0+IHtcbiAgICAgICAgY29uc3Qgc3JjID0gZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICAgICAgcmV0dXJuIG5ldyBQdWJsaWNLZXkoc3JjKTtcbiAgICB9O1xuICAgIHB1YmxpY0tleUxheW91dC5lbmNvZGUgPSAocHVibGljS2V5LCBidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBwdWJsaWNLZXkudG9CdWZmZXIoKTtcbiAgICAgICAgcmV0dXJuIGVuY29kZShzcmMsIGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICB9O1xuICAgIHJldHVybiBwdWJsaWNLZXlMYXlvdXQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2ViMy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/amountToUiAmount.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/amountToUiAmount.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"amountToUiAmount\": function() { return /* binding */ amountToUiAmount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instructions/amountToUiAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n/**\n * Amount as a string using mint-prescribed decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           Mint for the account\n * @param amount         Amount of tokens to be converted to Ui Amount\n * @param programId      SPL Token program account\n *\n * @return Ui Amount generated\n */\nasync function amountToUiAmount(connection, payer, mint, amount, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_2__.createAmountToUiAmountInstruction)(mint, amount, programId));\n    const { returnData, err } = (await connection.simulateTransaction(transaction, [payer], false)).value;\n    if (returnData?.data) {\n        return Buffer.from(returnData.data[0], returnData.data[1]).toString('utf-8');\n    }\n    return err;\n}\n//# sourceMappingURL=amountToUiAmount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2Ftb3VudFRvVWlBbW91bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEM7QUFDSztBQUNxQztBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkVBQTZFLDJEQUFnQjtBQUNwRyw0QkFBNEIsd0RBQVcsT0FBTyxvR0FBaUM7QUFDL0UsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQSxlQUFlLE1BQU07QUFDckI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9hbW91bnRUb1VpQW1vdW50LmpzPzVjNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVBbW91bnRUb1VpQW1vdW50SW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvYW1vdW50VG9VaUFtb3VudC5qcyc7XG4vKipcbiAqIEFtb3VudCBhcyBhIHN0cmluZyB1c2luZyBtaW50LXByZXNjcmliZWQgZGVjaW1hbHNcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIG1pbnQgICAgICAgICAgIE1pbnQgZm9yIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgICAgQW1vdW50IG9mIHRva2VucyB0byBiZSBjb252ZXJ0ZWQgdG8gVWkgQW1vdW50XG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gVWkgQW1vdW50IGdlbmVyYXRlZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYW1vdW50VG9VaUFtb3VudChjb25uZWN0aW9uLCBwYXllciwgbWludCwgYW1vdW50LCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlQW1vdW50VG9VaUFtb3VudEluc3RydWN0aW9uKG1pbnQsIGFtb3VudCwgcHJvZ3JhbUlkKSk7XG4gICAgY29uc3QgeyByZXR1cm5EYXRhLCBlcnIgfSA9IChhd2FpdCBjb25uZWN0aW9uLnNpbXVsYXRlVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIFtwYXllcl0sIGZhbHNlKSkudmFsdWU7XG4gICAgaWYgKHJldHVybkRhdGE/LmRhdGEpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHJldHVybkRhdGEuZGF0YVswXSwgcmV0dXJuRGF0YS5kYXRhWzFdKS50b1N0cmluZygndXRmLTgnKTtcbiAgICB9XG4gICAgcmV0dXJuIGVycjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFtb3VudFRvVWlBbW91bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/amountToUiAmount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/approve.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/approve.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"approve\": function() { return /* binding */ approve; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_approve_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/approve.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/approve.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Approve a delegate to transfer up to a maximum number of tokens from an account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Address of the token account\n * @param delegate       Account authorized to transfer tokens from the account\n * @param owner          Owner of the account\n * @param amount         Maximum number of tokens the delegate may transfer\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function approve(connection, payer, account, delegate, owner, amount, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_approve_js__WEBPACK_IMPORTED_MODULE_3__.createApproveInstruction)(account, delegate, ownerPublicKey, amount, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=approve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2FwcHJvdmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUU7QUFDdEI7QUFDbUI7QUFDM0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkhBQTJILDJEQUFnQjtBQUNsSixzQ0FBc0Msd0RBQVU7QUFDaEQsNEJBQTRCLHdEQUFXLE9BQU8sa0ZBQXdCO0FBQ3RFLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2FwcHJvdmUuanM/MDJlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUFwcHJvdmVJbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy9hcHByb3ZlLmpzJztcbmltcG9ydCB7IGdldFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbi8qKlxuICogQXBwcm92ZSBhIGRlbGVnYXRlIHRvIHRyYW5zZmVyIHVwIHRvIGEgbWF4aW11bSBudW1iZXIgb2YgdG9rZW5zIGZyb20gYW4gYWNjb3VudFxuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgQWRkcmVzcyBvZiB0aGUgdG9rZW4gYWNjb3VudFxuICogQHBhcmFtIGRlbGVnYXRlICAgICAgIEFjY291bnQgYXV0aG9yaXplZCB0byB0cmFuc2ZlciB0b2tlbnMgZnJvbSB0aGUgYWNjb3VudFxuICogQHBhcmFtIG93bmVyICAgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgICAgTWF4aW11bSBudW1iZXIgb2YgdG9rZW5zIHRoZSBkZWxlZ2F0ZSBtYXkgdHJhbnNmZXJcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwcHJvdmUoY29ubmVjdGlvbiwgcGF5ZXIsIGFjY291bnQsIGRlbGVnYXRlLCBvd25lciwgYW1vdW50LCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVBcHByb3ZlSW5zdHJ1Y3Rpb24oYWNjb3VudCwgZGVsZWdhdGUsIG93bmVyUHVibGljS2V5LCBhbW91bnQsIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcHJvdmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/approve.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/approveChecked.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/approveChecked.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"approveChecked\": function() { return /* binding */ approveChecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_approveChecked_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/approveChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Approve a delegate to transfer up to a maximum number of tokens from an account, asserting the token mint and\n * decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Address of the account\n * @param delegate       Account authorized to perform a transfer tokens from the source account\n * @param owner          Owner of the source account\n * @param amount         Maximum number of tokens the delegate may transfer\n * @param decimals       Number of decimals in approve amount\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function approveChecked(connection, payer, mint, account, delegate, owner, amount, decimals, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_approveChecked_js__WEBPACK_IMPORTED_MODULE_3__.createApproveCheckedInstruction)(account, mint, delegate, ownerPublicKey, amount, decimals, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=approveChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2FwcHJvdmVDaGVja2VkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlFO0FBQ3RCO0FBQ2lDO0FBQ3pDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrSkFBa0osMkRBQWdCO0FBQ3pLLHNDQUFzQyx3REFBVTtBQUNoRCw0QkFBNEIsd0RBQVcsT0FBTyxnR0FBK0I7QUFDN0UsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvYXBwcm92ZUNoZWNrZWQuanM/Mjk2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvYXBwcm92ZUNoZWNrZWQuanMnO1xuaW1wb3J0IHsgZ2V0U2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuLyoqXG4gKiBBcHByb3ZlIGEgZGVsZWdhdGUgdG8gdHJhbnNmZXIgdXAgdG8gYSBtYXhpbXVtIG51bWJlciBvZiB0b2tlbnMgZnJvbSBhbiBhY2NvdW50LCBhc3NlcnRpbmcgdGhlIHRva2VuIG1pbnQgYW5kXG4gKiBkZWNpbWFsc1xuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgQWRkcmVzcyBvZiB0aGUgYWNjb3VudFxuICogQHBhcmFtIGRlbGVnYXRlICAgICAgIEFjY291bnQgYXV0aG9yaXplZCB0byBwZXJmb3JtIGEgdHJhbnNmZXIgdG9rZW5zIGZyb20gdGhlIHNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgT3duZXIgb2YgdGhlIHNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgICAgTWF4aW11bSBudW1iZXIgb2YgdG9rZW5zIHRoZSBkZWxlZ2F0ZSBtYXkgdHJhbnNmZXJcbiAqIEBwYXJhbSBkZWNpbWFscyAgICAgICBOdW1iZXIgb2YgZGVjaW1hbHMgaW4gYXBwcm92ZSBhbW91bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwcHJvdmVDaGVja2VkKGNvbm5lY3Rpb24sIHBheWVyLCBtaW50LCBhY2NvdW50LCBkZWxlZ2F0ZSwgb3duZXIsIGFtb3VudCwgZGVjaW1hbHMsIG11bHRpU2lnbmVycyA9IFtdLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IFtvd25lclB1YmxpY0tleSwgc2lnbmVyc10gPSBnZXRTaWduZXJzKG93bmVyLCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZUFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb24oYWNjb3VudCwgbWludCwgZGVsZWdhdGUsIG93bmVyUHVibGljS2V5LCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMsIHByb2dyYW1JZCkpO1xuICAgIHJldHVybiBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIC4uLnNpZ25lcnNdLCBjb25maXJtT3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHByb3ZlQ2hlY2tlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/approveChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/burn.js":
/*!****************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/burn.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"burn\": function() { return /* binding */ burn; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_burn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/burn.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/burn.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Burn tokens from an account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to burn tokens from\n * @param mint           Mint for the account\n * @param owner          Account owner\n * @param amount         Amount to burn\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function burn(connection, payer, account, mint, owner, amount, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_burn_js__WEBPACK_IMPORTED_MODULE_3__.createBurnInstruction)(account, mint, ownerPublicKey, amount, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=burn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2J1cm4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUU7QUFDdEI7QUFDYTtBQUNyQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxvSEFBb0gsMkRBQWdCO0FBQzNJLHNDQUFzQyx3REFBVTtBQUNoRCw0QkFBNEIsd0RBQVcsT0FBTyw0RUFBcUI7QUFDbkUsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvYnVybi5qcz85MTFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlQnVybkluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2J1cm4uanMnO1xuaW1wb3J0IHsgZ2V0U2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuLyoqXG4gKiBCdXJuIHRva2VucyBmcm9tIGFuIGFjY291bnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIGFjY291bnQgICAgICAgIEFjY291bnQgdG8gYnVybiB0b2tlbnMgZnJvbVxuICogQHBhcmFtIG1pbnQgICAgICAgICAgIE1pbnQgZm9yIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgQWNjb3VudCBvd25lclxuICogQHBhcmFtIGFtb3VudCAgICAgICAgIEFtb3VudCB0byBidXJuXG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzICAgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBidXJuKGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBtaW50LCBvd25lciwgYW1vdW50LCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVCdXJuSW5zdHJ1Y3Rpb24oYWNjb3VudCwgbWludCwgb3duZXJQdWJsaWNLZXksIGFtb3VudCwgbXVsdGlTaWduZXJzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCAuLi5zaWduZXJzXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnVybi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/burn.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/burnChecked.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/burnChecked.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"burnChecked\": function() { return /* binding */ burnChecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_burnChecked_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/burnChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Burn tokens from an account, asserting the token mint and decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to burn tokens from\n * @param mint           Mint for the account\n * @param owner          Account owner\n * @param amount         Amount to burn\n * @param decimals       Number of decimals in amount to burn\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function burnChecked(connection, payer, account, mint, owner, amount, decimals, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_burnChecked_js__WEBPACK_IMPORTED_MODULE_3__.createBurnCheckedInstruction)(account, mint, ownerPublicKey, amount, decimals, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=burnChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2J1cm5DaGVja2VkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlFO0FBQ3RCO0FBQzJCO0FBQ25DO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUlBQXFJLDJEQUFnQjtBQUM1SixzQ0FBc0Msd0RBQVU7QUFDaEQsNEJBQTRCLHdEQUFXLE9BQU8sMEZBQTRCO0FBQzFFLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2J1cm5DaGVja2VkLmpzP2M5NzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVCdXJuQ2hlY2tlZEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2J1cm5DaGVja2VkLmpzJztcbmltcG9ydCB7IGdldFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbi8qKlxuICogQnVybiB0b2tlbnMgZnJvbSBhbiBhY2NvdW50LCBhc3NlcnRpbmcgdGhlIHRva2VuIG1pbnQgYW5kIGRlY2ltYWxzXG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICBBY2NvdW50IHRvIGJ1cm4gdG9rZW5zIGZyb21cbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBNaW50IGZvciB0aGUgYWNjb3VudFxuICogQHBhcmFtIG93bmVyICAgICAgICAgIEFjY291bnQgb3duZXJcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgICBBbW91bnQgdG8gYnVyblxuICogQHBhcmFtIGRlY2ltYWxzICAgICAgIE51bWJlciBvZiBkZWNpbWFscyBpbiBhbW91bnQgdG8gYnVyblxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYG93bmVyYCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBTaWduYXR1cmUgb2YgdGhlIGNvbmZpcm1lZCB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYnVybkNoZWNrZWQoY29ubmVjdGlvbiwgcGF5ZXIsIGFjY291bnQsIG1pbnQsIG93bmVyLCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVCdXJuQ2hlY2tlZEluc3RydWN0aW9uKGFjY291bnQsIG1pbnQsIG93bmVyUHVibGljS2V5LCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMsIHByb2dyYW1JZCkpO1xuICAgIHJldHVybiBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIC4uLnNpZ25lcnNdLCBjb25maXJtT3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1idXJuQ2hlY2tlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/burnChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/closeAccount.js":
/*!************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/closeAccount.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeAccount\": function() { return /* binding */ closeAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_closeAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/closeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Close a token account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to close\n * @param destination    Account to receive the remaining balance of the closed account\n * @param authority      Authority which is allowed to close the account\n * @param multiSigners   Signing accounts if `authority` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function closeAccount(connection, payer, account, destination, authority, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_closeAccount_js__WEBPACK_IMPORTED_MODULE_3__.createCloseAccountInstruction)(account, destination, authorityPublicKey, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=closeAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2Nsb3NlQWNjb3VudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RTtBQUN0QjtBQUM2QjtBQUNyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0hBQStILDJEQUFnQjtBQUN0SiwwQ0FBMEMsd0RBQVU7QUFDcEQsNEJBQTRCLHdEQUFXLE9BQU8sNEZBQTZCO0FBQzNFLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2Nsb3NlQWNjb3VudC5qcz82OTJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2xvc2VBY2NvdW50SW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvY2xvc2VBY2NvdW50LmpzJztcbmltcG9ydCB7IGdldFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbi8qKlxuICogQ2xvc2UgYSB0b2tlbiBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICBBY2NvdW50IHRvIGNsb3NlXG4gKiBAcGFyYW0gZGVzdGluYXRpb24gICAgQWNjb3VudCB0byByZWNlaXZlIHRoZSByZW1haW5pbmcgYmFsYW5jZSBvZiB0aGUgY2xvc2VkIGFjY291bnRcbiAqIEBwYXJhbSBhdXRob3JpdHkgICAgICBBdXRob3JpdHkgd2hpY2ggaXMgYWxsb3dlZCB0byBjbG9zZSB0aGUgYWNjb3VudFxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYGF1dGhvcml0eWAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNsb3NlQWNjb3VudChjb25uZWN0aW9uLCBwYXllciwgYWNjb3VudCwgZGVzdGluYXRpb24sIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW2F1dGhvcml0eVB1YmxpY0tleSwgc2lnbmVyc10gPSBnZXRTaWduZXJzKGF1dGhvcml0eSwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVDbG9zZUFjY291bnRJbnN0cnVjdGlvbihhY2NvdW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5UHVibGljS2V5LCBtdWx0aVNpZ25lcnMsIHByb2dyYW1JZCkpO1xuICAgIHJldHVybiBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIC4uLnNpZ25lcnNdLCBjb25maXJtT3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbG9zZUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/closeAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createAccount.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createAccount.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAccount\": function() { return /* binding */ createAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _extensions_extensionType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../extensions/extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n/* harmony import */ var _instructions_initializeAccount_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../instructions/initializeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony import */ var _createAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createAssociatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccount.js\");\n\n\n\n\n\n\n/**\n * Create and initialize a new token account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction and initialization fees\n * @param mint           Mint for the account\n * @param owner          Owner of the new account\n * @param keypair        Optional keypair, defaulting to the associated token account for the `mint` and `owner`\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Address of the new token account\n */\nasync function createAccount(connection, payer, mint, owner, keypair, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    // If a keypair isn't provided, create the associated token account and return its address\n    if (!keypair)\n        return await (0,_createAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_2__.createAssociatedTokenAccount)(connection, payer, mint, owner, confirmOptions, programId);\n    // Otherwise, create the account with the provided keypair and return its public key\n    const mintState = await (0,_state_mint_js__WEBPACK_IMPORTED_MODULE_3__.getMint)(connection, mint, confirmOptions?.commitment, programId);\n    const space = (0,_extensions_extensionType_js__WEBPACK_IMPORTED_MODULE_4__.getAccountLenForMint)(mintState);\n    const lamports = await connection.getMinimumBalanceForRentExemption(space);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: keypair.publicKey,\n        space,\n        lamports,\n        programId,\n    }), (0,_instructions_initializeAccount_js__WEBPACK_IMPORTED_MODULE_5__.createInitializeAccountInstruction)(keypair.publicKey, mint, owner, programId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n}\n//# sourceMappingURL=createAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZUFjY291bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3RjtBQUNyQztBQUNtQjtBQUNvQjtBQUMvQztBQUNzQztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtHQUFrRywyREFBZ0I7QUFDekg7QUFDQTtBQUNBLHFCQUFxQiw4RkFBNEI7QUFDakQ7QUFDQSw0QkFBNEIsdURBQU87QUFDbkMsa0JBQWtCLGtGQUFvQjtBQUN0QztBQUNBLDRCQUE0Qix3REFBVyxPQUFPLHdFQUEyQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHLHNHQUFrQztBQUMxQyxVQUFVLDBFQUF5QjtBQUNuQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9jcmVhdGVBY2NvdW50LmpzPzQxZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgU3lzdGVtUHJvZ3JhbSwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBnZXRBY2NvdW50TGVuRm9yTWludCB9IGZyb20gJy4uL2V4dGVuc2lvbnMvZXh0ZW5zaW9uVHlwZS5qcyc7XG5pbXBvcnQgeyBjcmVhdGVJbml0aWFsaXplQWNjb3VudEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2luaXRpYWxpemVBY2NvdW50LmpzJztcbmltcG9ydCB7IGdldE1pbnQgfSBmcm9tICcuLi9zdGF0ZS9taW50LmpzJztcbmltcG9ydCB7IGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnQgfSBmcm9tICcuL2NyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnQuanMnO1xuLyoqXG4gKiBDcmVhdGUgYW5kIGluaXRpYWxpemUgYSBuZXcgdG9rZW4gYWNjb3VudFxuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBhbmQgaW5pdGlhbGl6YXRpb24gZmVlc1xuICogQHBhcmFtIG1pbnQgICAgICAgICAgIE1pbnQgZm9yIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgT3duZXIgb2YgdGhlIG5ldyBhY2NvdW50XG4gKiBAcGFyYW0ga2V5cGFpciAgICAgICAgT3B0aW9uYWwga2V5cGFpciwgZGVmYXVsdGluZyB0byB0aGUgYXNzb2NpYXRlZCB0b2tlbiBhY2NvdW50IGZvciB0aGUgYG1pbnRgIGFuZCBgb3duZXJgXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBBZGRyZXNzIG9mIHRoZSBuZXcgdG9rZW4gYWNjb3VudFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQWNjb3VudChjb25uZWN0aW9uLCBwYXllciwgbWludCwgb3duZXIsIGtleXBhaXIsIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgLy8gSWYgYSBrZXlwYWlyIGlzbid0IHByb3ZpZGVkLCBjcmVhdGUgdGhlIGFzc29jaWF0ZWQgdG9rZW4gYWNjb3VudCBhbmQgcmV0dXJuIGl0cyBhZGRyZXNzXG4gICAgaWYgKCFrZXlwYWlyKVxuICAgICAgICByZXR1cm4gYXdhaXQgY3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudChjb25uZWN0aW9uLCBwYXllciwgbWludCwgb3duZXIsIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQpO1xuICAgIC8vIE90aGVyd2lzZSwgY3JlYXRlIHRoZSBhY2NvdW50IHdpdGggdGhlIHByb3ZpZGVkIGtleXBhaXIgYW5kIHJldHVybiBpdHMgcHVibGljIGtleVxuICAgIGNvbnN0IG1pbnRTdGF0ZSA9IGF3YWl0IGdldE1pbnQoY29ubmVjdGlvbiwgbWludCwgY29uZmlybU9wdGlvbnM/LmNvbW1pdG1lbnQsIHByb2dyYW1JZCk7XG4gICAgY29uc3Qgc3BhY2UgPSBnZXRBY2NvdW50TGVuRm9yTWludChtaW50U3RhdGUpO1xuICAgIGNvbnN0IGxhbXBvcnRzID0gYXdhaXQgY29ubmVjdGlvbi5nZXRNaW5pbXVtQmFsYW5jZUZvclJlbnRFeGVtcHRpb24oc3BhY2UpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKFN5c3RlbVByb2dyYW0uY3JlYXRlQWNjb3VudCh7XG4gICAgICAgIGZyb21QdWJrZXk6IHBheWVyLnB1YmxpY0tleSxcbiAgICAgICAgbmV3QWNjb3VudFB1YmtleToga2V5cGFpci5wdWJsaWNLZXksXG4gICAgICAgIHNwYWNlLFxuICAgICAgICBsYW1wb3J0cyxcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgIH0pLCBjcmVhdGVJbml0aWFsaXplQWNjb3VudEluc3RydWN0aW9uKGtleXBhaXIucHVibGljS2V5LCBtaW50LCBvd25lciwgcHJvZ3JhbUlkKSk7XG4gICAgYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCBrZXlwYWlyXSwgY29uZmlybU9wdGlvbnMpO1xuICAgIHJldHVybiBrZXlwYWlyLnB1YmxpY0tleTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccount.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccount.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAssociatedTokenAccount\": function() { return /* binding */ createAssociatedTokenAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/associatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n\n\n\n\n/**\n * Create and initialize a new associated token account\n *\n * @param connection               Connection to use\n * @param payer                    Payer of the transaction and initialization fees\n * @param mint                     Mint for the account\n * @param owner                    Owner of the new account\n * @param confirmOptions           Options for confirming the transaction\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the new associated token account\n */\nasync function createAssociatedTokenAccount(connection, payer, mint, owner, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const associatedToken = await (0,_state_mint_js__WEBPACK_IMPORTED_MODULE_2__.getAssociatedTokenAddress)(mint, owner, false, programId, associatedTokenProgramId);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_3__.createAssociatedTokenAccountInstruction)(payer.publicKey, associatedToken, owner, mint, programId, associatedTokenProgramId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n    return associatedToken;\n}\n//# sourceMappingURL=createAssociatedTokenAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUU7QUFDTztBQUNvQjtBQUN2QztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdHQUF3RywyREFBZ0IsNkJBQTZCLHNFQUEyQjtBQUN2TCxrQ0FBa0MseUVBQXlCO0FBQzNELDRCQUE0Qix3REFBVyxPQUFPLGdIQUF1QztBQUNyRixVQUFVLDBFQUF5QjtBQUNuQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9jcmVhdGVBc3NvY2lhdGVkVG9rZW5BY2NvdW50LmpzPzFlNDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgQVNTT0NJQVRFRF9UT0tFTl9QUk9HUkFNX0lELCBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy9hc3NvY2lhdGVkVG9rZW5BY2NvdW50LmpzJztcbmltcG9ydCB7IGdldEFzc29jaWF0ZWRUb2tlbkFkZHJlc3MgfSBmcm9tICcuLi9zdGF0ZS9taW50LmpzJztcbi8qKlxuICogQ3JlYXRlIGFuZCBpbml0aWFsaXplIGEgbmV3IGFzc29jaWF0ZWQgdG9rZW4gYWNjb3VudFxuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICAgICAgICAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICAgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGFuZCBpbml0aWFsaXphdGlvbiBmZWVzXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgICAgICAgICAgIE1pbnQgZm9yIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgICAgICAgICAgIE93bmVyIG9mIHRoZSBuZXcgYWNjb3VudFxuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zICAgICAgICAgICBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKiBAcGFyYW0gYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkIFNQTCBBc3NvY2lhdGVkIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gQWRkcmVzcyBvZiB0aGUgbmV3IGFzc29jaWF0ZWQgdG9rZW4gYWNjb3VudFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudChjb25uZWN0aW9uLCBwYXllciwgbWludCwgb3duZXIsIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lELCBhc3NvY2lhdGVkVG9rZW5Qcm9ncmFtSWQgPSBBU1NPQ0lBVEVEX1RPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBhc3NvY2lhdGVkVG9rZW4gPSBhd2FpdCBnZXRBc3NvY2lhdGVkVG9rZW5BZGRyZXNzKG1pbnQsIG93bmVyLCBmYWxzZSwgcHJvZ3JhbUlkLCBhc3NvY2lhdGVkVG9rZW5Qcm9ncmFtSWQpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJbnN0cnVjdGlvbihwYXllci5wdWJsaWNLZXksIGFzc29jaWF0ZWRUb2tlbiwgb3duZXIsIG1pbnQsIHByb2dyYW1JZCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkKSk7XG4gICAgYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyXSwgY29uZmlybU9wdGlvbnMpO1xuICAgIHJldHVybiBhc3NvY2lhdGVkVG9rZW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVBc3NvY2lhdGVkVG9rZW5BY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccountIdempotent.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccountIdempotent.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAssociatedTokenAccountIdempotent\": function() { return /* binding */ createAssociatedTokenAccountIdempotent; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/associatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n\n\n\n\n/**\n * Create and initialize a new associated token account\n * The instruction will succeed even if the associated token account already exists\n *\n * @param connection               Connection to use\n * @param payer                    Payer of the transaction and initialization fees\n * @param mint                     Mint for the account\n * @param owner                    Owner of the new account\n * @param confirmOptions           Options for confirming the transaction\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the new or existing associated token account\n */\nasync function createAssociatedTokenAccountIdempotent(connection, payer, mint, owner, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const associatedToken = await (0,_state_mint_js__WEBPACK_IMPORTED_MODULE_2__.getAssociatedTokenAddress)(mint, owner, false, programId, associatedTokenProgramId);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_3__.createAssociatedTokenAccountIdempotentInstruction)(payer.publicKey, associatedToken, owner, mint, programId, associatedTokenProgramId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n    return associatedToken;\n}\n//# sourceMappingURL=createAssociatedTokenAccountIdempotent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJZGVtcG90ZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlFO0FBQ087QUFDOEI7QUFDakQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtIQUFrSCwyREFBZ0IsNkJBQTZCLHNFQUEyQjtBQUNqTSxrQ0FBa0MseUVBQXlCO0FBQzNELDRCQUE0Qix3REFBVyxPQUFPLDBIQUFpRDtBQUMvRixVQUFVLDBFQUF5QjtBQUNuQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9jcmVhdGVBc3NvY2lhdGVkVG9rZW5BY2NvdW50SWRlbXBvdGVudC5qcz8yZWE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IEFTU09DSUFURURfVE9LRU5fUFJPR1JBTV9JRCwgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVBc3NvY2lhdGVkVG9rZW5BY2NvdW50SWRlbXBvdGVudEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2Fzc29jaWF0ZWRUb2tlbkFjY291bnQuanMnO1xuaW1wb3J0IHsgZ2V0QXNzb2NpYXRlZFRva2VuQWRkcmVzcyB9IGZyb20gJy4uL3N0YXRlL21pbnQuanMnO1xuLyoqXG4gKiBDcmVhdGUgYW5kIGluaXRpYWxpemUgYSBuZXcgYXNzb2NpYXRlZCB0b2tlbiBhY2NvdW50XG4gKiBUaGUgaW5zdHJ1Y3Rpb24gd2lsbCBzdWNjZWVkIGV2ZW4gaWYgdGhlIGFzc29jaWF0ZWQgdG9rZW4gYWNjb3VudCBhbHJlYWR5IGV4aXN0c1xuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICAgICAgICAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICAgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGFuZCBpbml0aWFsaXphdGlvbiBmZWVzXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgICAgICAgICAgIE1pbnQgZm9yIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgICAgICAgICAgIE93bmVyIG9mIHRoZSBuZXcgYWNjb3VudFxuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zICAgICAgICAgICBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKiBAcGFyYW0gYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkIFNQTCBBc3NvY2lhdGVkIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gQWRkcmVzcyBvZiB0aGUgbmV3IG9yIGV4aXN0aW5nIGFzc29jaWF0ZWQgdG9rZW4gYWNjb3VudFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudElkZW1wb3RlbnQoY29ubmVjdGlvbiwgcGF5ZXIsIG1pbnQsIG93bmVyLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkID0gQVNTT0NJQVRFRF9UT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgYXNzb2NpYXRlZFRva2VuID0gYXdhaXQgZ2V0QXNzb2NpYXRlZFRva2VuQWRkcmVzcyhtaW50LCBvd25lciwgZmFsc2UsIHByb2dyYW1JZCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVBc3NvY2lhdGVkVG9rZW5BY2NvdW50SWRlbXBvdGVudEluc3RydWN0aW9uKHBheWVyLnB1YmxpY0tleSwgYXNzb2NpYXRlZFRva2VuLCBvd25lciwgbWludCwgcHJvZ3JhbUlkLCBhc3NvY2lhdGVkVG9rZW5Qcm9ncmFtSWQpKTtcbiAgICBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXJdLCBjb25maXJtT3B0aW9ucyk7XG4gICAgcmV0dXJuIGFzc29jaWF0ZWRUb2tlbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJZGVtcG90ZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccountIdempotent.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createMint.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createMint.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMint\": function() { return /* binding */ createMint; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_initializeMint2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/initializeMint2.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n\n\n\n\n/**\n * Create and initialize a new mint\n *\n * @param connection      Connection to use\n * @param payer           Payer of the transaction and initialization fees\n * @param mintAuthority   Account or multisig that will control minting\n * @param freezeAuthority Optional account or multisig that can freeze token accounts\n * @param decimals        Location of the decimal place\n * @param keypair         Optional keypair, defaulting to a new random one\n * @param confirmOptions  Options for confirming the transaction\n * @param programId       SPL Token program account\n *\n * @return Address of the new mint\n */\nasync function createMint(connection, payer, mintAuthority, freezeAuthority, decimals, keypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate(), confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const lamports = await (0,_state_mint_js__WEBPACK_IMPORTED_MODULE_2__.getMinimumBalanceForRentExemptMint)(connection);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: keypair.publicKey,\n        space: _state_mint_js__WEBPACK_IMPORTED_MODULE_2__.MINT_SIZE,\n        lamports,\n        programId,\n    }), (0,_instructions_initializeMint2_js__WEBPACK_IMPORTED_MODULE_3__.createInitializeMint2Instruction)(keypair.publicKey, decimals, mintAuthority, freezeAuthority, programId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n}\n//# sourceMappingURL=createMint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZU1pbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUc7QUFDOUM7QUFDbUM7QUFDTDtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUdBQWlHLDZEQUFnQixnQ0FBZ0MsMkRBQWdCO0FBQ3hLLDJCQUEyQixrRkFBa0M7QUFDN0QsNEJBQTRCLHdEQUFXLE9BQU8sd0VBQTJCO0FBQ3pFO0FBQ0E7QUFDQSxlQUFlLHFEQUFTO0FBQ3hCO0FBQ0E7QUFDQSxLQUFLLEdBQUcsa0dBQWdDO0FBQ3hDLFVBQVUsMEVBQXlCO0FBQ25DO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZU1pbnQuanM/MDk4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLZXlwYWlyLCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBTeXN0ZW1Qcm9ncmFtLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUluaXRpYWxpemVNaW50Mkluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2luaXRpYWxpemVNaW50Mi5qcyc7XG5pbXBvcnQgeyBnZXRNaW5pbXVtQmFsYW5jZUZvclJlbnRFeGVtcHRNaW50LCBNSU5UX1NJWkUgfSBmcm9tICcuLi9zdGF0ZS9taW50LmpzJztcbi8qKlxuICogQ3JlYXRlIGFuZCBpbml0aWFsaXplIGEgbmV3IG1pbnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBhbmQgaW5pdGlhbGl6YXRpb24gZmVlc1xuICogQHBhcmFtIG1pbnRBdXRob3JpdHkgICBBY2NvdW50IG9yIG11bHRpc2lnIHRoYXQgd2lsbCBjb250cm9sIG1pbnRpbmdcbiAqIEBwYXJhbSBmcmVlemVBdXRob3JpdHkgT3B0aW9uYWwgYWNjb3VudCBvciBtdWx0aXNpZyB0aGF0IGNhbiBmcmVlemUgdG9rZW4gYWNjb3VudHNcbiAqIEBwYXJhbSBkZWNpbWFscyAgICAgICAgTG9jYXRpb24gb2YgdGhlIGRlY2ltYWwgcGxhY2VcbiAqIEBwYXJhbSBrZXlwYWlyICAgICAgICAgT3B0aW9uYWwga2V5cGFpciwgZGVmYXVsdGluZyB0byBhIG5ldyByYW5kb20gb25lXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEFkZHJlc3Mgb2YgdGhlIG5ldyBtaW50XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVNaW50KGNvbm5lY3Rpb24sIHBheWVyLCBtaW50QXV0aG9yaXR5LCBmcmVlemVBdXRob3JpdHksIGRlY2ltYWxzLCBrZXlwYWlyID0gS2V5cGFpci5nZW5lcmF0ZSgpLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGxhbXBvcnRzID0gYXdhaXQgZ2V0TWluaW11bUJhbGFuY2VGb3JSZW50RXhlbXB0TWludChjb25uZWN0aW9uKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChTeXN0ZW1Qcm9ncmFtLmNyZWF0ZUFjY291bnQoe1xuICAgICAgICBmcm9tUHVia2V5OiBwYXllci5wdWJsaWNLZXksXG4gICAgICAgIG5ld0FjY291bnRQdWJrZXk6IGtleXBhaXIucHVibGljS2V5LFxuICAgICAgICBzcGFjZTogTUlOVF9TSVpFLFxuICAgICAgICBsYW1wb3J0cyxcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgIH0pLCBjcmVhdGVJbml0aWFsaXplTWludDJJbnN0cnVjdGlvbihrZXlwYWlyLnB1YmxpY0tleSwgZGVjaW1hbHMsIG1pbnRBdXRob3JpdHksIGZyZWV6ZUF1dGhvcml0eSwgcHJvZ3JhbUlkKSk7XG4gICAgYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCBrZXlwYWlyXSwgY29uZmlybU9wdGlvbnMpO1xuICAgIHJldHVybiBrZXlwYWlyLnB1YmxpY0tleTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZU1pbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createMint.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createMultisig.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createMultisig.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMultisig\": function() { return /* binding */ createMultisig; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_initializeMultisig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/initializeMultisig.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js\");\n/* harmony import */ var _state_multisig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/multisig.js */ \"./node_modules/@solana/spl-token/lib/esm/state/multisig.js\");\n\n\n\n\n/**\n * Create and initialize a new multisig\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction and initialization fees\n * @param signers        Full set of signers\n * @param m              Number of required signatures\n * @param keypair        Optional keypair, defaulting to a new random one\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Address of the new multisig\n */\nasync function createMultisig(connection, payer, signers, m, keypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate(), confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const lamports = await (0,_state_multisig_js__WEBPACK_IMPORTED_MODULE_2__.getMinimumBalanceForRentExemptMultisig)(connection);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: keypair.publicKey,\n        space: _state_multisig_js__WEBPACK_IMPORTED_MODULE_2__.MULTISIG_SIZE,\n        lamports,\n        programId,\n    }), (0,_instructions_initializeMultisig_js__WEBPACK_IMPORTED_MODULE_3__.createInitializeMultisigInstruction)(keypair.publicKey, signers, m, programId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n}\n//# sourceMappingURL=createMultisig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZU11bHRpc2lnLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlHO0FBQzlDO0FBQ3lDO0FBQ0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1RUFBdUUsNkRBQWdCLGdDQUFnQywyREFBZ0I7QUFDOUksMkJBQTJCLDBGQUFzQztBQUNqRSw0QkFBNEIsd0RBQVcsT0FBTyx3RUFBMkI7QUFDekU7QUFDQTtBQUNBLGVBQWUsNkRBQWE7QUFDNUI7QUFDQTtBQUNBLEtBQUssR0FBRyx3R0FBbUM7QUFDM0MsVUFBVSwwRUFBeUI7QUFDbkM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvY3JlYXRlTXVsdGlzaWcuanM/ZTkwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLZXlwYWlyLCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBTeXN0ZW1Qcm9ncmFtLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUluaXRpYWxpemVNdWx0aXNpZ0luc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2luaXRpYWxpemVNdWx0aXNpZy5qcyc7XG5pbXBvcnQgeyBnZXRNaW5pbXVtQmFsYW5jZUZvclJlbnRFeGVtcHRNdWx0aXNpZywgTVVMVElTSUdfU0laRSB9IGZyb20gJy4uL3N0YXRlL211bHRpc2lnLmpzJztcbi8qKlxuICogQ3JlYXRlIGFuZCBpbml0aWFsaXplIGEgbmV3IG11bHRpc2lnXG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGFuZCBpbml0aWFsaXphdGlvbiBmZWVzXG4gKiBAcGFyYW0gc2lnbmVycyAgICAgICAgRnVsbCBzZXQgb2Ygc2lnbmVyc1xuICogQHBhcmFtIG0gICAgICAgICAgICAgIE51bWJlciBvZiByZXF1aXJlZCBzaWduYXR1cmVzXG4gKiBAcGFyYW0ga2V5cGFpciAgICAgICAgT3B0aW9uYWwga2V5cGFpciwgZGVmYXVsdGluZyB0byBhIG5ldyByYW5kb20gb25lXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBBZGRyZXNzIG9mIHRoZSBuZXcgbXVsdGlzaWdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU11bHRpc2lnKGNvbm5lY3Rpb24sIHBheWVyLCBzaWduZXJzLCBtLCBrZXlwYWlyID0gS2V5cGFpci5nZW5lcmF0ZSgpLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGxhbXBvcnRzID0gYXdhaXQgZ2V0TWluaW11bUJhbGFuY2VGb3JSZW50RXhlbXB0TXVsdGlzaWcoY29ubmVjdGlvbik7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoU3lzdGVtUHJvZ3JhbS5jcmVhdGVBY2NvdW50KHtcbiAgICAgICAgZnJvbVB1YmtleTogcGF5ZXIucHVibGljS2V5LFxuICAgICAgICBuZXdBY2NvdW50UHVia2V5OiBrZXlwYWlyLnB1YmxpY0tleSxcbiAgICAgICAgc3BhY2U6IE1VTFRJU0lHX1NJWkUsXG4gICAgICAgIGxhbXBvcnRzLFxuICAgICAgICBwcm9ncmFtSWQsXG4gICAgfSksIGNyZWF0ZUluaXRpYWxpemVNdWx0aXNpZ0luc3RydWN0aW9uKGtleXBhaXIucHVibGljS2V5LCBzaWduZXJzLCBtLCBwcm9ncmFtSWQpKTtcbiAgICBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIGtleXBhaXJdLCBjb25maXJtT3B0aW9ucyk7XG4gICAgcmV0dXJuIGtleXBhaXIucHVibGljS2V5O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlTXVsdGlzaWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createMultisig.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createNativeMint.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createNativeMint.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNativeMint\": function() { return /* binding */ createNativeMint; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_createNativeMint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instructions/createNativeMint.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/createNativeMint.js\");\n\n\n\n/**\n * Create native mint\n *\n * @param connection               Connection to use\n * @param payer                    Payer of the transaction and initialization fees\n * @param confirmOptions           Options for confirming the transaction\n * @param programId                SPL Token program account\n * @param nativeMint               Native mint id associated with program\n */\nasync function createNativeMint(connection, payer, confirmOptions, nativeMint = _constants_js__WEBPACK_IMPORTED_MODULE_1__.NATIVE_MINT_2022, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_createNativeMint_js__WEBPACK_IMPORTED_MODULE_2__.createCreateNativeMintInstruction)(payer.publicKey, nativeMint, programId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n}\n//# sourceMappingURL=createNativeMint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZU5hdGl2ZU1pbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RTtBQUNDO0FBQ2M7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0ZBQWdGLDJEQUFnQixjQUFjLGdFQUFxQjtBQUMxSSw0QkFBNEIsd0RBQVcsT0FBTyxvR0FBaUM7QUFDL0UsVUFBVSwwRUFBeUI7QUFDbkM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZU5hdGl2ZU1pbnQuanM/OTZkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBOQVRJVkVfTUlOVF8yMDIyLCBUT0tFTl8yMDIyX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlQ3JlYXRlTmF0aXZlTWludEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2NyZWF0ZU5hdGl2ZU1pbnQuanMnO1xuLyoqXG4gKiBDcmVhdGUgbmF0aXZlIG1pbnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgICAgICAgICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBhbmQgaW5pdGlhbGl6YXRpb24gZmVlc1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zICAgICAgICAgICBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKiBAcGFyYW0gbmF0aXZlTWludCAgICAgICAgICAgICAgIE5hdGl2ZSBtaW50IGlkIGFzc29jaWF0ZWQgd2l0aCBwcm9ncmFtXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVOYXRpdmVNaW50KGNvbm5lY3Rpb24sIHBheWVyLCBjb25maXJtT3B0aW9ucywgbmF0aXZlTWludCA9IE5BVElWRV9NSU5UXzIwMjIsIHByb2dyYW1JZCA9IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZUNyZWF0ZU5hdGl2ZU1pbnRJbnN0cnVjdGlvbihwYXllci5wdWJsaWNLZXksIG5hdGl2ZU1pbnQsIHByb2dyYW1JZCkpO1xuICAgIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllcl0sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZU5hdGl2ZU1pbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createNativeMint.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/createWrappedNativeAccount.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/createWrappedNativeAccount.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createWrappedNativeAccount\": function() { return /* binding */ createWrappedNativeAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../instructions/associatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n/* harmony import */ var _instructions_initializeAccount_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../instructions/initializeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js\");\n/* harmony import */ var _instructions_syncNative_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../instructions/syncNative.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js\");\n/* harmony import */ var _state_account_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../state/account.js */ \"./node_modules/@solana/spl-token/lib/esm/state/account.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony import */ var _createAccount_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createAccount.js\");\n\n\n\n\n\n\n\n\n/**\n * Create, initialize, and fund a new wrapped native SOL account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction and initialization fees\n * @param owner          Owner of the new token account\n * @param amount         Number of lamports to wrap\n * @param keypair        Optional keypair, defaulting to the associated token account for the native mint and `owner`\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Address of the new wrapped native SOL account\n */\nasync function createWrappedNativeAccount(connection, payer, owner, amount, keypair, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, nativeMint = _constants_js__WEBPACK_IMPORTED_MODULE_1__.NATIVE_MINT) {\n    // If the amount provided is explicitly 0 or NaN, just create the account without funding it\n    if (!amount)\n        return await (0,_createAccount_js__WEBPACK_IMPORTED_MODULE_2__.createAccount)(connection, payer, nativeMint, owner, keypair, confirmOptions, programId);\n    // If a keypair isn't provided, create the account at the owner's ATA for the native mint and return its address\n    if (!keypair) {\n        const associatedToken = await (0,_state_mint_js__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddress)(nativeMint, owner, false, programId, _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID);\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_4__.createAssociatedTokenAccountInstruction)(payer.publicKey, associatedToken, owner, nativeMint, programId, _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID), _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: associatedToken,\n            lamports: amount,\n        }), (0,_instructions_syncNative_js__WEBPACK_IMPORTED_MODULE_5__.createSyncNativeInstruction)(associatedToken, programId));\n        await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n        return associatedToken;\n    }\n    // Otherwise, create the account with the provided keypair and return its public key\n    const lamports = await (0,_state_account_js__WEBPACK_IMPORTED_MODULE_6__.getMinimumBalanceForRentExemptAccount)(connection);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: keypair.publicKey,\n        space: _state_account_js__WEBPACK_IMPORTED_MODULE_6__.ACCOUNT_SIZE,\n        lamports,\n        programId,\n    }), _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: keypair.publicKey,\n        lamports: amount,\n    }), (0,_instructions_initializeAccount_js__WEBPACK_IMPORTED_MODULE_7__.createInitializeAccountInstruction)(keypair.publicKey, nativeMint, owner, programId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n}\n//# sourceMappingURL=createWrappedNativeAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZVdyYXBwZWROYXRpdmVBY2NvdW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF3RjtBQUNLO0FBQ087QUFDVjtBQUNkO0FBQ2M7QUFDN0I7QUFDVjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlIQUFpSCwyREFBZ0IsZUFBZSxzREFBVztBQUNsSztBQUNBO0FBQ0EscUJBQXFCLGdFQUFhO0FBQ2xDO0FBQ0E7QUFDQSxzQ0FBc0MseUVBQXlCLHNDQUFzQyxzRUFBMkI7QUFDaEksZ0NBQWdDLHdEQUFXLE9BQU8sZ0hBQXVDLGlFQUFpRSxzRUFBMkIsR0FBRyxtRUFBc0I7QUFDOU07QUFDQTtBQUNBO0FBQ0EsU0FBUyxHQUFHLHdGQUEyQjtBQUN2QyxjQUFjLDBFQUF5QjtBQUN2QztBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsd0ZBQXFDO0FBQ2hFLDRCQUE0Qix3REFBVyxPQUFPLHdFQUEyQjtBQUN6RTtBQUNBO0FBQ0EsZUFBZSwyREFBWTtBQUMzQjtBQUNBO0FBQ0EsS0FBSyxHQUFHLG1FQUFzQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxLQUFLLEdBQUcsc0dBQWtDO0FBQzFDLFVBQVUsMEVBQXlCO0FBQ25DO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2NyZWF0ZVdyYXBwZWROYXRpdmVBY2NvdW50LmpzPzZhNjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgU3lzdGVtUHJvZ3JhbSwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgQVNTT0NJQVRFRF9UT0tFTl9QUk9HUkFNX0lELCBOQVRJVkVfTUlOVCwgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVBc3NvY2lhdGVkVG9rZW5BY2NvdW50SW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvYXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcyc7XG5pbXBvcnQgeyBjcmVhdGVJbml0aWFsaXplQWNjb3VudEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2luaXRpYWxpemVBY2NvdW50LmpzJztcbmltcG9ydCB7IGNyZWF0ZVN5bmNOYXRpdmVJbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy9zeW5jTmF0aXZlLmpzJztcbmltcG9ydCB7IEFDQ09VTlRfU0laRSwgZ2V0TWluaW11bUJhbGFuY2VGb3JSZW50RXhlbXB0QWNjb3VudCB9IGZyb20gJy4uL3N0YXRlL2FjY291bnQuanMnO1xuaW1wb3J0IHsgZ2V0QXNzb2NpYXRlZFRva2VuQWRkcmVzcyB9IGZyb20gJy4uL3N0YXRlL21pbnQuanMnO1xuaW1wb3J0IHsgY3JlYXRlQWNjb3VudCB9IGZyb20gJy4vY3JlYXRlQWNjb3VudC5qcyc7XG4vKipcbiAqIENyZWF0ZSwgaW5pdGlhbGl6ZSwgYW5kIGZ1bmQgYSBuZXcgd3JhcHBlZCBuYXRpdmUgU09MIGFjY291bnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gYW5kIGluaXRpYWxpemF0aW9uIGZlZXNcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICBPd25lciBvZiB0aGUgbmV3IHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgICBOdW1iZXIgb2YgbGFtcG9ydHMgdG8gd3JhcFxuICogQHBhcmFtIGtleXBhaXIgICAgICAgIE9wdGlvbmFsIGtleXBhaXIsIGRlZmF1bHRpbmcgdG8gdGhlIGFzc29jaWF0ZWQgdG9rZW4gYWNjb3VudCBmb3IgdGhlIG5hdGl2ZSBtaW50IGFuZCBgb3duZXJgXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBBZGRyZXNzIG9mIHRoZSBuZXcgd3JhcHBlZCBuYXRpdmUgU09MIGFjY291bnRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVdyYXBwZWROYXRpdmVBY2NvdW50KGNvbm5lY3Rpb24sIHBheWVyLCBvd25lciwgYW1vdW50LCBrZXlwYWlyLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCwgbmF0aXZlTWludCA9IE5BVElWRV9NSU5UKSB7XG4gICAgLy8gSWYgdGhlIGFtb3VudCBwcm92aWRlZCBpcyBleHBsaWNpdGx5IDAgb3IgTmFOLCBqdXN0IGNyZWF0ZSB0aGUgYWNjb3VudCB3aXRob3V0IGZ1bmRpbmcgaXRcbiAgICBpZiAoIWFtb3VudClcbiAgICAgICAgcmV0dXJuIGF3YWl0IGNyZWF0ZUFjY291bnQoY29ubmVjdGlvbiwgcGF5ZXIsIG5hdGl2ZU1pbnQsIG93bmVyLCBrZXlwYWlyLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkKTtcbiAgICAvLyBJZiBhIGtleXBhaXIgaXNuJ3QgcHJvdmlkZWQsIGNyZWF0ZSB0aGUgYWNjb3VudCBhdCB0aGUgb3duZXIncyBBVEEgZm9yIHRoZSBuYXRpdmUgbWludCBhbmQgcmV0dXJuIGl0cyBhZGRyZXNzXG4gICAgaWYgKCFrZXlwYWlyKSB7XG4gICAgICAgIGNvbnN0IGFzc29jaWF0ZWRUb2tlbiA9IGF3YWl0IGdldEFzc29jaWF0ZWRUb2tlbkFkZHJlc3MobmF0aXZlTWludCwgb3duZXIsIGZhbHNlLCBwcm9ncmFtSWQsIEFTU09DSUFURURfVE9LRU5fUFJPR1JBTV9JRCk7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJbnN0cnVjdGlvbihwYXllci5wdWJsaWNLZXksIGFzc29jaWF0ZWRUb2tlbiwgb3duZXIsIG5hdGl2ZU1pbnQsIHByb2dyYW1JZCwgQVNTT0NJQVRFRF9UT0tFTl9QUk9HUkFNX0lEKSwgU3lzdGVtUHJvZ3JhbS50cmFuc2Zlcih7XG4gICAgICAgICAgICBmcm9tUHVia2V5OiBwYXllci5wdWJsaWNLZXksXG4gICAgICAgICAgICB0b1B1YmtleTogYXNzb2NpYXRlZFRva2VuLFxuICAgICAgICAgICAgbGFtcG9ydHM6IGFtb3VudCxcbiAgICAgICAgfSksIGNyZWF0ZVN5bmNOYXRpdmVJbnN0cnVjdGlvbihhc3NvY2lhdGVkVG9rZW4sIHByb2dyYW1JZCkpO1xuICAgICAgICBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXJdLCBjb25maXJtT3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBhc3NvY2lhdGVkVG9rZW47XG4gICAgfVxuICAgIC8vIE90aGVyd2lzZSwgY3JlYXRlIHRoZSBhY2NvdW50IHdpdGggdGhlIHByb3ZpZGVkIGtleXBhaXIgYW5kIHJldHVybiBpdHMgcHVibGljIGtleVxuICAgIGNvbnN0IGxhbXBvcnRzID0gYXdhaXQgZ2V0TWluaW11bUJhbGFuY2VGb3JSZW50RXhlbXB0QWNjb3VudChjb25uZWN0aW9uKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChTeXN0ZW1Qcm9ncmFtLmNyZWF0ZUFjY291bnQoe1xuICAgICAgICBmcm9tUHVia2V5OiBwYXllci5wdWJsaWNLZXksXG4gICAgICAgIG5ld0FjY291bnRQdWJrZXk6IGtleXBhaXIucHVibGljS2V5LFxuICAgICAgICBzcGFjZTogQUNDT1VOVF9TSVpFLFxuICAgICAgICBsYW1wb3J0cyxcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgIH0pLCBTeXN0ZW1Qcm9ncmFtLnRyYW5zZmVyKHtcbiAgICAgICAgZnJvbVB1YmtleTogcGF5ZXIucHVibGljS2V5LFxuICAgICAgICB0b1B1YmtleToga2V5cGFpci5wdWJsaWNLZXksXG4gICAgICAgIGxhbXBvcnRzOiBhbW91bnQsXG4gICAgfSksIGNyZWF0ZUluaXRpYWxpemVBY2NvdW50SW5zdHJ1Y3Rpb24oa2V5cGFpci5wdWJsaWNLZXksIG5hdGl2ZU1pbnQsIG93bmVyLCBwcm9ncmFtSWQpKTtcbiAgICBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIGtleXBhaXJdLCBjb25maXJtT3B0aW9ucyk7XG4gICAgcmV0dXJuIGtleXBhaXIucHVibGljS2V5O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlV3JhcHBlZE5hdGl2ZUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/createWrappedNativeAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/freezeAccount.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/freezeAccount.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"freezeAccount\": function() { return /* binding */ freezeAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_freezeAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/freezeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Freeze a token account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to freeze\n * @param mint           Mint for the account\n * @param authority      Mint freeze authority\n * @param multiSigners   Signing accounts if `authority` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function freezeAccount(connection, payer, account, mint, authority, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_freezeAccount_js__WEBPACK_IMPORTED_MODULE_3__.createFreezeAccountInstruction)(account, mint, authorityPublicKey, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=freezeAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2ZyZWV6ZUFjY291bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUU7QUFDdEI7QUFDK0I7QUFDdkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlIQUF5SCwyREFBZ0I7QUFDaEosMENBQTBDLHdEQUFVO0FBQ3BELDRCQUE0Qix3REFBVyxPQUFPLDhGQUE4QjtBQUM1RSxpQkFBaUIsMEVBQXlCO0FBQzFDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9mcmVlemVBY2NvdW50LmpzPzRmNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVGcmVlemVBY2NvdW50SW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvZnJlZXplQWNjb3VudC5qcyc7XG5pbXBvcnQgeyBnZXRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG4vKipcbiAqIEZyZWV6ZSBhIHRva2VuIGFjY291bnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIGFjY291bnQgICAgICAgIEFjY291bnQgdG8gZnJlZXplXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgTWludCBmb3IgdGhlIGFjY291bnRcbiAqIEBwYXJhbSBhdXRob3JpdHkgICAgICBNaW50IGZyZWV6ZSBhdXRob3JpdHlcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBhdXRob3JpdHlgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmcmVlemVBY2NvdW50KGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBtaW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycyA9IFtdLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IFthdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhhdXRob3JpdHksIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlRnJlZXplQWNjb3VudEluc3RydWN0aW9uKGFjY291bnQsIG1pbnQsIGF1dGhvcml0eVB1YmxpY0tleSwgbXVsdGlTaWduZXJzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCAuLi5zaWduZXJzXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnJlZXplQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/freezeAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/getOrCreateAssociatedTokenAccount.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/getOrCreateAssociatedTokenAccount.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getOrCreateAssociatedTokenAccount\": function() { return /* binding */ getOrCreateAssociatedTokenAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../instructions/associatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n/* harmony import */ var _state_account_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/account.js */ \"./node_modules/@solana/spl-token/lib/esm/state/account.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n\n\n\n\n\n\n/**\n * Retrieve the associated token account, or create it if it doesn't exist\n *\n * @param connection               Connection to use\n * @param payer                    Payer of the transaction and initialization fees\n * @param mint                     Mint associated with the account to set or verify\n * @param owner                    Owner of the account to set or verify\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param commitment               Desired level of commitment for querying the state\n * @param confirmOptions           Options for confirming the transaction\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the new associated token account\n */\nasync function getOrCreateAssociatedTokenAccount(connection, payer, mint, owner, allowOwnerOffCurve = false, commitment, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const associatedToken = await (0,_state_mint_js__WEBPACK_IMPORTED_MODULE_2__.getAssociatedTokenAddress)(mint, owner, allowOwnerOffCurve, programId, associatedTokenProgramId);\n    // This is the optimal logic, considering TX fee, client-side computation, RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically.\n    let account;\n    try {\n        account = await (0,_state_account_js__WEBPACK_IMPORTED_MODULE_3__.getAccount)(connection, associatedToken, commitment, programId);\n    }\n    catch (error) {\n        // TokenAccountNotFoundError can be possible if the associated address has already received some lamports,\n        // becoming a system account. Assuming program derived addressing is safe, this is the only case for the\n        // TokenInvalidAccountOwnerError in this code path.\n        if (error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenAccountNotFoundError || error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountOwnerError) {\n            // As this isn't atomic, it's possible others can create associated accounts meanwhile.\n            try {\n                const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_5__.createAssociatedTokenAccountInstruction)(payer.publicKey, associatedToken, owner, mint, programId, associatedTokenProgramId));\n                await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n            }\n            catch (error) {\n                // Ignore all errors; for now there is no API-compatible way to selectively ignore the expected\n                // instruction error if the associated account exists already.\n            }\n            // Now this should always succeed\n            account = await (0,_state_account_js__WEBPACK_IMPORTED_MODULE_3__.getAccount)(connection, associatedToken, commitment, programId);\n        }\n        else {\n            throw error;\n        }\n    }\n    if (!account.mint.equals(mint))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidMintError();\n    if (!account.owner.equals(owner))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidOwnerError();\n    return account;\n}\n//# sourceMappingURL=getOrCreateAssociatedTokenAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2dldE9yQ3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlFO0FBQ087QUFDd0Q7QUFDcEM7QUFDbkQ7QUFDWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxSkFBcUosMkRBQWdCLDZCQUE2QixzRUFBMkI7QUFDcE8sa0NBQWtDLHlFQUF5QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2REFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGlFQUF5QixxQkFBcUIscUVBQTZCO0FBQ3hHO0FBQ0E7QUFDQSx3Q0FBd0Msd0RBQVcsT0FBTyxnSEFBdUM7QUFDakcsc0JBQXNCLDBFQUF5QjtBQUMvQztBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw2REFBVTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNkRBQXFCO0FBQ3ZDO0FBQ0Esa0JBQWtCLDhEQUFzQjtBQUN4QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9nZXRPckNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnQuanM/ODY2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBBU1NPQ0lBVEVEX1RPS0VOX1BST0dSQU1fSUQsIFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5BY2NvdW50Tm90Rm91bmRFcnJvciwgVG9rZW5JbnZhbGlkQWNjb3VudE93bmVyRXJyb3IsIFRva2VuSW52YWxpZE1pbnRFcnJvciwgVG9rZW5JbnZhbGlkT3duZXJFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgY3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL2Fzc29jaWF0ZWRUb2tlbkFjY291bnQuanMnO1xuaW1wb3J0IHsgZ2V0QWNjb3VudCB9IGZyb20gJy4uL3N0YXRlL2FjY291bnQuanMnO1xuaW1wb3J0IHsgZ2V0QXNzb2NpYXRlZFRva2VuQWRkcmVzcyB9IGZyb20gJy4uL3N0YXRlL21pbnQuanMnO1xuLyoqXG4gKiBSZXRyaWV2ZSB0aGUgYXNzb2NpYXRlZCB0b2tlbiBhY2NvdW50LCBvciBjcmVhdGUgaXQgaWYgaXQgZG9lc24ndCBleGlzdFxuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICAgICAgICAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICAgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGFuZCBpbml0aWFsaXphdGlvbiBmZWVzXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgICAgICAgICAgIE1pbnQgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY2NvdW50IHRvIHNldCBvciB2ZXJpZnlcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICAgICAgICAgICAgT3duZXIgb2YgdGhlIGFjY291bnQgdG8gc2V0IG9yIHZlcmlmeVxuICogQHBhcmFtIGFsbG93T3duZXJPZmZDdXJ2ZSAgICAgICBBbGxvdyB0aGUgb3duZXIgYWNjb3VudCB0byBiZSBhIFBEQSAoUHJvZ3JhbSBEZXJpdmVkIEFkZHJlc3MpXG4gKiBAcGFyYW0gY29tbWl0bWVudCAgICAgICAgICAgICAgIERlc2lyZWQgbGV2ZWwgb2YgY29tbWl0bWVudCBmb3IgcXVlcnlpbmcgdGhlIHN0YXRlXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgICAgICAgICAgIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgICAgICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqIEBwYXJhbSBhc3NvY2lhdGVkVG9rZW5Qcm9ncmFtSWQgU1BMIEFzc29jaWF0ZWQgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBBZGRyZXNzIG9mIHRoZSBuZXcgYXNzb2NpYXRlZCB0b2tlbiBhY2NvdW50XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRPckNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnQoY29ubmVjdGlvbiwgcGF5ZXIsIG1pbnQsIG93bmVyLCBhbGxvd093bmVyT2ZmQ3VydmUgPSBmYWxzZSwgY29tbWl0bWVudCwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQsIGFzc29jaWF0ZWRUb2tlblByb2dyYW1JZCA9IEFTU09DSUFURURfVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGFzc29jaWF0ZWRUb2tlbiA9IGF3YWl0IGdldEFzc29jaWF0ZWRUb2tlbkFkZHJlc3MobWludCwgb3duZXIsIGFsbG93T3duZXJPZmZDdXJ2ZSwgcHJvZ3JhbUlkLCBhc3NvY2lhdGVkVG9rZW5Qcm9ncmFtSWQpO1xuICAgIC8vIFRoaXMgaXMgdGhlIG9wdGltYWwgbG9naWMsIGNvbnNpZGVyaW5nIFRYIGZlZSwgY2xpZW50LXNpZGUgY29tcHV0YXRpb24sIFJQQyByb3VuZHRyaXBzIGFuZCBndWFyYW50ZWVkIGlkZW1wb3RlbnQuXG4gICAgLy8gU2FkbHkgd2UgY2FuJ3QgZG8gdGhpcyBhdG9taWNhbGx5LlxuICAgIGxldCBhY2NvdW50O1xuICAgIHRyeSB7XG4gICAgICAgIGFjY291bnQgPSBhd2FpdCBnZXRBY2NvdW50KGNvbm5lY3Rpb24sIGFzc29jaWF0ZWRUb2tlbiwgY29tbWl0bWVudCwgcHJvZ3JhbUlkKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIFRva2VuQWNjb3VudE5vdEZvdW5kRXJyb3IgY2FuIGJlIHBvc3NpYmxlIGlmIHRoZSBhc3NvY2lhdGVkIGFkZHJlc3MgaGFzIGFscmVhZHkgcmVjZWl2ZWQgc29tZSBsYW1wb3J0cyxcbiAgICAgICAgLy8gYmVjb21pbmcgYSBzeXN0ZW0gYWNjb3VudC4gQXNzdW1pbmcgcHJvZ3JhbSBkZXJpdmVkIGFkZHJlc3NpbmcgaXMgc2FmZSwgdGhpcyBpcyB0aGUgb25seSBjYXNlIGZvciB0aGVcbiAgICAgICAgLy8gVG9rZW5JbnZhbGlkQWNjb3VudE93bmVyRXJyb3IgaW4gdGhpcyBjb2RlIHBhdGguXG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIFRva2VuQWNjb3VudE5vdEZvdW5kRXJyb3IgfHwgZXJyb3IgaW5zdGFuY2VvZiBUb2tlbkludmFsaWRBY2NvdW50T3duZXJFcnJvcikge1xuICAgICAgICAgICAgLy8gQXMgdGhpcyBpc24ndCBhdG9taWMsIGl0J3MgcG9zc2libGUgb3RoZXJzIGNhbiBjcmVhdGUgYXNzb2NpYXRlZCBhY2NvdW50cyBtZWFud2hpbGUuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJbnN0cnVjdGlvbihwYXllci5wdWJsaWNLZXksIGFzc29jaWF0ZWRUb2tlbiwgb3duZXIsIG1pbnQsIHByb2dyYW1JZCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkKSk7XG4gICAgICAgICAgICAgICAgYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyXSwgY29uZmlybU9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gSWdub3JlIGFsbCBlcnJvcnM7IGZvciBub3cgdGhlcmUgaXMgbm8gQVBJLWNvbXBhdGlibGUgd2F5IHRvIHNlbGVjdGl2ZWx5IGlnbm9yZSB0aGUgZXhwZWN0ZWRcbiAgICAgICAgICAgICAgICAvLyBpbnN0cnVjdGlvbiBlcnJvciBpZiB0aGUgYXNzb2NpYXRlZCBhY2NvdW50IGV4aXN0cyBhbHJlYWR5LlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gTm93IHRoaXMgc2hvdWxkIGFsd2F5cyBzdWNjZWVkXG4gICAgICAgICAgICBhY2NvdW50ID0gYXdhaXQgZ2V0QWNjb3VudChjb25uZWN0aW9uLCBhc3NvY2lhdGVkVG9rZW4sIGNvbW1pdG1lbnQsIHByb2dyYW1JZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWFjY291bnQubWludC5lcXVhbHMobWludCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRNaW50RXJyb3IoKTtcbiAgICBpZiAoIWFjY291bnQub3duZXIuZXF1YWxzKG93bmVyKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZE93bmVyRXJyb3IoKTtcbiAgICByZXR1cm4gYWNjb3VudDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE9yQ3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/getOrCreateAssociatedTokenAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amountToUiAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/amountToUiAmount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _approve_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./approve.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/approve.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _approve_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _approve_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _approveChecked_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./approveChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/approveChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _approveChecked_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _approveChecked_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _burn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./burn.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/burn.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _burn_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _burn_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _burnChecked_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./burnChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/burnChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _burnChecked_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _burnChecked_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _closeAccount_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./closeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/closeAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _closeAccount_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _closeAccount_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createAccount_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./createAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createAccount_js__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createAccount_js__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createAssociatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createAssociatedTokenAccountIdempotent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./createAssociatedTokenAccountIdempotent.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createAssociatedTokenAccountIdempotent.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createAssociatedTokenAccountIdempotent_js__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createAssociatedTokenAccountIdempotent_js__WEBPACK_IMPORTED_MODULE_8__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createMint_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createMint.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createMint.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createMint_js__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createMint_js__WEBPACK_IMPORTED_MODULE_9__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createMultisig_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./createMultisig.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createMultisig.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createMultisig_js__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createMultisig_js__WEBPACK_IMPORTED_MODULE_10__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createNativeMint_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./createNativeMint.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createNativeMint.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createNativeMint_js__WEBPACK_IMPORTED_MODULE_11__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createNativeMint_js__WEBPACK_IMPORTED_MODULE_11__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createWrappedNativeAccount_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./createWrappedNativeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/createWrappedNativeAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createWrappedNativeAccount_js__WEBPACK_IMPORTED_MODULE_12__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createWrappedNativeAccount_js__WEBPACK_IMPORTED_MODULE_12__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _freezeAccount_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./freezeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/freezeAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _freezeAccount_js__WEBPACK_IMPORTED_MODULE_13__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _freezeAccount_js__WEBPACK_IMPORTED_MODULE_13__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _getOrCreateAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./getOrCreateAssociatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/getOrCreateAssociatedTokenAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _getOrCreateAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_14__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _getOrCreateAssociatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_14__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _mintTo_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mintTo.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/mintTo.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _mintTo_js__WEBPACK_IMPORTED_MODULE_15__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _mintTo_js__WEBPACK_IMPORTED_MODULE_15__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _mintToChecked_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./mintToChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/mintToChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _mintToChecked_js__WEBPACK_IMPORTED_MODULE_16__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _mintToChecked_js__WEBPACK_IMPORTED_MODULE_16__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _revoke_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./revoke.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/revoke.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _revoke_js__WEBPACK_IMPORTED_MODULE_17__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _revoke_js__WEBPACK_IMPORTED_MODULE_17__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _setAuthority_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./setAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/setAuthority.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _setAuthority_js__WEBPACK_IMPORTED_MODULE_18__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _setAuthority_js__WEBPACK_IMPORTED_MODULE_18__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _syncNative_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./syncNative.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/syncNative.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _syncNative_js__WEBPACK_IMPORTED_MODULE_19__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _syncNative_js__WEBPACK_IMPORTED_MODULE_19__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _thawAccount_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./thawAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/thawAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _thawAccount_js__WEBPACK_IMPORTED_MODULE_20__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _thawAccount_js__WEBPACK_IMPORTED_MODULE_20__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _transfer_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./transfer.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/transfer.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _transfer_js__WEBPACK_IMPORTED_MODULE_21__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _transfer_js__WEBPACK_IMPORTED_MODULE_21__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _transferChecked_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./transferChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/transferChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _transferChecked_js__WEBPACK_IMPORTED_MODULE_22__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _transferChecked_js__WEBPACK_IMPORTED_MODULE_22__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./uiAmountToAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/uiAmountToAmount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_23__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_23__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0M7QUFDVDtBQUNPO0FBQ1Y7QUFDTztBQUNDO0FBQ0M7QUFDZTtBQUNVO0FBQzVCO0FBQ0k7QUFDRTtBQUNVO0FBQ2I7QUFDb0I7QUFDM0I7QUFDTztBQUNQO0FBQ007QUFDRjtBQUNDO0FBQ0g7QUFDTztBQUNDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvaW5kZXguanM/ZjJmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2Ftb3VudFRvVWlBbW91bnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9hcHByb3ZlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYXBwcm92ZUNoZWNrZWQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9idXJuLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYnVybkNoZWNrZWQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jbG9zZUFjY291bnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jcmVhdGVBY2NvdW50LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJZGVtcG90ZW50LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY3JlYXRlTWludC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NyZWF0ZU11bHRpc2lnLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY3JlYXRlTmF0aXZlTWludC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NyZWF0ZVdyYXBwZWROYXRpdmVBY2NvdW50LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZnJlZXplQWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2dldE9yQ3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL21pbnRUby5qcyc7XG5leHBvcnQgKiBmcm9tICcuL21pbnRUb0NoZWNrZWQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9yZXZva2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zZXRBdXRob3JpdHkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zeW5jTmF0aXZlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdGhhd0FjY291bnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi90cmFuc2Zlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3RyYW5zZmVyQ2hlY2tlZC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3VpQW1vdW50VG9BbW91bnQuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/internal.js":
/*!********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/internal.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSigners\": function() { return /* binding */ getSigners; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n\n/** @internal */\nfunction getSigners(signerOrMultisig, multiSigners) {\n    return signerOrMultisig instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey\n        ? [signerOrMultisig, multiSigners]\n        : [signerOrMultisig.publicKey, [signerOrMultisig]];\n}\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL2ludGVybmFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDO0FBQzVDO0FBQ087QUFDUCx1Q0FBdUMsc0RBQVM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9pbnRlcm5hbC5qcz9mY2VmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2lnbmVycyhzaWduZXJPck11bHRpc2lnLCBtdWx0aVNpZ25lcnMpIHtcbiAgICByZXR1cm4gc2lnbmVyT3JNdWx0aXNpZyBpbnN0YW5jZW9mIFB1YmxpY0tleVxuICAgICAgICA/IFtzaWduZXJPck11bHRpc2lnLCBtdWx0aVNpZ25lcnNdXG4gICAgICAgIDogW3NpZ25lck9yTXVsdGlzaWcucHVibGljS2V5LCBbc2lnbmVyT3JNdWx0aXNpZ11dO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/internal.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/mintTo.js":
/*!******************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/mintTo.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mintTo\": function() { return /* binding */ mintTo; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_mintTo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/mintTo.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Mint tokens to an account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           Mint for the account\n * @param destination    Address of the account to mint to\n * @param authority      Minting authority\n * @param amount         Amount to mint\n * @param multiSigners   Signing accounts if `authority` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function mintTo(connection, payer, mint, destination, authority, amount, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_mintTo_js__WEBPACK_IMPORTED_MODULE_3__.createMintToInstruction)(mint, destination, authorityPublicKey, amount, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=mintTo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL21pbnRUby5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RTtBQUN0QjtBQUNpQjtBQUN6QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw4SEFBOEgsMkRBQWdCO0FBQ3JKLDBDQUEwQyx3REFBVTtBQUNwRCw0QkFBNEIsd0RBQVcsT0FBTyxnRkFBdUI7QUFDckUsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvbWludFRvLmpzPzEyYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVNaW50VG9JbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy9taW50VG8uanMnO1xuaW1wb3J0IHsgZ2V0U2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuLyoqXG4gKiBNaW50IHRva2VucyB0byBhbiBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBNaW50IGZvciB0aGUgYWNjb3VudFxuICogQHBhcmFtIGRlc3RpbmF0aW9uICAgIEFkZHJlc3Mgb2YgdGhlIGFjY291bnQgdG8gbWludCB0b1xuICogQHBhcmFtIGF1dGhvcml0eSAgICAgIE1pbnRpbmcgYXV0aG9yaXR5XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgICAgQW1vdW50IHRvIG1pbnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBhdXRob3JpdHlgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaW50VG8oY29ubmVjdGlvbiwgcGF5ZXIsIG1pbnQsIGRlc3RpbmF0aW9uLCBhdXRob3JpdHksIGFtb3VudCwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW2F1dGhvcml0eVB1YmxpY0tleSwgc2lnbmVyc10gPSBnZXRTaWduZXJzKGF1dGhvcml0eSwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVNaW50VG9JbnN0cnVjdGlvbihtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5UHVibGljS2V5LCBhbW91bnQsIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pbnRUby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/mintTo.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/mintToChecked.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/mintToChecked.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mintToChecked\": function() { return /* binding */ mintToChecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_mintToChecked_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/mintToChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Mint tokens to an account, asserting the token mint and decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           Mint for the account\n * @param destination    Address of the account to mint to\n * @param authority      Minting authority\n * @param amount         Amount to mint\n * @param decimals       Number of decimals in amount to mint\n * @param multiSigners   Signing accounts if `authority` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function mintToChecked(connection, payer, mint, destination, authority, amount, decimals, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_mintToChecked_js__WEBPACK_IMPORTED_MODULE_3__.createMintToCheckedInstruction)(mint, destination, authorityPublicKey, amount, decimals, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=mintToChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL21pbnRUb0NoZWNrZWQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUU7QUFDdEI7QUFDK0I7QUFDdkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrSUFBK0ksMkRBQWdCO0FBQ3RLLDBDQUEwQyx3REFBVTtBQUNwRCw0QkFBNEIsd0RBQVcsT0FBTyw4RkFBOEI7QUFDNUUsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvbWludFRvQ2hlY2tlZC5qcz8wNmFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlTWludFRvQ2hlY2tlZEluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL21pbnRUb0NoZWNrZWQuanMnO1xuaW1wb3J0IHsgZ2V0U2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuLyoqXG4gKiBNaW50IHRva2VucyB0byBhbiBhY2NvdW50LCBhc3NlcnRpbmcgdGhlIHRva2VuIG1pbnQgYW5kIGRlY2ltYWxzXG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBNaW50IGZvciB0aGUgYWNjb3VudFxuICogQHBhcmFtIGRlc3RpbmF0aW9uICAgIEFkZHJlc3Mgb2YgdGhlIGFjY291bnQgdG8gbWludCB0b1xuICogQHBhcmFtIGF1dGhvcml0eSAgICAgIE1pbnRpbmcgYXV0aG9yaXR5XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgICAgQW1vdW50IHRvIG1pbnRcbiAqIEBwYXJhbSBkZWNpbWFscyAgICAgICBOdW1iZXIgb2YgZGVjaW1hbHMgaW4gYW1vdW50IHRvIG1pbnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBhdXRob3JpdHlgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaW50VG9DaGVja2VkKGNvbm5lY3Rpb24sIHBheWVyLCBtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5LCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbYXV0aG9yaXR5UHVibGljS2V5LCBzaWduZXJzXSA9IGdldFNpZ25lcnMoYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZU1pbnRUb0NoZWNrZWRJbnN0cnVjdGlvbihtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5UHVibGljS2V5LCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMsIHByb2dyYW1JZCkpO1xuICAgIHJldHVybiBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIC4uLnNpZ25lcnNdLCBjb25maXJtT3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taW50VG9DaGVja2VkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/mintToChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/revoke.js":
/*!******************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/revoke.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"revoke\": function() { return /* binding */ revoke; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_revoke_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/revoke.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/revoke.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Revoke approval for the transfer of tokens from an account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Address of the token account\n * @param owner          Owner of the account\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function revoke(connection, payer, account, owner, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_revoke_js__WEBPACK_IMPORTED_MODULE_3__.createRevokeInstruction)(account, ownerPublicKey, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=revoke.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3Jldm9rZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RTtBQUN0QjtBQUNpQjtBQUN6QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdHQUF3RywyREFBZ0I7QUFDL0gsc0NBQXNDLHdEQUFVO0FBQ2hELDRCQUE0Qix3REFBVyxPQUFPLGdGQUF1QjtBQUNyRSxpQkFBaUIsMEVBQXlCO0FBQzFDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy9yZXZva2UuanM/ZTQ1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZVJldm9rZUluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL3Jldm9rZS5qcyc7XG5pbXBvcnQgeyBnZXRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG4vKipcbiAqIFJldm9rZSBhcHByb3ZhbCBmb3IgdGhlIHRyYW5zZmVyIG9mIHRva2VucyBmcm9tIGFuIGFjY291bnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIGFjY291bnQgICAgICAgIEFkZHJlc3Mgb2YgdGhlIHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICBPd25lciBvZiB0aGUgYWNjb3VudFxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYG93bmVyYCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBTaWduYXR1cmUgb2YgdGhlIGNvbmZpcm1lZCB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmV2b2tlKGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBvd25lciwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW293bmVyUHVibGljS2V5LCBzaWduZXJzXSA9IGdldFNpZ25lcnMob3duZXIsIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlUmV2b2tlSW5zdHJ1Y3Rpb24oYWNjb3VudCwgb3duZXJQdWJsaWNLZXksIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJldm9rZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/revoke.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/setAuthority.js":
/*!************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/setAuthority.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setAuthority\": function() { return /* binding */ setAuthority; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_setAuthority_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/setAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Assign a new authority to the account\n *\n * @param connection       Connection to use\n * @param payer            Payer of the transaction fees\n * @param account          Address of the account\n * @param currentAuthority Current authority of the specified type\n * @param authorityType    Type of authority to set\n * @param newAuthority     New authority of the account\n * @param multiSigners     Signing accounts if `currentAuthority` is a multisig\n * @param confirmOptions   Options for confirming the transaction\n * @param programId        SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function setAuthority(connection, payer, account, currentAuthority, authorityType, newAuthority, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [currentAuthorityPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(currentAuthority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_setAuthority_js__WEBPACK_IMPORTED_MODULE_3__.createSetAuthorityInstruction)(account, currentAuthorityPublicKey, authorityType, newAuthority, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=setAuthority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3NldEF1dGhvcml0eS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RTtBQUN0QjtBQUM2QjtBQUNyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzSkFBc0osMkRBQWdCO0FBQzdLLGlEQUFpRCx3REFBVTtBQUMzRCw0QkFBNEIsd0RBQVcsT0FBTyw0RkFBNkI7QUFDM0UsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvc2V0QXV0aG9yaXR5LmpzP2YxNGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVTZXRBdXRob3JpdHlJbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy9zZXRBdXRob3JpdHkuanMnO1xuaW1wb3J0IHsgZ2V0U2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuLyoqXG4gKiBBc3NpZ24gYSBuZXcgYXV0aG9yaXR5IHRvIHRoZSBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgICBBZGRyZXNzIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gY3VycmVudEF1dGhvcml0eSBDdXJyZW50IGF1dGhvcml0eSBvZiB0aGUgc3BlY2lmaWVkIHR5cGVcbiAqIEBwYXJhbSBhdXRob3JpdHlUeXBlICAgIFR5cGUgb2YgYXV0aG9yaXR5IHRvIHNldFxuICogQHBhcmFtIG5ld0F1dGhvcml0eSAgICAgTmV3IGF1dGhvcml0eSBvZiB0aGUgYWNjb3VudFxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgICAgU2lnbmluZyBhY2NvdW50cyBpZiBgY3VycmVudEF1dGhvcml0eWAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zICAgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRBdXRob3JpdHkoY29ubmVjdGlvbiwgcGF5ZXIsIGFjY291bnQsIGN1cnJlbnRBdXRob3JpdHksIGF1dGhvcml0eVR5cGUsIG5ld0F1dGhvcml0eSwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW2N1cnJlbnRBdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhjdXJyZW50QXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZVNldEF1dGhvcml0eUluc3RydWN0aW9uKGFjY291bnQsIGN1cnJlbnRBdXRob3JpdHlQdWJsaWNLZXksIGF1dGhvcml0eVR5cGUsIG5ld0F1dGhvcml0eSwgbXVsdGlTaWduZXJzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCAuLi5zaWduZXJzXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V0QXV0aG9yaXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/setAuthority.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/syncNative.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/syncNative.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"syncNative\": function() { return /* binding */ syncNative; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_syncNative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instructions/syncNative.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js\");\n\n\n\n/**\n * Sync the balance of a native SPL token account to the underlying system account's lamports\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Native account to sync\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function syncNative(connection, payer, account, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_syncNative_js__WEBPACK_IMPORTED_MODULE_2__.createSyncNativeInstruction)(account, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n}\n//# sourceMappingURL=syncNative.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3N5bmNOYXRpdmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RTtBQUN0QjtBQUN5QjtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0ZBQWtGLDJEQUFnQjtBQUN6Ryw0QkFBNEIsd0RBQVcsT0FBTyx3RkFBMkI7QUFDekUsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvc3luY05hdGl2ZS5qcz9mMDE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlU3luY05hdGl2ZUluc3RydWN0aW9uIH0gZnJvbSAnLi4vaW5zdHJ1Y3Rpb25zL3N5bmNOYXRpdmUuanMnO1xuLyoqXG4gKiBTeW5jIHRoZSBiYWxhbmNlIG9mIGEgbmF0aXZlIFNQTCB0b2tlbiBhY2NvdW50IHRvIHRoZSB1bmRlcmx5aW5nIHN5c3RlbSBhY2NvdW50J3MgbGFtcG9ydHNcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIGFjY291bnQgICAgICAgIE5hdGl2ZSBhY2NvdW50IHRvIHN5bmNcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzeW5jTmF0aXZlKGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZVN5bmNOYXRpdmVJbnN0cnVjdGlvbihhY2NvdW50LCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3luY05hdGl2ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/syncNative.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/thawAccount.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/thawAccount.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"thawAccount\": function() { return /* binding */ thawAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_thawAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/thawAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Thaw (unfreeze) a token account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to thaw\n * @param mint           Mint for the account\n * @param authority      Mint freeze authority\n * @param multiSigners   Signing accounts if `authority` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function thawAccount(connection, payer, account, mint, authority, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_thawAccount_js__WEBPACK_IMPORTED_MODULE_3__.createThawAccountInstruction)(account, mint, authorityPublicKey, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=thawAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3RoYXdBY2NvdW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlFO0FBQ3RCO0FBQzJCO0FBQ25DO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1SEFBdUgsMkRBQWdCO0FBQzlJLDBDQUEwQyx3REFBVTtBQUNwRCw0QkFBNEIsd0RBQVcsT0FBTywwRkFBNEI7QUFDMUUsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvdGhhd0FjY291bnQuanM/MjdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZVRoYXdBY2NvdW50SW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvdGhhd0FjY291bnQuanMnO1xuaW1wb3J0IHsgZ2V0U2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuLyoqXG4gKiBUaGF3ICh1bmZyZWV6ZSkgYSB0b2tlbiBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICBBY2NvdW50IHRvIHRoYXdcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBNaW50IGZvciB0aGUgYWNjb3VudFxuICogQHBhcmFtIGF1dGhvcml0eSAgICAgIE1pbnQgZnJlZXplIGF1dGhvcml0eVxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYGF1dGhvcml0eWAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRoYXdBY2NvdW50KGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBtaW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycyA9IFtdLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IFthdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhhdXRob3JpdHksIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlVGhhd0FjY291bnRJbnN0cnVjdGlvbihhY2NvdW50LCBtaW50LCBhdXRob3JpdHlQdWJsaWNLZXksIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRoYXdBY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/thawAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/transfer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/transfer.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transfer\": function() { return /* binding */ transfer; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_transfer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/transfer.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/transfer.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Transfer tokens from one account to another\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param source         Source account\n * @param destination    Destination account\n * @param owner          Owner of the source account\n * @param amount         Number of tokens to transfer\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function transfer(connection, payer, source, destination, owner, amount, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_transfer_js__WEBPACK_IMPORTED_MODULE_3__.createTransferInstruction)(source, destination, ownerPublicKey, amount, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=transfer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3RyYW5zZmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlFO0FBQ3RCO0FBQ3FCO0FBQzdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhIQUE4SCwyREFBZ0I7QUFDckosc0NBQXNDLHdEQUFVO0FBQ2hELDRCQUE0Qix3REFBVyxPQUFPLG9GQUF5QjtBQUN2RSxpQkFBaUIsMEVBQXlCO0FBQzFDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vYWN0aW9ucy90cmFuc2Zlci5qcz8wMGI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlVHJhbnNmZXJJbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy90cmFuc2Zlci5qcyc7XG5pbXBvcnQgeyBnZXRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG4vKipcbiAqIFRyYW5zZmVyIHRva2VucyBmcm9tIG9uZSBhY2NvdW50IHRvIGFub3RoZXJcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIHNvdXJjZSAgICAgICAgIFNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gZGVzdGluYXRpb24gICAgRGVzdGluYXRpb24gYWNjb3VudFxuICogQHBhcmFtIG93bmVyICAgICAgICAgIE93bmVyIG9mIHRoZSBzb3VyY2UgYWNjb3VudFxuICogQHBhcmFtIGFtb3VudCAgICAgICAgIE51bWJlciBvZiB0b2tlbnMgdG8gdHJhbnNmZXJcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRyYW5zZmVyKGNvbm5lY3Rpb24sIHBheWVyLCBzb3VyY2UsIGRlc3RpbmF0aW9uLCBvd25lciwgYW1vdW50LCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVUcmFuc2Zlckluc3RydWN0aW9uKHNvdXJjZSwgZGVzdGluYXRpb24sIG93bmVyUHVibGljS2V5LCBhbW91bnQsIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zZmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/transfer.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/transferChecked.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/transferChecked.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transferChecked\": function() { return /* binding */ transferChecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_transferChecked_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/transferChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n\n\n\n\n/**\n * Transfer tokens from one account to another, asserting the token mint and decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param source         Source account\n * @param mint           Mint for the account\n * @param destination    Destination account\n * @param owner          Owner of the source account\n * @param amount         Number of tokens to transfer\n * @param decimals       Number of decimals in transfer amount\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function transferChecked(connection, payer, source, mint, destination, owner, amount, decimals, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_transferChecked_js__WEBPACK_IMPORTED_MODULE_3__.createTransferCheckedInstruction)(source, mint, destination, ownerPublicKey, amount, decimals, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=transferChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3RyYW5zZmVyQ2hlY2tlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RTtBQUN0QjtBQUNtQztBQUMzQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUpBQXFKLDJEQUFnQjtBQUM1SyxzQ0FBc0Msd0RBQVU7QUFDaEQsNEJBQTRCLHdEQUFXLE9BQU8sa0dBQWdDO0FBQzlFLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3RyYW5zZmVyQ2hlY2tlZC5qcz82ZDJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlVHJhbnNmZXJDaGVja2VkSW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi9pbnN0cnVjdGlvbnMvdHJhbnNmZXJDaGVja2VkLmpzJztcbmltcG9ydCB7IGdldFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbi8qKlxuICogVHJhbnNmZXIgdG9rZW5zIGZyb20gb25lIGFjY291bnQgdG8gYW5vdGhlciwgYXNzZXJ0aW5nIHRoZSB0b2tlbiBtaW50IGFuZCBkZWNpbWFsc1xuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gc291cmNlICAgICAgICAgU291cmNlIGFjY291bnRcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBNaW50IGZvciB0aGUgYWNjb3VudFxuICogQHBhcmFtIGRlc3RpbmF0aW9uICAgIERlc3RpbmF0aW9uIGFjY291bnRcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICBPd25lciBvZiB0aGUgc291cmNlIGFjY291bnRcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgICBOdW1iZXIgb2YgdG9rZW5zIHRvIHRyYW5zZmVyXG4gKiBAcGFyYW0gZGVjaW1hbHMgICAgICAgTnVtYmVyIG9mIGRlY2ltYWxzIGluIHRyYW5zZmVyIGFtb3VudFxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYG93bmVyYCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBTaWduYXR1cmUgb2YgdGhlIGNvbmZpcm1lZCB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdHJhbnNmZXJDaGVja2VkKGNvbm5lY3Rpb24sIHBheWVyLCBzb3VyY2UsIG1pbnQsIGRlc3RpbmF0aW9uLCBvd25lciwgYW1vdW50LCBkZWNpbWFscywgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW293bmVyUHVibGljS2V5LCBzaWduZXJzXSA9IGdldFNpZ25lcnMob3duZXIsIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlVHJhbnNmZXJDaGVja2VkSW5zdHJ1Y3Rpb24oc291cmNlLCBtaW50LCBkZXN0aW5hdGlvbiwgb3duZXJQdWJsaWNLZXksIGFtb3VudCwgZGVjaW1hbHMsIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zZmVyQ2hlY2tlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/transferChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/actions/uiAmountToAmount.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/actions/uiAmountToAmount.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"uiAmountToAmount\": function() { return /* binding */ uiAmountToAmount; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instructions/uiAmountToAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n/**\n * Amount as a string using mint-prescribed decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           Mint for the account\n * @param amount         Ui Amount of tokens to be converted to Amount\n * @param programId      SPL Token program account\n *\n * @return Ui Amount generated\n */\nasync function uiAmountToAmount(connection, payer, mint, amount, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Transaction().add((0,_instructions_uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_3__.createUiAmountToAmountInstruction)(mint, amount, programId));\n    const { returnData, err } = (await connection.simulateTransaction(transaction, [payer], false)).value;\n    if (returnData) {\n        const data = Buffer.from(returnData.data[0], returnData.data[1]);\n        return (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_0__.u64)().decode(data);\n    }\n    return err;\n}\n//# sourceMappingURL=uiAmountToAmount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9hY3Rpb25zL3VpQW1vdW50VG9BbW91bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtEO0FBQ0o7QUFDSztBQUNxQztBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkVBQTZFLDJEQUFnQjtBQUNwRyw0QkFBNEIsd0RBQVcsT0FBTyxvR0FBaUM7QUFDL0UsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQSxxQkFBcUIsTUFBTTtBQUMzQixlQUFlLGdFQUFHO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2FjdGlvbnMvdWlBbW91bnRUb0Ftb3VudC5qcz9lYjRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU2NCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZVVpQW1vdW50VG9BbW91bnRJbnN0cnVjdGlvbiB9IGZyb20gJy4uL2luc3RydWN0aW9ucy91aUFtb3VudFRvQW1vdW50LmpzJztcbi8qKlxuICogQW1vdW50IGFzIGEgc3RyaW5nIHVzaW5nIG1pbnQtcHJlc2NyaWJlZCBkZWNpbWFsc1xuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgTWludCBmb3IgdGhlIGFjY291bnRcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgICBVaSBBbW91bnQgb2YgdG9rZW5zIHRvIGJlIGNvbnZlcnRlZCB0byBBbW91bnRcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBVaSBBbW91bnQgZ2VuZXJhdGVkXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1aUFtb3VudFRvQW1vdW50KGNvbm5lY3Rpb24sIHBheWVyLCBtaW50LCBhbW91bnQsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVVaUFtb3VudFRvQW1vdW50SW5zdHJ1Y3Rpb24obWludCwgYW1vdW50LCBwcm9ncmFtSWQpKTtcbiAgICBjb25zdCB7IHJldHVybkRhdGEsIGVyciB9ID0gKGF3YWl0IGNvbm5lY3Rpb24uc2ltdWxhdGVUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgW3BheWVyXSwgZmFsc2UpKS52YWx1ZTtcbiAgICBpZiAocmV0dXJuRGF0YSkge1xuICAgICAgICBjb25zdCBkYXRhID0gQnVmZmVyLmZyb20ocmV0dXJuRGF0YS5kYXRhWzBdLCByZXR1cm5EYXRhLmRhdGFbMV0pO1xuICAgICAgICByZXR1cm4gdTY0KCkuZGVjb2RlKGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZXJyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWlBbW91bnRUb0Ftb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/actions/uiAmountToAmount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/constants.js":
/*!*************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/constants.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TOKEN_PROGRAM_ID\": function() { return /* binding */ TOKEN_PROGRAM_ID; },\n/* harmony export */   \"TOKEN_2022_PROGRAM_ID\": function() { return /* binding */ TOKEN_2022_PROGRAM_ID; },\n/* harmony export */   \"ASSOCIATED_TOKEN_PROGRAM_ID\": function() { return /* binding */ ASSOCIATED_TOKEN_PROGRAM_ID; },\n/* harmony export */   \"NATIVE_MINT\": function() { return /* binding */ NATIVE_MINT; },\n/* harmony export */   \"NATIVE_MINT_2022\": function() { return /* binding */ NATIVE_MINT_2022; },\n/* harmony export */   \"programSupportsExtensions\": function() { return /* binding */ programSupportsExtensions; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n\n/** Address of the SPL Token program */\nconst TOKEN_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nconst TOKEN_2022_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nconst ASSOCIATED_TOKEN_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nconst NATIVE_MINT = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nconst NATIVE_MINT_2022 = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nfunction programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE0QztBQUM1QztBQUNPLDZCQUE2QixzREFBUztBQUM3QztBQUNPLGtDQUFrQyxzREFBUztBQUNsRDtBQUNPLHdDQUF3QyxzREFBUztBQUN4RDtBQUNPLHdCQUF3QixzREFBUztBQUN4QztBQUNPLDZCQUE2QixzREFBUztBQUM3QztBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9jb25zdGFudHMuanM/MGVhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuLyoqIEFkZHJlc3Mgb2YgdGhlIFNQTCBUb2tlbiBwcm9ncmFtICovXG5leHBvcnQgY29uc3QgVE9LRU5fUFJPR1JBTV9JRCA9IG5ldyBQdWJsaWNLZXkoJ1Rva2Vua2VnUWZlWnlpTndBSmJOYkdLUEZYQ1d1QnZmOVNzNjIzVlE1REEnKTtcbi8qKiBBZGRyZXNzIG9mIHRoZSBTUEwgVG9rZW4gMjAyMiBwcm9ncmFtICovXG5leHBvcnQgY29uc3QgVE9LRU5fMjAyMl9QUk9HUkFNX0lEID0gbmV3IFB1YmxpY0tleSgnVG9rZW56UWRCTmJMcVA1VkVoZGtBUzZFUEZMQzFQSG5CcUNYRXBQeHVFYicpO1xuLyoqIEFkZHJlc3Mgb2YgdGhlIFNQTCBBc3NvY2lhdGVkIFRva2VuIEFjY291bnQgcHJvZ3JhbSAqL1xuZXhwb3J0IGNvbnN0IEFTU09DSUFURURfVE9LRU5fUFJPR1JBTV9JRCA9IG5ldyBQdWJsaWNLZXkoJ0FUb2tlbkdQdmJkR1Z4cjFiMmh2WmJzaXFXNXhXSDI1ZWZUTnNMSkE4a25MJyk7XG4vKiogQWRkcmVzcyBvZiB0aGUgc3BlY2lhbCBtaW50IGZvciB3cmFwcGVkIG5hdGl2ZSBTT0wgaW4gc3BsLXRva2VuICovXG5leHBvcnQgY29uc3QgTkFUSVZFX01JTlQgPSBuZXcgUHVibGljS2V5KCdTbzExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEyJyk7XG4vKiogQWRkcmVzcyBvZiB0aGUgc3BlY2lhbCBtaW50IGZvciB3cmFwcGVkIG5hdGl2ZSBTT0wgaW4gc3BsLXRva2VuLTIwMjIgKi9cbmV4cG9ydCBjb25zdCBOQVRJVkVfTUlOVF8yMDIyID0gbmV3IFB1YmxpY0tleSgnOXBhbjliTW41SGF0WDRFSmRCd2c5VmdDYTdVejVITDhOMW01RDNOZFhlalAnKTtcbi8qKiBDaGVjayB0aGF0IHRoZSB0b2tlbiBwcm9ncmFtIHByb3ZpZGVkIGlzIG5vdCBgVG9rZW5rZWcuLi5gLCB1c2VmdWwgd2hlbiB1c2luZyBleHRlbnNpb25zICovXG5leHBvcnQgZnVuY3Rpb24gcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucyhwcm9ncmFtSWQpIHtcbiAgICBpZiAocHJvZ3JhbUlkID09PSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/constants.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/errors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/errors.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TokenError\": function() { return /* binding */ TokenError; },\n/* harmony export */   \"TokenAccountNotFoundError\": function() { return /* binding */ TokenAccountNotFoundError; },\n/* harmony export */   \"TokenInvalidAccountError\": function() { return /* binding */ TokenInvalidAccountError; },\n/* harmony export */   \"TokenInvalidAccountOwnerError\": function() { return /* binding */ TokenInvalidAccountOwnerError; },\n/* harmony export */   \"TokenInvalidAccountSizeError\": function() { return /* binding */ TokenInvalidAccountSizeError; },\n/* harmony export */   \"TokenInvalidMintError\": function() { return /* binding */ TokenInvalidMintError; },\n/* harmony export */   \"TokenInvalidOwnerError\": function() { return /* binding */ TokenInvalidOwnerError; },\n/* harmony export */   \"TokenOwnerOffCurveError\": function() { return /* binding */ TokenOwnerOffCurveError; },\n/* harmony export */   \"TokenInvalidInstructionProgramError\": function() { return /* binding */ TokenInvalidInstructionProgramError; },\n/* harmony export */   \"TokenInvalidInstructionKeysError\": function() { return /* binding */ TokenInvalidInstructionKeysError; },\n/* harmony export */   \"TokenInvalidInstructionDataError\": function() { return /* binding */ TokenInvalidInstructionDataError; },\n/* harmony export */   \"TokenInvalidInstructionTypeError\": function() { return /* binding */ TokenInvalidInstructionTypeError; },\n/* harmony export */   \"TokenUnsupportedInstructionError\": function() { return /* binding */ TokenUnsupportedInstructionError; }\n/* harmony export */ });\n/** Base class for errors */\nclass TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nclass TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nclass TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nclass TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nclass TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nclass TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nclass TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nclass TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nclass TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nclass TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nclass TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nclass TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nclass TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9lcnJvcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2Vycm9ycy5qcz80Mjc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBCYXNlIGNsYXNzIGZvciBlcnJvcnMgKi9cbmV4cG9ydCBjbGFzcyBUb2tlbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgfVxufVxuLyoqIFRocm93biBpZiBhbiBhY2NvdW50IGlzIG5vdCBmb3VuZCBhdCB0aGUgZXhwZWN0ZWQgYWRkcmVzcyAqL1xuZXhwb3J0IGNsYXNzIFRva2VuQWNjb3VudE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBUb2tlbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Rva2VuQWNjb3VudE5vdEZvdW5kRXJyb3InO1xuICAgIH1cbn1cbi8qKiBUaHJvd24gaWYgYSBwcm9ncmFtIHN0YXRlIGFjY291bnQgaXMgbm90IGEgdmFsaWQgQWNjb3VudCAqL1xuZXhwb3J0IGNsYXNzIFRva2VuSW52YWxpZEFjY291bnRFcnJvciBleHRlbmRzIFRva2VuRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnVG9rZW5JbnZhbGlkQWNjb3VudEVycm9yJztcbiAgICB9XG59XG4vKiogVGhyb3duIGlmIGEgcHJvZ3JhbSBzdGF0ZSBhY2NvdW50IGlzIG5vdCBvd25lZCBieSB0aGUgZXhwZWN0ZWQgdG9rZW4gcHJvZ3JhbSAqL1xuZXhwb3J0IGNsYXNzIFRva2VuSW52YWxpZEFjY291bnRPd25lckVycm9yIGV4dGVuZHMgVG9rZW5FcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUb2tlbkludmFsaWRBY2NvdW50T3duZXJFcnJvcic7XG4gICAgfVxufVxuLyoqIFRocm93biBpZiB0aGUgYnl0ZSBsZW5ndGggb2YgYW4gcHJvZ3JhbSBzdGF0ZSBhY2NvdW50IGRvZXNuJ3QgbWF0Y2ggdGhlIGV4cGVjdGVkIHNpemUgKi9cbmV4cG9ydCBjbGFzcyBUb2tlbkludmFsaWRBY2NvdW50U2l6ZUVycm9yIGV4dGVuZHMgVG9rZW5FcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUb2tlbkludmFsaWRBY2NvdW50U2l6ZUVycm9yJztcbiAgICB9XG59XG4vKiogVGhyb3duIGlmIHRoZSBtaW50IG9mIGEgdG9rZW4gYWNjb3VudCBkb2Vzbid0IG1hdGNoIHRoZSBleHBlY3RlZCBtaW50ICovXG5leHBvcnQgY2xhc3MgVG9rZW5JbnZhbGlkTWludEVycm9yIGV4dGVuZHMgVG9rZW5FcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUb2tlbkludmFsaWRNaW50RXJyb3InO1xuICAgIH1cbn1cbi8qKiBUaHJvd24gaWYgdGhlIG93bmVyIG9mIGEgdG9rZW4gYWNjb3VudCBkb2Vzbid0IG1hdGNoIHRoZSBleHBlY3RlZCBvd25lciAqL1xuZXhwb3J0IGNsYXNzIFRva2VuSW52YWxpZE93bmVyRXJyb3IgZXh0ZW5kcyBUb2tlbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Rva2VuSW52YWxpZE93bmVyRXJyb3InO1xuICAgIH1cbn1cbi8qKiBUaHJvd24gaWYgdGhlIG93bmVyIG9mIGEgdG9rZW4gYWNjb3VudCBpcyBhIFBEQSAoUHJvZ3JhbSBEZXJpdmVkIEFkZHJlc3MpICovXG5leHBvcnQgY2xhc3MgVG9rZW5Pd25lck9mZkN1cnZlRXJyb3IgZXh0ZW5kcyBUb2tlbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Rva2VuT3duZXJPZmZDdXJ2ZUVycm9yJztcbiAgICB9XG59XG4vKiogVGhyb3duIGlmIGFuIGluc3RydWN0aW9uJ3MgcHJvZ3JhbSBpcyBpbnZhbGlkICovXG5leHBvcnQgY2xhc3MgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IgZXh0ZW5kcyBUb2tlbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Rva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yJztcbiAgICB9XG59XG4vKiogVGhyb3duIGlmIGFuIGluc3RydWN0aW9uJ3Mga2V5cyBhcmUgaW52YWxpZCAqL1xuZXhwb3J0IGNsYXNzIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yIGV4dGVuZHMgVG9rZW5FcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcic7XG4gICAgfVxufVxuLyoqIFRocm93biBpZiBhbiBpbnN0cnVjdGlvbidzIGRhdGEgaXMgaW52YWxpZCAqL1xuZXhwb3J0IGNsYXNzIFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yIGV4dGVuZHMgVG9rZW5FcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvcic7XG4gICAgfVxufVxuLyoqIFRocm93biBpZiBhbiBpbnN0cnVjdGlvbidzIHR5cGUgaXMgaW52YWxpZCAqL1xuZXhwb3J0IGNsYXNzIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yIGV4dGVuZHMgVG9rZW5FcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcic7XG4gICAgfVxufVxuLyoqIFRocm93biBpZiB0aGUgcHJvZ3JhbSBkb2VzIG5vdCBzdXBwb3J0IHRoZSBkZXNpcmVkIGluc3RydWN0aW9uICovXG5leHBvcnQgY2xhc3MgVG9rZW5VbnN1cHBvcnRlZEluc3RydWN0aW9uRXJyb3IgZXh0ZW5kcyBUb2tlbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Rva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yJztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/errors.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountType\": function() { return /* binding */ AccountType; },\n/* harmony export */   \"ACCOUNT_TYPE_SIZE\": function() { return /* binding */ ACCOUNT_TYPE_SIZE; }\n/* harmony export */ });\nvar AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nconst ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2FjY291bnRUeXBlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQzVCO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9hY2NvdW50VHlwZS5qcz9jNjMzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQWNjb3VudFR5cGU7XG4oZnVuY3Rpb24gKEFjY291bnRUeXBlKSB7XG4gICAgQWNjb3VudFR5cGVbQWNjb3VudFR5cGVbXCJVbmluaXRpYWxpemVkXCJdID0gMF0gPSBcIlVuaW5pdGlhbGl6ZWRcIjtcbiAgICBBY2NvdW50VHlwZVtBY2NvdW50VHlwZVtcIk1pbnRcIl0gPSAxXSA9IFwiTWludFwiO1xuICAgIEFjY291bnRUeXBlW0FjY291bnRUeXBlW1wiQWNjb3VudFwiXSA9IDJdID0gXCJBY2NvdW50XCI7XG59KShBY2NvdW50VHlwZSB8fCAoQWNjb3VudFR5cGUgPSB7fSkpO1xuZXhwb3J0IGNvbnN0IEFDQ09VTlRfVFlQRV9TSVpFID0gMTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY291bnRUeXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/actions.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/actions.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enableCpiGuard\": function() { return /* binding */ enableCpiGuard; },\n/* harmony export */   \"disableCpiGuard\": function() { return /* binding */ disableCpiGuard; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _actions_internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/instructions.js\");\n\n\n\n\n/**\n * Enable CPI Guard on the given account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to modify\n * @param owner          Owner of the account\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function enableCpiGuard(connection, payer, account, owner, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createEnableCpiGuardInstruction)(account, ownerPublicKey, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n/**\n * Disable CPI Guard on the given account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to modify\n * @param owner          Owner of the account\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function disableCpiGuard(connection, payer, account, owner, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createDisableCpiGuardInstruction)(account, ownerPublicKey, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=actions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2NwaUd1YXJkL2FjdGlvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlFO0FBQ2xCO0FBQ0k7QUFDMkM7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnSEFBZ0gsZ0VBQXFCO0FBQzVJLHNDQUFzQyxnRUFBVTtBQUNoRCw0QkFBNEIsd0RBQVcsT0FBTyxpRkFBK0I7QUFDN0UsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUhBQWlILGdFQUFxQjtBQUM3SSxzQ0FBc0MsZ0VBQVU7QUFDaEQsNEJBQTRCLHdEQUFXLE9BQU8sa0ZBQWdDO0FBQzlFLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2NwaUd1YXJkL2FjdGlvbnMuanM/OTIwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBnZXRTaWduZXJzIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUT0tFTl8yMDIyX1BST0dSQU1fSUQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlRGlzYWJsZUNwaUd1YXJkSW5zdHJ1Y3Rpb24sIGNyZWF0ZUVuYWJsZUNwaUd1YXJkSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL2luc3RydWN0aW9ucy5qcyc7XG4vKipcbiAqIEVuYWJsZSBDUEkgR3VhcmQgb24gdGhlIGdpdmVuIGFjY291bnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIGFjY291bnQgICAgICAgIEFjY291bnQgdG8gbW9kaWZ5XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgT3duZXIgb2YgdGhlIGFjY291bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuYWJsZUNwaUd1YXJkKGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBvd25lciwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVFbmFibGVDcGlHdWFyZEluc3RydWN0aW9uKGFjY291bnQsIG93bmVyUHVibGljS2V5LCBzaWduZXJzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCAuLi5zaWduZXJzXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLyoqXG4gKiBEaXNhYmxlIENQSSBHdWFyZCBvbiB0aGUgZ2l2ZW4gYWNjb3VudFxuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgQWNjb3VudCB0byBtb2RpZnlcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICBPd25lciBvZiB0aGUgYWNjb3VudFxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYG93bmVyYCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBTaWduYXR1cmUgb2YgdGhlIGNvbmZpcm1lZCB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGlzYWJsZUNwaUd1YXJkKGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBvd25lciwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVEaXNhYmxlQ3BpR3VhcmRJbnN0cnVjdGlvbihhY2NvdW50LCBvd25lclB1YmxpY0tleSwgc2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/actions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/actions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _actions_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _actions_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/instructions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _instructions_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _instructions_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/state.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _state_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _state_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2NwaUd1YXJkL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDSztBQUNQO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvY3BpR3VhcmQvaW5kZXguanM/MDRlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FjdGlvbnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbnN0cnVjdGlvbnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zdGF0ZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/instructions.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/instructions.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CpiGuardInstruction\": function() { return /* binding */ CpiGuardInstruction; },\n/* harmony export */   \"cpiGuardInstructionData\": function() { return /* binding */ cpiGuardInstructionData; },\n/* harmony export */   \"createEnableCpiGuardInstruction\": function() { return /* binding */ createEnableCpiGuardInstruction; },\n/* harmony export */   \"createDisableCpiGuardInstruction\": function() { return /* binding */ createDisableCpiGuardInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _instructions_internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../instructions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instructions/types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\nvar CpiGuardInstruction;\n(function (CpiGuardInstruction) {\n    CpiGuardInstruction[CpiGuardInstruction[\"Enable\"] = 0] = \"Enable\";\n    CpiGuardInstruction[CpiGuardInstruction[\"Disable\"] = 1] = \"Disable\";\n})(CpiGuardInstruction || (CpiGuardInstruction = {}));\n/** TODO: docs */\nconst cpiGuardInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'), (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('cpiGuardInstruction')]);\n/**\n * Construct an EnableCpiGuard instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createEnableCpiGuardInstruction(account, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    return createCpiGuardInstruction(CpiGuardInstruction.Enable, account, authority, multiSigners, programId);\n}\n/**\n * Construct a DisableCpiGuard instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createDisableCpiGuardInstruction(account, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    return createCpiGuardInstruction(CpiGuardInstruction.Disable, account, authority, multiSigners, programId);\n}\nfunction createCpiGuardInstruction(cpiGuardInstruction, account, authority, multiSigners, programId) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([{ pubkey: account, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(cpiGuardInstructionData.span);\n    cpiGuardInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.CpiGuardExtension,\n        cpiGuardInstruction,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2NwaUd1YXJkL2luc3RydWN0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNNO0FBQzZCO0FBQ25CO0FBQ1A7QUFDRztBQUN4RDtBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0RBQWtEO0FBQ25EO0FBQ08sZ0NBQWdDLDZEQUFNLEVBQUUseURBQUUsaUJBQWlCLHlEQUFFO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNEZBQTRGLGdFQUFxQjtBQUN4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw2RkFBNkYsZ0VBQXFCO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLFNBQVMsd0VBQXlCO0FBQ2xDLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxpQkFBaUIscUVBQVUsSUFBSSxvREFBb0Q7QUFDbkYsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsc0ZBQWtDO0FBQ3ZEO0FBQ0EsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9jcGlHdWFyZC9pbnN0cnVjdGlvbnMuanM/YmJlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucywgVE9LRU5fMjAyMl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yIH0gZnJvbSAnLi4vLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuLi8uLi9pbnN0cnVjdGlvbnMvaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4uLy4uL2luc3RydWN0aW9ucy90eXBlcy5qcyc7XG5leHBvcnQgdmFyIENwaUd1YXJkSW5zdHJ1Y3Rpb247XG4oZnVuY3Rpb24gKENwaUd1YXJkSW5zdHJ1Y3Rpb24pIHtcbiAgICBDcGlHdWFyZEluc3RydWN0aW9uW0NwaUd1YXJkSW5zdHJ1Y3Rpb25bXCJFbmFibGVcIl0gPSAwXSA9IFwiRW5hYmxlXCI7XG4gICAgQ3BpR3VhcmRJbnN0cnVjdGlvbltDcGlHdWFyZEluc3RydWN0aW9uW1wiRGlzYWJsZVwiXSA9IDFdID0gXCJEaXNhYmxlXCI7XG59KShDcGlHdWFyZEluc3RydWN0aW9uIHx8IChDcGlHdWFyZEluc3RydWN0aW9uID0ge30pKTtcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgY3BpR3VhcmRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW3U4KCdpbnN0cnVjdGlvbicpLCB1OCgnY3BpR3VhcmRJbnN0cnVjdGlvbicpXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBFbmFibGVDcGlHdWFyZCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICAgVG9rZW4gYWNjb3VudCB0byB1cGRhdGVcbiAqIEBwYXJhbSBhdXRob3JpdHkgICAgICAgVGhlIGFjY291bnQncyBvd25lci9kZWxlZ2F0ZVxuICogQHBhcmFtIHNpZ25lcnMgICAgICAgICBUaGUgc2lnbmVyIGFjY291bnQocylcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVuYWJsZUNwaUd1YXJkSW5zdHJ1Y3Rpb24oYWNjb3VudCwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fMjAyMl9QUk9HUkFNX0lEKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUNwaUd1YXJkSW5zdHJ1Y3Rpb24oQ3BpR3VhcmRJbnN0cnVjdGlvbi5FbmFibGUsIGFjY291bnQsIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzLCBwcm9ncmFtSWQpO1xufVxuLyoqXG4gKiBDb25zdHJ1Y3QgYSBEaXNhYmxlQ3BpR3VhcmQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgIFRva2VuIGFjY291bnQgdG8gdXBkYXRlXG4gKiBAcGFyYW0gYXV0aG9yaXR5ICAgICAgIFRoZSBhY2NvdW50J3Mgb3duZXIvZGVsZWdhdGVcbiAqIEBwYXJhbSBzaWduZXJzICAgICAgICAgVGhlIHNpZ25lciBhY2NvdW50KHMpXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEaXNhYmxlQ3BpR3VhcmRJbnN0cnVjdGlvbihhY2NvdW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICByZXR1cm4gY3JlYXRlQ3BpR3VhcmRJbnN0cnVjdGlvbihDcGlHdWFyZEluc3RydWN0aW9uLkRpc2FibGUsIGFjY291bnQsIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzLCBwcm9ncmFtSWQpO1xufVxuZnVuY3Rpb24gY3JlYXRlQ3BpR3VhcmRJbnN0cnVjdGlvbihjcGlHdWFyZEluc3RydWN0aW9uLCBhY2NvdW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSB7XG4gICAgaWYgKCFwcm9ncmFtU3VwcG9ydHNFeHRlbnNpb25zKHByb2dyYW1JZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFt7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH1dLCBhdXRob3JpdHksIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhjcGlHdWFyZEluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBjcGlHdWFyZEluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5DcGlHdWFyZEV4dGVuc2lvbixcbiAgICAgICAgY3BpR3VhcmRJbnN0cnVjdGlvbixcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0cnVjdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/instructions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/state.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/state.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CpiGuardLayout\": function() { return /* binding */ CpiGuardLayout; },\n/* harmony export */   \"CPI_GUARD_SIZE\": function() { return /* binding */ CPI_GUARD_SIZE; },\n/* harmony export */   \"getCpiGuard\": function() { return /* binding */ getCpiGuard; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n\n/** Buffer layout for de/serializing a CPI Guard extension */\nconst CpiGuardLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.bool)('lockCpi')]);\nconst CPI_GUARD_SIZE = CpiGuardLayout.span;\nfunction getCpiGuard(account) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.CpiGuard, account.tlvData);\n    if (extensionData !== null) {\n        return CpiGuardLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2NwaUd1YXJkL3N0YXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNJO0FBQ21CO0FBQ3RFO0FBQ08sdUJBQXVCLDZEQUFNLEVBQUUsaUVBQUk7QUFDbkM7QUFDQTtBQUNQLDBCQUEwQixtRUFBZ0IsQ0FBQyxxRUFBc0I7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2NwaUd1YXJkL3N0YXRlLmpzPzExZTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IGJvb2wgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgRXh0ZW5zaW9uVHlwZSwgZ2V0RXh0ZW5zaW9uRGF0YSB9IGZyb20gJy4uL2V4dGVuc2lvblR5cGUuanMnO1xuLyoqIEJ1ZmZlciBsYXlvdXQgZm9yIGRlL3NlcmlhbGl6aW5nIGEgQ1BJIEd1YXJkIGV4dGVuc2lvbiAqL1xuZXhwb3J0IGNvbnN0IENwaUd1YXJkTGF5b3V0ID0gc3RydWN0KFtib29sKCdsb2NrQ3BpJyldKTtcbmV4cG9ydCBjb25zdCBDUElfR1VBUkRfU0laRSA9IENwaUd1YXJkTGF5b3V0LnNwYW47XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3BpR3VhcmQoYWNjb3VudCkge1xuICAgIGNvbnN0IGV4dGVuc2lvbkRhdGEgPSBnZXRFeHRlbnNpb25EYXRhKEV4dGVuc2lvblR5cGUuQ3BpR3VhcmQsIGFjY291bnQudGx2RGF0YSk7XG4gICAgaWYgKGV4dGVuc2lvbkRhdGEgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIENwaUd1YXJkTGF5b3V0LmRlY29kZShleHRlbnNpb25EYXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/state.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/actions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/actions.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeDefaultAccountState\": function() { return /* binding */ initializeDefaultAccountState; },\n/* harmony export */   \"updateDefaultAccountState\": function() { return /* binding */ updateDefaultAccountState; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _actions_internal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../actions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/instructions.js\");\n\n\n\n\n/**\n * Initialize a default account state on a mint\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint        Mint to initialize with extension\n * @param state        Account state with which to initialize new accounts\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function initializeDefaultAccountState(connection, payer, mint, state, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_2__.createInitializeDefaultAccountStateInstruction)(mint, state, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n}\n/**\n * Update the default account state on a mint\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint        Mint to modify\n * @param state        New account state to set on created accounts\n * @param freezeAuthority          Freeze authority of the mint\n * @param multiSigners   Signing accounts if `freezeAuthority` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function updateDefaultAccountState(connection, payer, mint, state, freezeAuthority, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [freezeAuthorityPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_3__.getSigners)(freezeAuthority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_2__.createUpdateDefaultAccountStateInstruction)(mint, state, freezeAuthorityPublicKey, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=actions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2RlZmF1bHRBY2NvdW50U3RhdGUvYWN0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUU7QUFDbEI7QUFDSTtBQUNxRTtBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5R0FBeUcsZ0VBQXFCO0FBQ3JJLDRCQUE0Qix3REFBVyxPQUFPLGdHQUE4QztBQUM1RixpQkFBaUIsMEVBQXlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlJQUF5SSxnRUFBcUI7QUFDckssZ0RBQWdELGdFQUFVO0FBQzFELDRCQUE0Qix3REFBVyxPQUFPLDRGQUEwQztBQUN4RixpQkFBaUIsMEVBQXlCO0FBQzFDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9kZWZhdWx0QWNjb3VudFN0YXRlL2FjdGlvbnMuanM/ZGU0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBnZXRTaWduZXJzIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUT0tFTl8yMDIyX1BST0dSQU1fSUQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlSW5pdGlhbGl6ZURlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbiwgY3JlYXRlVXBkYXRlRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uLCB9IGZyb20gJy4vaW5zdHJ1Y3Rpb25zLmpzJztcbi8qKlxuICogSW5pdGlhbGl6ZSBhIGRlZmF1bHQgYWNjb3VudCBzdGF0ZSBvbiBhIG1pbnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIG1pbnQgICAgICAgIE1pbnQgdG8gaW5pdGlhbGl6ZSB3aXRoIGV4dGVuc2lvblxuICogQHBhcmFtIHN0YXRlICAgICAgICBBY2NvdW50IHN0YXRlIHdpdGggd2hpY2ggdG8gaW5pdGlhbGl6ZSBuZXcgYWNjb3VudHNcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0aWFsaXplRGVmYXVsdEFjY291bnRTdGF0ZShjb25uZWN0aW9uLCBwYXllciwgbWludCwgc3RhdGUsIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVJbml0aWFsaXplRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uKG1pbnQsIHN0YXRlLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLyoqXG4gKiBVcGRhdGUgdGhlIGRlZmF1bHQgYWNjb3VudCBzdGF0ZSBvbiBhIG1pbnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIG1pbnQgICAgICAgIE1pbnQgdG8gbW9kaWZ5XG4gKiBAcGFyYW0gc3RhdGUgICAgICAgIE5ldyBhY2NvdW50IHN0YXRlIHRvIHNldCBvbiBjcmVhdGVkIGFjY291bnRzXG4gKiBAcGFyYW0gZnJlZXplQXV0aG9yaXR5ICAgICAgICAgIEZyZWV6ZSBhdXRob3JpdHkgb2YgdGhlIG1pbnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBmcmVlemVBdXRob3JpdHlgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVEZWZhdWx0QWNjb3VudFN0YXRlKGNvbm5lY3Rpb24sIHBheWVyLCBtaW50LCBzdGF0ZSwgZnJlZXplQXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IFtmcmVlemVBdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhmcmVlemVBdXRob3JpdHksIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlVXBkYXRlRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uKG1pbnQsIHN0YXRlLCBmcmVlemVBdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnMsIHByb2dyYW1JZCkpO1xuICAgIHJldHVybiBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIC4uLnNpZ25lcnNdLCBjb25maXJtT3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/actions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/actions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _actions_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _actions_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/instructions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _instructions_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _instructions_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/state.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _state_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _state_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2RlZmF1bHRBY2NvdW50U3RhdGUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNLO0FBQ1A7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9kZWZhdWx0QWNjb3VudFN0YXRlL2luZGV4LmpzPzI5M2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaW5zdHJ1Y3Rpb25zLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc3RhdGUuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/instructions.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/instructions.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAccountStateInstruction\": function() { return /* binding */ DefaultAccountStateInstruction; },\n/* harmony export */   \"defaultAccountStateInstructionData\": function() { return /* binding */ defaultAccountStateInstructionData; },\n/* harmony export */   \"createInitializeDefaultAccountStateInstruction\": function() { return /* binding */ createInitializeDefaultAccountStateInstruction; },\n/* harmony export */   \"createUpdateDefaultAccountStateInstruction\": function() { return /* binding */ createUpdateDefaultAccountStateInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _instructions_internal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instructions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _instructions_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../instructions/types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\nvar DefaultAccountStateInstruction;\n(function (DefaultAccountStateInstruction) {\n    DefaultAccountStateInstruction[DefaultAccountStateInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    DefaultAccountStateInstruction[DefaultAccountStateInstruction[\"Update\"] = 1] = \"Update\";\n})(DefaultAccountStateInstruction || (DefaultAccountStateInstruction = {}));\n/** TODO: docs */\nconst defaultAccountStateInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('defaultAccountStateInstruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('accountState'),\n]);\n/**\n * Construct an InitializeDefaultAccountState instruction\n *\n * @param mint         Mint to initialize\n * @param accountState Default account state to set on all new accounts\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeDefaultAccountStateInstruction(mint, accountState, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(defaultAccountStateInstructionData.span);\n    defaultAccountStateInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.DefaultAccountStateExtension,\n        defaultAccountStateInstruction: DefaultAccountStateInstruction.Initialize,\n        accountState,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Construct an UpdateDefaultAccountState instruction\n *\n * @param mint         Mint to update\n * @param accountState    Default account state to set on all accounts\n * @param freezeAuthority       The mint's freeze authority\n * @param signers         The signer account(s) for a multisig\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createUpdateDefaultAccountStateInstruction(mint, accountState, freezeAuthority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_5__.addSigners)([{ pubkey: mint, isSigner: false, isWritable: true }], freezeAuthority, multiSigners);\n    const data = Buffer.alloc(defaultAccountStateInstructionData.span);\n    defaultAccountStateInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.DefaultAccountStateExtension,\n        defaultAccountStateInstruction: DefaultAccountStateInstruction.Update,\n        accountState,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2RlZmF1bHRBY2NvdW50U3RhdGUvaW5zdHJ1Y3Rpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ007QUFDNkI7QUFDbkI7QUFDUDtBQUNHO0FBQ3hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3RUFBd0U7QUFDekU7QUFDTywyQ0FBMkMsNkRBQU07QUFDeEQsSUFBSSx5REFBRTtBQUNOLElBQUkseURBQUU7QUFDTixJQUFJLHlEQUFFO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3RkFBd0YsZ0VBQXFCO0FBQ3BILFNBQVMsd0VBQXlCO0FBQ2xDLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxvQkFBb0IsaURBQWlEO0FBQ3JFLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0EscUJBQXFCLGlHQUE2QztBQUNsRTtBQUNBO0FBQ0EsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdIQUF3SCxnRUFBcUI7QUFDcEosU0FBUyx3RUFBeUI7QUFDbEMsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGlCQUFpQixxRUFBVSxJQUFJLGlEQUFpRDtBQUNoRixpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQixpR0FBNkM7QUFDbEU7QUFDQTtBQUNBLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvZGVmYXVsdEFjY291bnRTdGF0ZS9pbnN0cnVjdGlvbnMuanM/ZjM3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucywgVE9LRU5fMjAyMl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yIH0gZnJvbSAnLi4vLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuLi8uLi9pbnN0cnVjdGlvbnMvaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4uLy4uL2luc3RydWN0aW9ucy90eXBlcy5qcyc7XG5leHBvcnQgdmFyIERlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbjtcbihmdW5jdGlvbiAoRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uKSB7XG4gICAgRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uW0RlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbltcIkluaXRpYWxpemVcIl0gPSAwXSA9IFwiSW5pdGlhbGl6ZVwiO1xuICAgIERlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbltEZWZhdWx0QWNjb3VudFN0YXRlSW5zdHJ1Y3Rpb25bXCJVcGRhdGVcIl0gPSAxXSA9IFwiVXBkYXRlXCI7XG59KShEZWZhdWx0QWNjb3VudFN0YXRlSW5zdHJ1Y3Rpb24gfHwgKERlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbiA9IHt9KSk7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgIHU4KCdkZWZhdWx0QWNjb3VudFN0YXRlSW5zdHJ1Y3Rpb24nKSxcbiAgICB1OCgnYWNjb3VudFN0YXRlJyksXG5dKTtcbi8qKlxuICogQ29uc3RydWN0IGFuIEluaXRpYWxpemVEZWZhdWx0QWNjb3VudFN0YXRlIGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIG1pbnQgICAgICAgICBNaW50IHRvIGluaXRpYWxpemVcbiAqIEBwYXJhbSBhY2NvdW50U3RhdGUgRGVmYXVsdCBhY2NvdW50IHN0YXRlIHRvIHNldCBvbiBhbGwgbmV3IGFjY291bnRzXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbml0aWFsaXplRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uKG1pbnQsIGFjY291bnRTdGF0ZSwgcHJvZ3JhbUlkID0gVE9LRU5fMjAyMl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFwcm9ncmFtU3VwcG9ydHNFeHRlbnNpb25zKHByb2dyYW1JZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBbeyBwdWJrZXk6IG1pbnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9XTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGRlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgZGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5EZWZhdWx0QWNjb3VudFN0YXRlRXh0ZW5zaW9uLFxuICAgICAgICBkZWZhdWx0QWNjb3VudFN0YXRlSW5zdHJ1Y3Rpb246IERlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbi5Jbml0aWFsaXplLFxuICAgICAgICBhY2NvdW50U3RhdGUsXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBDb25zdHJ1Y3QgYW4gVXBkYXRlRGVmYXVsdEFjY291bnRTdGF0ZSBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgTWludCB0byB1cGRhdGVcbiAqIEBwYXJhbSBhY2NvdW50U3RhdGUgICAgRGVmYXVsdCBhY2NvdW50IHN0YXRlIHRvIHNldCBvbiBhbGwgYWNjb3VudHNcbiAqIEBwYXJhbSBmcmVlemVBdXRob3JpdHkgICAgICAgVGhlIG1pbnQncyBmcmVlemUgYXV0aG9yaXR5XG4gKiBAcGFyYW0gc2lnbmVycyAgICAgICAgIFRoZSBzaWduZXIgYWNjb3VudChzKSBmb3IgYSBtdWx0aXNpZ1xuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVXBkYXRlRGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uKG1pbnQsIGFjY291bnRTdGF0ZSwgZnJlZXplQXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fMjAyMl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFwcm9ncmFtU3VwcG9ydHNFeHRlbnNpb25zKHByb2dyYW1JZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFt7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH1dLCBmcmVlemVBdXRob3JpdHksIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhkZWZhdWx0QWNjb3VudFN0YXRlSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGRlZmF1bHRBY2NvdW50U3RhdGVJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uRGVmYXVsdEFjY291bnRTdGF0ZUV4dGVuc2lvbixcbiAgICAgICAgZGVmYXVsdEFjY291bnRTdGF0ZUluc3RydWN0aW9uOiBEZWZhdWx0QWNjb3VudFN0YXRlSW5zdHJ1Y3Rpb24uVXBkYXRlLFxuICAgICAgICBhY2NvdW50U3RhdGUsXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1Y3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/instructions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/state.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/state.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAccountStateLayout\": function() { return /* binding */ DefaultAccountStateLayout; },\n/* harmony export */   \"DEFAULT_ACCOUNT_STATE_SIZE\": function() { return /* binding */ DEFAULT_ACCOUNT_STATE_SIZE; },\n/* harmony export */   \"getDefaultAccountState\": function() { return /* binding */ getDefaultAccountState; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n/** Buffer layout for de/serializing a transfer fee config extension */\nconst DefaultAccountStateLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('state')]);\nconst DEFAULT_ACCOUNT_STATE_SIZE = DefaultAccountStateLayout.span;\nfunction getDefaultAccountState(mint) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_1__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_1__.ExtensionType.DefaultAccountState, mint.tlvData);\n    if (extensionData !== null) {\n        return DefaultAccountStateLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2RlZmF1bHRBY2NvdW50U3RhdGUvc3RhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBbUQ7QUFDbUI7QUFDdEU7QUFDTyxrQ0FBa0MsNkRBQU0sRUFBRSx5REFBRTtBQUM1QztBQUNBO0FBQ1AsMEJBQTBCLG1FQUFnQixDQUFDLGdGQUFpQztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvZGVmYXVsdEFjY291bnRTdGF0ZS9zdGF0ZS5qcz9jYjFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgRXh0ZW5zaW9uVHlwZSwgZ2V0RXh0ZW5zaW9uRGF0YSB9IGZyb20gJy4uL2V4dGVuc2lvblR5cGUuanMnO1xuLyoqIEJ1ZmZlciBsYXlvdXQgZm9yIGRlL3NlcmlhbGl6aW5nIGEgdHJhbnNmZXIgZmVlIGNvbmZpZyBleHRlbnNpb24gKi9cbmV4cG9ydCBjb25zdCBEZWZhdWx0QWNjb3VudFN0YXRlTGF5b3V0ID0gc3RydWN0KFt1OCgnc3RhdGUnKV0pO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQUNDT1VOVF9TVEFURV9TSVpFID0gRGVmYXVsdEFjY291bnRTdGF0ZUxheW91dC5zcGFuO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRBY2NvdW50U3RhdGUobWludCkge1xuICAgIGNvbnN0IGV4dGVuc2lvbkRhdGEgPSBnZXRFeHRlbnNpb25EYXRhKEV4dGVuc2lvblR5cGUuRGVmYXVsdEFjY291bnRTdGF0ZSwgbWludC50bHZEYXRhKTtcbiAgICBpZiAoZXh0ZW5zaW9uRGF0YSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gRGVmYXVsdEFjY291bnRTdGF0ZUxheW91dC5kZWNvZGUoZXh0ZW5zaW9uRGF0YSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/state.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExtensionType\": function() { return /* binding */ ExtensionType; },\n/* harmony export */   \"TYPE_SIZE\": function() { return /* binding */ TYPE_SIZE; },\n/* harmony export */   \"LENGTH_SIZE\": function() { return /* binding */ LENGTH_SIZE; },\n/* harmony export */   \"getTypeLen\": function() { return /* binding */ getTypeLen; },\n/* harmony export */   \"isMintExtension\": function() { return /* binding */ isMintExtension; },\n/* harmony export */   \"isAccountExtension\": function() { return /* binding */ isAccountExtension; },\n/* harmony export */   \"getAccountTypeOfMintType\": function() { return /* binding */ getAccountTypeOfMintType; },\n/* harmony export */   \"getMintLen\": function() { return /* binding */ getMintLen; },\n/* harmony export */   \"getAccountLen\": function() { return /* binding */ getAccountLen; },\n/* harmony export */   \"getExtensionData\": function() { return /* binding */ getExtensionData; },\n/* harmony export */   \"getExtensionTypes\": function() { return /* binding */ getExtensionTypes; },\n/* harmony export */   \"getAccountLenForMint\": function() { return /* binding */ getAccountLenForMint; }\n/* harmony export */ });\n/* harmony import */ var _state_account_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../state/account.js */ \"./node_modules/@solana/spl-token/lib/esm/state/account.js\");\n/* harmony import */ var _state_mint_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../state/mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony import */ var _state_multisig_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../state/multisig.js */ \"./node_modules/@solana/spl-token/lib/esm/state/multisig.js\");\n/* harmony import */ var _accountType_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./accountType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js\");\n/* harmony import */ var _cpiGuard_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cpiGuard/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/index.js\");\n/* harmony import */ var _defaultAccountState_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultAccountState/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/index.js\");\n/* harmony import */ var _immutableOwner_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./immutableOwner.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/immutableOwner.js\");\n/* harmony import */ var _interestBearingMint_state_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interestBearingMint/state.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/state.js\");\n/* harmony import */ var _memoTransfer_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./memoTransfer/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/index.js\");\n/* harmony import */ var _mintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mintCloseAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/mintCloseAuthority.js\");\n/* harmony import */ var _nonTransferable_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nonTransferable.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/nonTransferable.js\");\n/* harmony import */ var _permanentDelegate_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./permanentDelegate.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/permanentDelegate.js\");\n/* harmony import */ var _transferFee_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transferFee/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ExtensionType;\n(function (ExtensionType) {\n    ExtensionType[ExtensionType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    ExtensionType[ExtensionType[\"TransferFeeConfig\"] = 1] = \"TransferFeeConfig\";\n    ExtensionType[ExtensionType[\"TransferFeeAmount\"] = 2] = \"TransferFeeAmount\";\n    ExtensionType[ExtensionType[\"MintCloseAuthority\"] = 3] = \"MintCloseAuthority\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferMint\"] = 4] = \"ConfidentialTransferMint\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferAccount\"] = 5] = \"ConfidentialTransferAccount\";\n    ExtensionType[ExtensionType[\"DefaultAccountState\"] = 6] = \"DefaultAccountState\";\n    ExtensionType[ExtensionType[\"ImmutableOwner\"] = 7] = \"ImmutableOwner\";\n    ExtensionType[ExtensionType[\"MemoTransfer\"] = 8] = \"MemoTransfer\";\n    ExtensionType[ExtensionType[\"NonTransferable\"] = 9] = \"NonTransferable\";\n    ExtensionType[ExtensionType[\"InterestBearingConfig\"] = 10] = \"InterestBearingConfig\";\n    ExtensionType[ExtensionType[\"CpiGuard\"] = 11] = \"CpiGuard\";\n    ExtensionType[ExtensionType[\"PermanentDelegate\"] = 12] = \"PermanentDelegate\";\n})(ExtensionType || (ExtensionType = {}));\nconst TYPE_SIZE = 2;\nconst LENGTH_SIZE = 2;\n// NOTE: All of these should eventually use their type's Span instead of these\n// constants.  This is provided for at least creation to work.\nfunction getTypeLen(e) {\n    switch (e) {\n        case ExtensionType.Uninitialized:\n            return 0;\n        case ExtensionType.TransferFeeConfig:\n            return _transferFee_index_js__WEBPACK_IMPORTED_MODULE_0__.TRANSFER_FEE_CONFIG_SIZE;\n        case ExtensionType.TransferFeeAmount:\n            return _transferFee_index_js__WEBPACK_IMPORTED_MODULE_0__.TRANSFER_FEE_AMOUNT_SIZE;\n        case ExtensionType.MintCloseAuthority:\n            return _mintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_1__.MINT_CLOSE_AUTHORITY_SIZE;\n        case ExtensionType.ConfidentialTransferMint:\n            return 97;\n        case ExtensionType.ConfidentialTransferAccount:\n            return 286;\n        case ExtensionType.CpiGuard:\n            return _cpiGuard_index_js__WEBPACK_IMPORTED_MODULE_2__.CPI_GUARD_SIZE;\n        case ExtensionType.DefaultAccountState:\n            return _defaultAccountState_index_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_ACCOUNT_STATE_SIZE;\n        case ExtensionType.ImmutableOwner:\n            return _immutableOwner_js__WEBPACK_IMPORTED_MODULE_4__.IMMUTABLE_OWNER_SIZE;\n        case ExtensionType.MemoTransfer:\n            return _memoTransfer_index_js__WEBPACK_IMPORTED_MODULE_5__.MEMO_TRANSFER_SIZE;\n        case ExtensionType.NonTransferable:\n            return _nonTransferable_js__WEBPACK_IMPORTED_MODULE_6__.NON_TRANSFERABLE_SIZE;\n        case ExtensionType.InterestBearingConfig:\n            return _interestBearingMint_state_js__WEBPACK_IMPORTED_MODULE_7__.INTEREST_BEARING_MINT_CONFIG_STATE_SIZE;\n        case ExtensionType.PermanentDelegate:\n            return _permanentDelegate_js__WEBPACK_IMPORTED_MODULE_8__.PERMANENT_DELEGATE_SIZE;\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nfunction isMintExtension(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeConfig:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.ConfidentialTransferMint:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.NonTransferable:\n        case ExtensionType.InterestBearingConfig:\n        case ExtensionType.PermanentDelegate:\n            return true;\n        case ExtensionType.Uninitialized:\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.CpiGuard:\n            return false;\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nfunction isAccountExtension(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.CpiGuard:\n            return true;\n        case ExtensionType.Uninitialized:\n        case ExtensionType.TransferFeeConfig:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.ConfidentialTransferMint:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.NonTransferable:\n        case ExtensionType.InterestBearingConfig:\n        case ExtensionType.PermanentDelegate:\n            return false;\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nfunction getAccountTypeOfMintType(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeConfig:\n            return ExtensionType.TransferFeeAmount;\n        case ExtensionType.ConfidentialTransferMint:\n            return ExtensionType.ConfidentialTransferAccount;\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.CpiGuard:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.NonTransferable:\n        case ExtensionType.Uninitialized:\n        case ExtensionType.InterestBearingConfig:\n        case ExtensionType.PermanentDelegate:\n            return ExtensionType.Uninitialized;\n    }\n}\nfunction getLen(extensionTypes, baseSize) {\n    if (extensionTypes.length === 0) {\n        return baseSize;\n    }\n    else {\n        const accountLength = _state_account_js__WEBPACK_IMPORTED_MODULE_9__.ACCOUNT_SIZE +\n            _accountType_js__WEBPACK_IMPORTED_MODULE_10__.ACCOUNT_TYPE_SIZE +\n            extensionTypes\n                .filter((element, i) => i === extensionTypes.indexOf(element))\n                .map((element) => getTypeLen(element) + TYPE_SIZE + LENGTH_SIZE)\n                .reduce((a, b) => a + b);\n        if (accountLength === _state_multisig_js__WEBPACK_IMPORTED_MODULE_11__.MULTISIG_SIZE) {\n            return accountLength + TYPE_SIZE;\n        }\n        else {\n            return accountLength;\n        }\n    }\n}\nfunction getMintLen(extensionTypes) {\n    return getLen(extensionTypes, _state_mint_js__WEBPACK_IMPORTED_MODULE_12__.MINT_SIZE);\n}\nfunction getAccountLen(extensionTypes) {\n    return getLen(extensionTypes, _state_account_js__WEBPACK_IMPORTED_MODULE_9__.ACCOUNT_SIZE);\n}\nfunction getExtensionData(extension, tlvData) {\n    let extensionTypeIndex = 0;\n    while (extensionTypeIndex + TYPE_SIZE + LENGTH_SIZE <= tlvData.length) {\n        const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n        const entryLength = tlvData.readUInt16LE(extensionTypeIndex + TYPE_SIZE);\n        const typeIndex = extensionTypeIndex + TYPE_SIZE + LENGTH_SIZE;\n        if (entryType == extension) {\n            return tlvData.slice(typeIndex, typeIndex + entryLength);\n        }\n        extensionTypeIndex = typeIndex + entryLength;\n    }\n    return null;\n}\nfunction getExtensionTypes(tlvData) {\n    const extensionTypes = [];\n    let extensionTypeIndex = 0;\n    while (extensionTypeIndex < tlvData.length) {\n        const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n        extensionTypes.push(entryType);\n        const entryLength = tlvData.readUInt16LE(extensionTypeIndex + TYPE_SIZE);\n        extensionTypeIndex += TYPE_SIZE + LENGTH_SIZE + entryLength;\n    }\n    return extensionTypes;\n}\nfunction getAccountLenForMint(mint) {\n    const extensionTypes = getExtensionTypes(mint.tlvData);\n    const accountExtensions = extensionTypes.map(getAccountTypeOfMintType);\n    return getAccountLen(accountExtensions);\n}\n//# sourceMappingURL=extensionType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/immutableOwner.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/immutableOwner.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ImmutableOwnerLayout\": function() { return /* binding */ ImmutableOwnerLayout; },\n/* harmony export */   \"IMMUTABLE_OWNER_SIZE\": function() { return /* binding */ IMMUTABLE_OWNER_SIZE; },\n/* harmony export */   \"getImmutableOwner\": function() { return /* binding */ getImmutableOwner; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n/** Buffer layout for de/serializing an account */\nconst ImmutableOwnerLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([]);\nconst IMMUTABLE_OWNER_SIZE = ImmutableOwnerLayout.span;\nfunction getImmutableOwner(account) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_1__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_1__.ExtensionType.ImmutableOwner, account.tlvData);\n    if (extensionData !== null) {\n        return ImmutableOwnerLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=immutableOwner.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ltbXV0YWJsZU93bmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStDO0FBQ3NCO0FBQ3JFO0FBQ08sNkJBQTZCLDZEQUFNO0FBQ25DO0FBQ0E7QUFDUCwwQkFBMEIsbUVBQWdCLENBQUMsMkVBQTRCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9pbW11dGFibGVPd25lci5qcz9lMjUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBFeHRlbnNpb25UeXBlLCBnZXRFeHRlbnNpb25EYXRhIH0gZnJvbSAnLi9leHRlbnNpb25UeXBlLmpzJztcbi8qKiBCdWZmZXIgbGF5b3V0IGZvciBkZS9zZXJpYWxpemluZyBhbiBhY2NvdW50ICovXG5leHBvcnQgY29uc3QgSW1tdXRhYmxlT3duZXJMYXlvdXQgPSBzdHJ1Y3QoW10pO1xuZXhwb3J0IGNvbnN0IElNTVVUQUJMRV9PV05FUl9TSVpFID0gSW1tdXRhYmxlT3duZXJMYXlvdXQuc3BhbjtcbmV4cG9ydCBmdW5jdGlvbiBnZXRJbW11dGFibGVPd25lcihhY2NvdW50KSB7XG4gICAgY29uc3QgZXh0ZW5zaW9uRGF0YSA9IGdldEV4dGVuc2lvbkRhdGEoRXh0ZW5zaW9uVHlwZS5JbW11dGFibGVPd25lciwgYWNjb3VudC50bHZEYXRhKTtcbiAgICBpZiAoZXh0ZW5zaW9uRGF0YSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gSW1tdXRhYmxlT3duZXJMYXlvdXQuZGVjb2RlKGV4dGVuc2lvbkRhdGEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1tdXRhYmxlT3duZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/immutableOwner.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _accountType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accountType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _accountType_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _accountType_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _cpiGuard_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cpiGuard/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _cpiGuard_index_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _cpiGuard_index_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _defaultAccountState_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultAccountState/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _defaultAccountState_index_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _defaultAccountState_index_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _extensionType_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _extensionType_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _immutableOwner_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./immutableOwner.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/immutableOwner.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _immutableOwner_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _immutableOwner_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _interestBearingMint_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interestBearingMint/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _interestBearingMint_index_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _interestBearingMint_index_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _memoTransfer_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./memoTransfer/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _memoTransfer_index_js__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _memoTransfer_index_js__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _mintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mintCloseAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/mintCloseAuthority.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _mintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _mintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _nonTransferable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nonTransferable.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/nonTransferable.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _nonTransferable_js__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _nonTransferable_js__WEBPACK_IMPORTED_MODULE_8__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _transferFee_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transferFee/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _transferFee_index_js__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _transferFee_index_js__WEBPACK_IMPORTED_MODULE_9__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _permanentDelegate_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./permanentDelegate.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/permanentDelegate.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _permanentDelegate_js__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _permanentDelegate_js__WEBPACK_IMPORTED_MODULE_10__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpQztBQUNHO0FBQ1c7QUFDWjtBQUNDO0FBQ1c7QUFDUDtBQUNBO0FBQ0g7QUFDRTtBQUNBO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvaW5kZXguanM/ZTU2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FjY291bnRUeXBlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY3BpR3VhcmQvaW5kZXguanMnO1xuZXhwb3J0ICogZnJvbSAnLi9kZWZhdWx0QWNjb3VudFN0YXRlL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZXh0ZW5zaW9uVHlwZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2ltbXV0YWJsZU93bmVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaW50ZXJlc3RCZWFyaW5nTWludC9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL21lbW9UcmFuc2Zlci9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL21pbnRDbG9zZUF1dGhvcml0eS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL25vblRyYW5zZmVyYWJsZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3RyYW5zZmVyRmVlL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vcGVybWFuZW50RGVsZWdhdGUuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/actions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/actions.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createInterestBearingMint\": function() { return /* binding */ createInterestBearingMint; },\n/* harmony export */   \"updateRateInterestBearingMint\": function() { return /* binding */ updateRateInterestBearingMint; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _actions_internal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../actions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_initializeMint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../instructions/initializeMint.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/instructions.js\");\n\n\n\n\n\n\n/**\n * Initialize an interest bearing account on a mint\n *\n * @param connection      Connection to use\n * @param payer           Payer of the transaction fees\n * @param mintAuthority   Account or multisig that will control minting\n * @param freezeAuthority Optional account or multisig that can freeze token accounts\n * @param rateAuthority   The public key for the account that can update the rate\n * @param rate            The initial interest rate\n * @param decimals        Location of the decimal place\n * @param keypair         Optional keypair, defaulting to a new random one\n * @param confirmOptions  Options for confirming the transaction\n * @param programId       SPL Token program account\n *\n * @return Public key of the mint\n */\nasync function createInterestBearingMint(connection, payer, mintAuthority, freezeAuthority, rateAuthority, rate, decimals, keypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate(), confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const mintLen = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getMintLen)([_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.InterestBearingConfig]);\n    const lamports = await connection.getMinimumBalanceForRentExemption(mintLen);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: keypair.publicKey,\n        space: mintLen,\n        lamports,\n        programId,\n    }), (0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createInitializeInterestBearingMintInstruction)(keypair.publicKey, rateAuthority, rate, programId), (0,_instructions_initializeMint_js__WEBPACK_IMPORTED_MODULE_4__.createInitializeMintInstruction)(keypair.publicKey, decimals, mintAuthority, freezeAuthority, programId));\n    await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n}\n/**\n * Update the interest rate of an interest bearing account\n *\n * @param connection      Connection to use\n * @param payer           Payer of the transaction fees\n * @param mint            Public key of the mint\n * @param rateAuthority   The public key for the account that can update the rate\n * @param rate            The initial interest rate\n * @param multiSigners    Signing accounts if `owner` is a multisig\n * @param confirmOptions  Options for confirming the transaction\n * @param programId       SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function updateRateInterestBearingMint(connection, payer, mint, rateAuthority, rate, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [rateAuthorityPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_5__.getSigners)(rateAuthority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createUpdateRateInterestBearingMintInstruction)(mint, rateAuthorityPublicKey, rate, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, rateAuthority, ...signers], confirmOptions);\n}\n//# sourceMappingURL=actions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvYWN0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFpRztBQUMxQztBQUNJO0FBQzRCO0FBQ3ZCO0FBQ29FO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUlBQXFJLDZEQUFnQixnQ0FBZ0MsZ0VBQXFCO0FBQ2pOLG9CQUFvQiw2REFBVSxFQUFFLGtGQUFtQztBQUNuRTtBQUNBLDRCQUE0Qix3REFBVyxPQUFPLHdFQUEyQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHLGdHQUE4QyxxREFBcUQsZ0dBQStCO0FBQzFJLFVBQVUsMEVBQXlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMElBQTBJLGdFQUFxQjtBQUN0Syw4Q0FBOEMsZ0VBQVU7QUFDeEQsNEJBQTRCLHdEQUFXLE9BQU8sZ0dBQThDO0FBQzVGLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvYWN0aW9ucy5qcz9kZjVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtleXBhaXIsIHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFN5c3RlbVByb2dyYW0sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IGdldFNpZ25lcnMgfSBmcm9tICcuLi8uLi9hY3Rpb25zL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVJbml0aWFsaXplTWludEluc3RydWN0aW9uIH0gZnJvbSAnLi4vLi4vaW5zdHJ1Y3Rpb25zL2luaXRpYWxpemVNaW50LmpzJztcbmltcG9ydCB7IEV4dGVuc2lvblR5cGUsIGdldE1pbnRMZW4gfSBmcm9tICcuLi9leHRlbnNpb25UeXBlLmpzJztcbmltcG9ydCB7IGNyZWF0ZUluaXRpYWxpemVJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24sIGNyZWF0ZVVwZGF0ZVJhdGVJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24sIH0gZnJvbSAnLi9pbnN0cnVjdGlvbnMuanMnO1xuLyoqXG4gKiBJbml0aWFsaXplIGFuIGludGVyZXN0IGJlYXJpbmcgYWNjb3VudCBvbiBhIG1pbnRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gbWludEF1dGhvcml0eSAgIEFjY291bnQgb3IgbXVsdGlzaWcgdGhhdCB3aWxsIGNvbnRyb2wgbWludGluZ1xuICogQHBhcmFtIGZyZWV6ZUF1dGhvcml0eSBPcHRpb25hbCBhY2NvdW50IG9yIG11bHRpc2lnIHRoYXQgY2FuIGZyZWV6ZSB0b2tlbiBhY2NvdW50c1xuICogQHBhcmFtIHJhdGVBdXRob3JpdHkgICBUaGUgcHVibGljIGtleSBmb3IgdGhlIGFjY291bnQgdGhhdCBjYW4gdXBkYXRlIHRoZSByYXRlXG4gKiBAcGFyYW0gcmF0ZSAgICAgICAgICAgIFRoZSBpbml0aWFsIGludGVyZXN0IHJhdGVcbiAqIEBwYXJhbSBkZWNpbWFscyAgICAgICAgTG9jYXRpb24gb2YgdGhlIGRlY2ltYWwgcGxhY2VcbiAqIEBwYXJhbSBrZXlwYWlyICAgICAgICAgT3B0aW9uYWwga2V5cGFpciwgZGVmYXVsdGluZyB0byBhIG5ldyByYW5kb20gb25lXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFB1YmxpYyBrZXkgb2YgdGhlIG1pbnRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUludGVyZXN0QmVhcmluZ01pbnQoY29ubmVjdGlvbiwgcGF5ZXIsIG1pbnRBdXRob3JpdHksIGZyZWV6ZUF1dGhvcml0eSwgcmF0ZUF1dGhvcml0eSwgcmF0ZSwgZGVjaW1hbHMsIGtleXBhaXIgPSBLZXlwYWlyLmdlbmVyYXRlKCksIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBtaW50TGVuID0gZ2V0TWludExlbihbRXh0ZW5zaW9uVHlwZS5JbnRlcmVzdEJlYXJpbmdDb25maWddKTtcbiAgICBjb25zdCBsYW1wb3J0cyA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0TWluaW11bUJhbGFuY2VGb3JSZW50RXhlbXB0aW9uKG1pbnRMZW4pO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKFN5c3RlbVByb2dyYW0uY3JlYXRlQWNjb3VudCh7XG4gICAgICAgIGZyb21QdWJrZXk6IHBheWVyLnB1YmxpY0tleSxcbiAgICAgICAgbmV3QWNjb3VudFB1YmtleToga2V5cGFpci5wdWJsaWNLZXksXG4gICAgICAgIHNwYWNlOiBtaW50TGVuLFxuICAgICAgICBsYW1wb3J0cyxcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgIH0pLCBjcmVhdGVJbml0aWFsaXplSW50ZXJlc3RCZWFyaW5nTWludEluc3RydWN0aW9uKGtleXBhaXIucHVibGljS2V5LCByYXRlQXV0aG9yaXR5LCByYXRlLCBwcm9ncmFtSWQpLCBjcmVhdGVJbml0aWFsaXplTWludEluc3RydWN0aW9uKGtleXBhaXIucHVibGljS2V5LCBkZWNpbWFscywgbWludEF1dGhvcml0eSwgZnJlZXplQXV0aG9yaXR5LCBwcm9ncmFtSWQpKTtcbiAgICBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIGtleXBhaXJdLCBjb25maXJtT3B0aW9ucyk7XG4gICAgcmV0dXJuIGtleXBhaXIucHVibGljS2V5O1xufVxuLyoqXG4gKiBVcGRhdGUgdGhlIGludGVyZXN0IHJhdGUgb2YgYW4gaW50ZXJlc3QgYmVhcmluZyBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIG1pbnQgICAgICAgICAgICBQdWJsaWMga2V5IG9mIHRoZSBtaW50XG4gKiBAcGFyYW0gcmF0ZUF1dGhvcml0eSAgIFRoZSBwdWJsaWMga2V5IGZvciB0aGUgYWNjb3VudCB0aGF0IGNhbiB1cGRhdGUgdGhlIHJhdGVcbiAqIEBwYXJhbSByYXRlICAgICAgICAgICAgVGhlIGluaXRpYWwgaW50ZXJlc3QgcmF0ZVxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zICBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBTaWduYXR1cmUgb2YgdGhlIGNvbmZpcm1lZCB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlUmF0ZUludGVyZXN0QmVhcmluZ01pbnQoY29ubmVjdGlvbiwgcGF5ZXIsIG1pbnQsIHJhdGVBdXRob3JpdHksIHJhdGUsIG11bHRpU2lnbmVycyA9IFtdLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fMjAyMl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW3JhdGVBdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhyYXRlQXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZVVwZGF0ZVJhdGVJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24obWludCwgcmF0ZUF1dGhvcml0eVB1YmxpY0tleSwgcmF0ZSwgc2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgcmF0ZUF1dGhvcml0eSwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/actions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/actions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _actions_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _actions_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/instructions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _instructions_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _instructions_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/state.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _state_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _state_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNLO0FBQ1A7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9pbnRlcmVzdEJlYXJpbmdNaW50L2luZGV4LmpzPzExMGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaW5zdHJ1Y3Rpb25zLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc3RhdGUuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/instructions.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/instructions.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InterestBearingMintInstruction\": function() { return /* binding */ InterestBearingMintInstruction; },\n/* harmony export */   \"interestBearingMintInitializeInstructionData\": function() { return /* binding */ interestBearingMintInitializeInstructionData; },\n/* harmony export */   \"interestBearingMintUpdateRateInstructionData\": function() { return /* binding */ interestBearingMintUpdateRateInstructionData; },\n/* harmony export */   \"createInitializeInterestBearingMintInstruction\": function() { return /* binding */ createInitializeInterestBearingMintInstruction; },\n/* harmony export */   \"createUpdateRateInterestBearingMintInstruction\": function() { return /* binding */ createUpdateRateInterestBearingMintInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_internal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instructions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _instructions_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../instructions/types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\nvar InterestBearingMintInstruction;\n(function (InterestBearingMintInstruction) {\n    InterestBearingMintInstruction[InterestBearingMintInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    InterestBearingMintInstruction[InterestBearingMintInstruction[\"UpdateRate\"] = 1] = \"UpdateRate\";\n})(InterestBearingMintInstruction || (InterestBearingMintInstruction = {}));\nconst interestBearingMintInitializeInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('interestBearingMintInstruction'),\n    // TODO: Make this an optional public key\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('rateAuthority'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.s16)('rate'),\n]);\nconst interestBearingMintUpdateRateInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('interestBearingMintInstruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.s16)('rate'),\n]);\n/**\n * Construct an InitializeInterestBearingMint instruction\n *\n * @param mint           Mint to initialize\n * @param rateAuthority  The public key for the account that can update the rate\n * @param rate           The initial interest rate\n * @param programId      SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeInterestBearingMintInstruction(mint, rateAuthority, rate, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(interestBearingMintInitializeInstructionData.span);\n    interestBearingMintInitializeInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InterestBearingMintExtension,\n        interestBearingMintInstruction: InterestBearingMintInstruction.Initialize,\n        rateAuthority,\n        rate,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Construct an UpdateRateInterestBearingMint instruction\n *\n * @param mint           Mint to initialize\n * @param rateAuthority  The public key for the account that can update the rate\n * @param rate           The updated interest rate\n * @param multiSigners   Signing accounts if `rateAuthority` is a multisig\n * @param programId      SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createUpdateRateInterestBearingMintInstruction(mint, rateAuthority, rate, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_5__.addSigners)([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: rateAuthority, isSigner: !multiSigners.length, isWritable: false },\n    ], rateAuthority, multiSigners);\n    const data = Buffer.alloc(interestBearingMintUpdateRateInstructionData.span);\n    interestBearingMintUpdateRateInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InterestBearingMintExtension,\n        interestBearingMintInstruction: InterestBearingMintInstruction.UpdateRate,\n        rate,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvaW5zdHJ1Y3Rpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUF3RDtBQUNBO0FBQ0M7QUFDRTtBQUNDO0FBQ0c7QUFDeEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdFQUF3RTtBQUNsRSxxREFBcUQsNkRBQU07QUFDbEUsSUFBSSx5REFBRTtBQUNOLElBQUkseURBQUU7QUFDTjtBQUNBLElBQUksc0VBQVM7QUFDYixJQUFJLDBEQUFHO0FBQ1A7QUFDTyxxREFBcUQsNkRBQU07QUFDbEUsSUFBSSx5REFBRTtBQUNOLElBQUkseURBQUU7QUFDTixJQUFJLDBEQUFHO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtGQUErRixnRUFBcUI7QUFDM0gsb0JBQW9CLGlEQUFpRDtBQUNyRSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQixpR0FBNkM7QUFDbEU7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtIQUFrSCxnRUFBcUI7QUFDOUksaUJBQWlCLHFFQUFVO0FBQzNCLFVBQVUsaURBQWlEO0FBQzNELFVBQVUsMEVBQTBFO0FBQ3BGO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsaUdBQTZDO0FBQ2xFO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvaW5zdHJ1Y3Rpb25zLmpzPzU3NDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgczE2LCBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBhZGRTaWduZXJzIH0gZnJvbSAnLi4vLi4vaW5zdHJ1Y3Rpb25zL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuLi8uLi9pbnN0cnVjdGlvbnMvdHlwZXMuanMnO1xuZXhwb3J0IHZhciBJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb247XG4oZnVuY3Rpb24gKEludGVyZXN0QmVhcmluZ01pbnRJbnN0cnVjdGlvbikge1xuICAgIEludGVyZXN0QmVhcmluZ01pbnRJbnN0cnVjdGlvbltJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb25bXCJJbml0aWFsaXplXCJdID0gMF0gPSBcIkluaXRpYWxpemVcIjtcbiAgICBJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb25bSW50ZXJlc3RCZWFyaW5nTWludEluc3RydWN0aW9uW1wiVXBkYXRlUmF0ZVwiXSA9IDFdID0gXCJVcGRhdGVSYXRlXCI7XG59KShJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24gfHwgKEludGVyZXN0QmVhcmluZ01pbnRJbnN0cnVjdGlvbiA9IHt9KSk7XG5leHBvcnQgY29uc3QgaW50ZXJlc3RCZWFyaW5nTWludEluaXRpYWxpemVJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgIHU4KCdpbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24nKSxcbiAgICAvLyBUT0RPOiBNYWtlIHRoaXMgYW4gb3B0aW9uYWwgcHVibGljIGtleVxuICAgIHB1YmxpY0tleSgncmF0ZUF1dGhvcml0eScpLFxuICAgIHMxNigncmF0ZScpLFxuXSk7XG5leHBvcnQgY29uc3QgaW50ZXJlc3RCZWFyaW5nTWludFVwZGF0ZVJhdGVJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgIHU4KCdpbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24nKSxcbiAgICBzMTYoJ3JhdGUnKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYW4gSW5pdGlhbGl6ZUludGVyZXN0QmVhcmluZ01pbnQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgTWludCB0byBpbml0aWFsaXplXG4gKiBAcGFyYW0gcmF0ZUF1dGhvcml0eSAgVGhlIHB1YmxpYyBrZXkgZm9yIHRoZSBhY2NvdW50IHRoYXQgY2FuIHVwZGF0ZSB0aGUgcmF0ZVxuICogQHBhcmFtIHJhdGUgICAgICAgICAgIFRoZSBpbml0aWFsIGludGVyZXN0IHJhdGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZUludGVyZXN0QmVhcmluZ01pbnRJbnN0cnVjdGlvbihtaW50LCByYXRlQXV0aG9yaXR5LCByYXRlLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBrZXlzID0gW3sgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfV07XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhpbnRlcmVzdEJlYXJpbmdNaW50SW5pdGlhbGl6ZUluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBpbnRlcmVzdEJlYXJpbmdNaW50SW5pdGlhbGl6ZUluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5JbnRlcmVzdEJlYXJpbmdNaW50RXh0ZW5zaW9uLFxuICAgICAgICBpbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb246IEludGVyZXN0QmVhcmluZ01pbnRJbnN0cnVjdGlvbi5Jbml0aWFsaXplLFxuICAgICAgICByYXRlQXV0aG9yaXR5LFxuICAgICAgICByYXRlLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogQ29uc3RydWN0IGFuIFVwZGF0ZVJhdGVJbnRlcmVzdEJlYXJpbmdNaW50IGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIG1pbnQgICAgICAgICAgIE1pbnQgdG8gaW5pdGlhbGl6ZVxuICogQHBhcmFtIHJhdGVBdXRob3JpdHkgIFRoZSBwdWJsaWMga2V5IGZvciB0aGUgYWNjb3VudCB0aGF0IGNhbiB1cGRhdGUgdGhlIHJhdGVcbiAqIEBwYXJhbSByYXRlICAgICAgICAgICBUaGUgdXBkYXRlZCBpbnRlcmVzdCByYXRlXG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzICAgU2lnbmluZyBhY2NvdW50cyBpZiBgcmF0ZUF1dGhvcml0eWAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVVcGRhdGVSYXRlSW50ZXJlc3RCZWFyaW5nTWludEluc3RydWN0aW9uKG1pbnQsIHJhdGVBdXRob3JpdHksIHJhdGUsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBrZXlzID0gYWRkU2lnbmVycyhbXG4gICAgICAgIHsgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IHJhdGVBdXRob3JpdHksIGlzU2lnbmVyOiAhbXVsdGlTaWduZXJzLmxlbmd0aCwgaXNXcml0YWJsZTogZmFsc2UgfSxcbiAgICBdLCByYXRlQXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoaW50ZXJlc3RCZWFyaW5nTWludFVwZGF0ZVJhdGVJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgaW50ZXJlc3RCZWFyaW5nTWludFVwZGF0ZVJhdGVJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uSW50ZXJlc3RCZWFyaW5nTWludEV4dGVuc2lvbixcbiAgICAgICAgaW50ZXJlc3RCZWFyaW5nTWludEluc3RydWN0aW9uOiBJbnRlcmVzdEJlYXJpbmdNaW50SW5zdHJ1Y3Rpb24uVXBkYXRlUmF0ZSxcbiAgICAgICAgcmF0ZSxcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0cnVjdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/instructions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/state.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/state.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InterestBearingMintConfigStateLayout\": function() { return /* binding */ InterestBearingMintConfigStateLayout; },\n/* harmony export */   \"INTEREST_BEARING_MINT_CONFIG_STATE_SIZE\": function() { return /* binding */ INTEREST_BEARING_MINT_CONFIG_STATE_SIZE; },\n/* harmony export */   \"getInterestBearingMintConfigState\": function() { return /* binding */ getInterestBearingMintConfigState; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n\nconst InterestBearingMintConfigStateLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('rateAuthority'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.ns64)('initializationTimestamp'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.s16)('preUpdateAverageRate'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.ns64)('lastUpdateTimestamp'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.s16)('currentRate'),\n]);\nconst INTEREST_BEARING_MINT_CONFIG_STATE_SIZE = InterestBearingMintConfigStateLayout.span;\nfunction getInterestBearingMintConfigState(mint) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.InterestBearingConfig, mint.tlvData);\n    if (extensionData !== null) {\n        return InterestBearingMintConfigStateLayout.decode(extensionData);\n    }\n    return null;\n}\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvc3RhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBEO0FBQ0Y7QUFDYztBQUMvRCw2Q0FBNkMsNkRBQU07QUFDMUQsSUFBSSxzRUFBUztBQUNiLElBQUksMkRBQUk7QUFDUixJQUFJLDBEQUFHO0FBQ1AsSUFBSSwyREFBSTtBQUNSLElBQUksMERBQUc7QUFDUDtBQUNPO0FBQ0E7QUFDUCwwQkFBMEIsbUVBQWdCLENBQUMsa0ZBQW1DO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL2ludGVyZXN0QmVhcmluZ01pbnQvc3RhdGUuanM/NTcyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBuczY0LCBzMTYsIHN0cnVjdCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgRXh0ZW5zaW9uVHlwZSwgZ2V0RXh0ZW5zaW9uRGF0YSB9IGZyb20gJy4uL2V4dGVuc2lvblR5cGUuanMnO1xuZXhwb3J0IGNvbnN0IEludGVyZXN0QmVhcmluZ01pbnRDb25maWdTdGF0ZUxheW91dCA9IHN0cnVjdChbXG4gICAgcHVibGljS2V5KCdyYXRlQXV0aG9yaXR5JyksXG4gICAgbnM2NCgnaW5pdGlhbGl6YXRpb25UaW1lc3RhbXAnKSxcbiAgICBzMTYoJ3ByZVVwZGF0ZUF2ZXJhZ2VSYXRlJyksXG4gICAgbnM2NCgnbGFzdFVwZGF0ZVRpbWVzdGFtcCcpLFxuICAgIHMxNignY3VycmVudFJhdGUnKSxcbl0pO1xuZXhwb3J0IGNvbnN0IElOVEVSRVNUX0JFQVJJTkdfTUlOVF9DT05GSUdfU1RBVEVfU0laRSA9IEludGVyZXN0QmVhcmluZ01pbnRDb25maWdTdGF0ZUxheW91dC5zcGFuO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEludGVyZXN0QmVhcmluZ01pbnRDb25maWdTdGF0ZShtaW50KSB7XG4gICAgY29uc3QgZXh0ZW5zaW9uRGF0YSA9IGdldEV4dGVuc2lvbkRhdGEoRXh0ZW5zaW9uVHlwZS5JbnRlcmVzdEJlYXJpbmdDb25maWcsIG1pbnQudGx2RGF0YSk7XG4gICAgaWYgKGV4dGVuc2lvbkRhdGEgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIEludGVyZXN0QmVhcmluZ01pbnRDb25maWdTdGF0ZUxheW91dC5kZWNvZGUoZXh0ZW5zaW9uRGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/state.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/actions.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/actions.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enableRequiredMemoTransfers\": function() { return /* binding */ enableRequiredMemoTransfers; },\n/* harmony export */   \"disableRequiredMemoTransfers\": function() { return /* binding */ disableRequiredMemoTransfers; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _actions_internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/instructions.js\");\n\n\n\n\n/**\n * Enable memo transfers on the given account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to modify\n * @param owner          Owner of the account\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function enableRequiredMemoTransfers(connection, payer, account, owner, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createEnableRequiredMemoTransfersInstruction)(account, ownerPublicKey, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n/**\n * Disable memo transfers on the given account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param account        Account to modify\n * @param owner          Owner of the account\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function disableRequiredMemoTransfers(connection, payer, account, owner, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createDisableRequiredMemoTransfersInstruction)(account, ownerPublicKey, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n//# sourceMappingURL=actions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21lbW9UcmFuc2Zlci9hY3Rpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5RTtBQUNsQjtBQUNJO0FBQ3NFO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkhBQTZILGdFQUFxQjtBQUN6SixzQ0FBc0MsZ0VBQVU7QUFDaEQsNEJBQTRCLHdEQUFXLE9BQU8sOEZBQTRDO0FBQzFGLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhIQUE4SCxnRUFBcUI7QUFDMUosc0NBQXNDLGdFQUFVO0FBQ2hELDRCQUE0Qix3REFBVyxPQUFPLCtGQUE2QztBQUMzRixpQkFBaUIsMEVBQXlCO0FBQzFDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9tZW1vVHJhbnNmZXIvYWN0aW9ucy5qcz9iM2QyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IGdldFNpZ25lcnMgfSBmcm9tICcuLi8uLi9hY3Rpb25zL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVEaXNhYmxlUmVxdWlyZWRNZW1vVHJhbnNmZXJzSW5zdHJ1Y3Rpb24sIGNyZWF0ZUVuYWJsZVJlcXVpcmVkTWVtb1RyYW5zZmVyc0luc3RydWN0aW9uLCB9IGZyb20gJy4vaW5zdHJ1Y3Rpb25zLmpzJztcbi8qKlxuICogRW5hYmxlIG1lbW8gdHJhbnNmZXJzIG9uIHRoZSBnaXZlbiBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICBBY2NvdW50IHRvIG1vZGlmeVxuICogQHBhcmFtIG93bmVyICAgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzICAgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbmFibGVSZXF1aXJlZE1lbW9UcmFuc2ZlcnMoY29ubmVjdGlvbiwgcGF5ZXIsIGFjY291bnQsIG93bmVyLCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IFtvd25lclB1YmxpY0tleSwgc2lnbmVyc10gPSBnZXRTaWduZXJzKG93bmVyLCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZUVuYWJsZVJlcXVpcmVkTWVtb1RyYW5zZmVyc0luc3RydWN0aW9uKGFjY291bnQsIG93bmVyUHVibGljS2V5LCBzaWduZXJzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCAuLi5zaWduZXJzXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLyoqXG4gKiBEaXNhYmxlIG1lbW8gdHJhbnNmZXJzIG9uIHRoZSBnaXZlbiBhY2NvdW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICBBY2NvdW50IHRvIG1vZGlmeVxuICogQHBhcmFtIG93bmVyICAgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzICAgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkaXNhYmxlUmVxdWlyZWRNZW1vVHJhbnNmZXJzKGNvbm5lY3Rpb24sIHBheWVyLCBhY2NvdW50LCBvd25lciwgbXVsdGlTaWduZXJzID0gW10sIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbb3duZXJQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVEaXNhYmxlUmVxdWlyZWRNZW1vVHJhbnNmZXJzSW5zdHJ1Y3Rpb24oYWNjb3VudCwgb3duZXJQdWJsaWNLZXksIHNpZ25lcnMsIHByb2dyYW1JZCkpO1xuICAgIHJldHVybiBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbcGF5ZXIsIC4uLnNpZ25lcnNdLCBjb25maXJtT3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/actions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/index.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/actions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _actions_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _actions_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/instructions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _instructions_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _instructions_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/state.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _state_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _state_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21lbW9UcmFuc2Zlci9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTZCO0FBQ0s7QUFDUDtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21lbW9UcmFuc2Zlci9pbmRleC5qcz9jNTM0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2luc3RydWN0aW9ucy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3N0YXRlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/instructions.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/instructions.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MemoTransferInstruction\": function() { return /* binding */ MemoTransferInstruction; },\n/* harmony export */   \"memoTransferInstructionData\": function() { return /* binding */ memoTransferInstructionData; },\n/* harmony export */   \"createEnableRequiredMemoTransfersInstruction\": function() { return /* binding */ createEnableRequiredMemoTransfersInstruction; },\n/* harmony export */   \"createDisableRequiredMemoTransfersInstruction\": function() { return /* binding */ createDisableRequiredMemoTransfersInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _instructions_internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../instructions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instructions/types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\nvar MemoTransferInstruction;\n(function (MemoTransferInstruction) {\n    MemoTransferInstruction[MemoTransferInstruction[\"Enable\"] = 0] = \"Enable\";\n    MemoTransferInstruction[MemoTransferInstruction[\"Disable\"] = 1] = \"Disable\";\n})(MemoTransferInstruction || (MemoTransferInstruction = {}));\n/** TODO: docs */\nconst memoTransferInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('memoTransferInstruction'),\n]);\n/**\n * Construct an EnableRequiredMemoTransfers instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createEnableRequiredMemoTransfersInstruction(account, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    return createMemoTransferInstruction(MemoTransferInstruction.Enable, account, authority, multiSigners, programId);\n}\n/**\n * Construct a DisableMemoTransfer instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createDisableRequiredMemoTransfersInstruction(account, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    return createMemoTransferInstruction(MemoTransferInstruction.Disable, account, authority, multiSigners, programId);\n}\nfunction createMemoTransferInstruction(memoTransferInstruction, account, authority, multiSigners, programId) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([{ pubkey: account, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(memoTransferInstructionData.span);\n    memoTransferInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.MemoTransferExtension,\n        memoTransferInstruction,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21lbW9UcmFuc2Zlci9pbnN0cnVjdGlvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDTTtBQUM2QjtBQUNuQjtBQUNQO0FBQ0c7QUFDeEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBEQUEwRDtBQUMzRDtBQUNPLG9DQUFvQyw2REFBTTtBQUNqRCxJQUFJLHlEQUFFO0FBQ04sSUFBSSx5REFBRTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5R0FBeUcsZ0VBQXFCO0FBQ3JJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBHQUEwRyxnRUFBcUI7QUFDdEk7QUFDQTtBQUNBO0FBQ0EsU0FBUyx3RUFBeUI7QUFDbEMsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGlCQUFpQixxRUFBVSxJQUFJLG9EQUFvRDtBQUNuRixpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQiwwRkFBc0M7QUFDM0Q7QUFDQSxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21lbW9UcmFuc2Zlci9pbnN0cnVjdGlvbnMuanM/NTk2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucywgVE9LRU5fMjAyMl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yIH0gZnJvbSAnLi4vLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuLi8uLi9pbnN0cnVjdGlvbnMvaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4uLy4uL2luc3RydWN0aW9ucy90eXBlcy5qcyc7XG5leHBvcnQgdmFyIE1lbW9UcmFuc2Zlckluc3RydWN0aW9uO1xuKGZ1bmN0aW9uIChNZW1vVHJhbnNmZXJJbnN0cnVjdGlvbikge1xuICAgIE1lbW9UcmFuc2Zlckluc3RydWN0aW9uW01lbW9UcmFuc2Zlckluc3RydWN0aW9uW1wiRW5hYmxlXCJdID0gMF0gPSBcIkVuYWJsZVwiO1xuICAgIE1lbW9UcmFuc2Zlckluc3RydWN0aW9uW01lbW9UcmFuc2Zlckluc3RydWN0aW9uW1wiRGlzYWJsZVwiXSA9IDFdID0gXCJEaXNhYmxlXCI7XG59KShNZW1vVHJhbnNmZXJJbnN0cnVjdGlvbiB8fCAoTWVtb1RyYW5zZmVySW5zdHJ1Y3Rpb24gPSB7fSkpO1xuLyoqIFRPRE86IGRvY3MgKi9cbmV4cG9ydCBjb25zdCBtZW1vVHJhbnNmZXJJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgIHU4KCdtZW1vVHJhbnNmZXJJbnN0cnVjdGlvbicpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBFbmFibGVSZXF1aXJlZE1lbW9UcmFuc2ZlcnMgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgIFRva2VuIGFjY291bnQgdG8gdXBkYXRlXG4gKiBAcGFyYW0gYXV0aG9yaXR5ICAgICAgIFRoZSBhY2NvdW50J3Mgb3duZXIvZGVsZWdhdGVcbiAqIEBwYXJhbSBzaWduZXJzICAgICAgICAgVGhlIHNpZ25lciBhY2NvdW50KHMpXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbmFibGVSZXF1aXJlZE1lbW9UcmFuc2ZlcnNJbnN0cnVjdGlvbihhY2NvdW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICByZXR1cm4gY3JlYXRlTWVtb1RyYW5zZmVySW5zdHJ1Y3Rpb24oTWVtb1RyYW5zZmVySW5zdHJ1Y3Rpb24uRW5hYmxlLCBhY2NvdW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKTtcbn1cbi8qKlxuICogQ29uc3RydWN0IGEgRGlzYWJsZU1lbW9UcmFuc2ZlciBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgICAgVG9rZW4gYWNjb3VudCB0byB1cGRhdGVcbiAqIEBwYXJhbSBhdXRob3JpdHkgICAgICAgVGhlIGFjY291bnQncyBvd25lci9kZWxlZ2F0ZVxuICogQHBhcmFtIHNpZ25lcnMgICAgICAgICBUaGUgc2lnbmVyIGFjY291bnQocylcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURpc2FibGVSZXF1aXJlZE1lbW9UcmFuc2ZlcnNJbnN0cnVjdGlvbihhY2NvdW50LCBhdXRob3JpdHksIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICByZXR1cm4gY3JlYXRlTWVtb1RyYW5zZmVySW5zdHJ1Y3Rpb24oTWVtb1RyYW5zZmVySW5zdHJ1Y3Rpb24uRGlzYWJsZSwgYWNjb3VudCwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMsIHByb2dyYW1JZCk7XG59XG5mdW5jdGlvbiBjcmVhdGVNZW1vVHJhbnNmZXJJbnN0cnVjdGlvbihtZW1vVHJhbnNmZXJJbnN0cnVjdGlvbiwgYWNjb3VudCwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMsIHByb2dyYW1JZCkge1xuICAgIGlmICghcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucyhwcm9ncmFtSWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUb2tlblVuc3VwcG9ydGVkSW5zdHJ1Y3Rpb25FcnJvcigpO1xuICAgIH1cbiAgICBjb25zdCBrZXlzID0gYWRkU2lnbmVycyhbeyBwdWJrZXk6IGFjY291bnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9XSwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MobWVtb1RyYW5zZmVySW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIG1lbW9UcmFuc2Zlckluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5NZW1vVHJhbnNmZXJFeHRlbnNpb24sXG4gICAgICAgIG1lbW9UcmFuc2Zlckluc3RydWN0aW9uLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydWN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/instructions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/state.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/state.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MemoTransferLayout\": function() { return /* binding */ MemoTransferLayout; },\n/* harmony export */   \"MEMO_TRANSFER_SIZE\": function() { return /* binding */ MEMO_TRANSFER_SIZE; },\n/* harmony export */   \"getMemoTransfer\": function() { return /* binding */ getMemoTransfer; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n\n/** Buffer layout for de/serializing a memo transfer extension */\nconst MemoTransferLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.bool)('requireIncomingTransferMemos')]);\nconst MEMO_TRANSFER_SIZE = MemoTransferLayout.span;\nfunction getMemoTransfer(account) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.MemoTransfer, account.tlvData);\n    if (extensionData !== null) {\n        return MemoTransferLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21lbW9UcmFuc2Zlci9zdGF0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0M7QUFDSTtBQUNtQjtBQUN0RTtBQUNPLDJCQUEyQiw2REFBTSxFQUFFLGlFQUFJO0FBQ3ZDO0FBQ0E7QUFDUCwwQkFBMEIsbUVBQWdCLENBQUMseUVBQTBCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vZXh0ZW5zaW9ucy9tZW1vVHJhbnNmZXIvc3RhdGUuanM/OTY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgYm9vbCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBFeHRlbnNpb25UeXBlLCBnZXRFeHRlbnNpb25EYXRhIH0gZnJvbSAnLi4vZXh0ZW5zaW9uVHlwZS5qcyc7XG4vKiogQnVmZmVyIGxheW91dCBmb3IgZGUvc2VyaWFsaXppbmcgYSBtZW1vIHRyYW5zZmVyIGV4dGVuc2lvbiAqL1xuZXhwb3J0IGNvbnN0IE1lbW9UcmFuc2ZlckxheW91dCA9IHN0cnVjdChbYm9vbCgncmVxdWlyZUluY29taW5nVHJhbnNmZXJNZW1vcycpXSk7XG5leHBvcnQgY29uc3QgTUVNT19UUkFOU0ZFUl9TSVpFID0gTWVtb1RyYW5zZmVyTGF5b3V0LnNwYW47XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWVtb1RyYW5zZmVyKGFjY291bnQpIHtcbiAgICBjb25zdCBleHRlbnNpb25EYXRhID0gZ2V0RXh0ZW5zaW9uRGF0YShFeHRlbnNpb25UeXBlLk1lbW9UcmFuc2ZlciwgYWNjb3VudC50bHZEYXRhKTtcbiAgICBpZiAoZXh0ZW5zaW9uRGF0YSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gTWVtb1RyYW5zZmVyTGF5b3V0LmRlY29kZShleHRlbnNpb25EYXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/state.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/mintCloseAuthority.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/mintCloseAuthority.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MintCloseAuthorityLayout\": function() { return /* binding */ MintCloseAuthorityLayout; },\n/* harmony export */   \"MINT_CLOSE_AUTHORITY_SIZE\": function() { return /* binding */ MINT_CLOSE_AUTHORITY_SIZE; },\n/* harmony export */   \"getMintCloseAuthority\": function() { return /* binding */ getMintCloseAuthority; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n\n/** Buffer layout for de/serializing a mint */\nconst MintCloseAuthorityLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('closeAuthority')]);\nconst MINT_CLOSE_AUTHORITY_SIZE = MintCloseAuthorityLayout.span;\nfunction getMintCloseAuthority(mint) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.MintCloseAuthority, mint.tlvData);\n    if (extensionData !== null) {\n        return MintCloseAuthorityLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=mintCloseAuthority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21pbnRDbG9zZUF1dGhvcml0eS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0M7QUFDUztBQUNhO0FBQ3JFO0FBQ08saUNBQWlDLDZEQUFNLEVBQUUsc0VBQVM7QUFDbEQ7QUFDQTtBQUNQLDBCQUEwQixtRUFBZ0IsQ0FBQywrRUFBZ0M7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL21pbnRDbG9zZUF1dGhvcml0eS5qcz82OTFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgRXh0ZW5zaW9uVHlwZSwgZ2V0RXh0ZW5zaW9uRGF0YSB9IGZyb20gJy4vZXh0ZW5zaW9uVHlwZS5qcyc7XG4vKiogQnVmZmVyIGxheW91dCBmb3IgZGUvc2VyaWFsaXppbmcgYSBtaW50ICovXG5leHBvcnQgY29uc3QgTWludENsb3NlQXV0aG9yaXR5TGF5b3V0ID0gc3RydWN0KFtwdWJsaWNLZXkoJ2Nsb3NlQXV0aG9yaXR5JyldKTtcbmV4cG9ydCBjb25zdCBNSU5UX0NMT1NFX0FVVEhPUklUWV9TSVpFID0gTWludENsb3NlQXV0aG9yaXR5TGF5b3V0LnNwYW47XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWludENsb3NlQXV0aG9yaXR5KG1pbnQpIHtcbiAgICBjb25zdCBleHRlbnNpb25EYXRhID0gZ2V0RXh0ZW5zaW9uRGF0YShFeHRlbnNpb25UeXBlLk1pbnRDbG9zZUF1dGhvcml0eSwgbWludC50bHZEYXRhKTtcbiAgICBpZiAoZXh0ZW5zaW9uRGF0YSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gTWludENsb3NlQXV0aG9yaXR5TGF5b3V0LmRlY29kZShleHRlbnNpb25EYXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pbnRDbG9zZUF1dGhvcml0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/mintCloseAuthority.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/nonTransferable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/nonTransferable.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NonTransferableLayout\": function() { return /* binding */ NonTransferableLayout; },\n/* harmony export */   \"NON_TRANSFERABLE_SIZE\": function() { return /* binding */ NON_TRANSFERABLE_SIZE; },\n/* harmony export */   \"getNonTransferable\": function() { return /* binding */ getNonTransferable; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n/** Buffer layout for de/serializing an account */\nconst NonTransferableLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([]);\nconst NON_TRANSFERABLE_SIZE = NonTransferableLayout.span;\nfunction getNonTransferable(mint) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_1__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_1__.ExtensionType.NonTransferable, mint.tlvData);\n    if (extensionData !== null) {\n        return NonTransferableLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=nonTransferable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL25vblRyYW5zZmVyYWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUNzQjtBQUNyRTtBQUNPLDhCQUE4Qiw2REFBTTtBQUNwQztBQUNBO0FBQ1AsMEJBQTBCLG1FQUFnQixDQUFDLDRFQUE2QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvbm9uVHJhbnNmZXJhYmxlLmpzP2Q2YzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IEV4dGVuc2lvblR5cGUsIGdldEV4dGVuc2lvbkRhdGEgfSBmcm9tICcuL2V4dGVuc2lvblR5cGUuanMnO1xuLyoqIEJ1ZmZlciBsYXlvdXQgZm9yIGRlL3NlcmlhbGl6aW5nIGFuIGFjY291bnQgKi9cbmV4cG9ydCBjb25zdCBOb25UcmFuc2ZlcmFibGVMYXlvdXQgPSBzdHJ1Y3QoW10pO1xuZXhwb3J0IGNvbnN0IE5PTl9UUkFOU0ZFUkFCTEVfU0laRSA9IE5vblRyYW5zZmVyYWJsZUxheW91dC5zcGFuO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5vblRyYW5zZmVyYWJsZShtaW50KSB7XG4gICAgY29uc3QgZXh0ZW5zaW9uRGF0YSA9IGdldEV4dGVuc2lvbkRhdGEoRXh0ZW5zaW9uVHlwZS5Ob25UcmFuc2ZlcmFibGUsIG1pbnQudGx2RGF0YSk7XG4gICAgaWYgKGV4dGVuc2lvbkRhdGEgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIE5vblRyYW5zZmVyYWJsZUxheW91dC5kZWNvZGUoZXh0ZW5zaW9uRGF0YSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub25UcmFuc2ZlcmFibGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/nonTransferable.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/permanentDelegate.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/permanentDelegate.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PermanentDelegateLayout\": function() { return /* binding */ PermanentDelegateLayout; },\n/* harmony export */   \"PERMANENT_DELEGATE_SIZE\": function() { return /* binding */ PERMANENT_DELEGATE_SIZE; },\n/* harmony export */   \"getPermanentDelegate\": function() { return /* binding */ getPermanentDelegate; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n\n/** Buffer layout for de/serializing a mint */\nconst PermanentDelegateLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('delegate')]);\nconst PERMANENT_DELEGATE_SIZE = PermanentDelegateLayout.span;\nfunction getPermanentDelegate(mint) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.PermanentDelegate, mint.tlvData);\n    if (extensionData !== null) {\n        return PermanentDelegateLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=permanentDelegate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL3Blcm1hbmVudERlbGVnYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNTO0FBQ2E7QUFDckU7QUFDTyxnQ0FBZ0MsNkRBQU0sRUFBRSxzRUFBUztBQUNqRDtBQUNBO0FBQ1AsMEJBQTBCLG1FQUFnQixDQUFDLDhFQUErQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvcGVybWFuZW50RGVsZWdhdGUuanM/ZDY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgcHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IEV4dGVuc2lvblR5cGUsIGdldEV4dGVuc2lvbkRhdGEgfSBmcm9tICcuL2V4dGVuc2lvblR5cGUuanMnO1xuLyoqIEJ1ZmZlciBsYXlvdXQgZm9yIGRlL3NlcmlhbGl6aW5nIGEgbWludCAqL1xuZXhwb3J0IGNvbnN0IFBlcm1hbmVudERlbGVnYXRlTGF5b3V0ID0gc3RydWN0KFtwdWJsaWNLZXkoJ2RlbGVnYXRlJyldKTtcbmV4cG9ydCBjb25zdCBQRVJNQU5FTlRfREVMRUdBVEVfU0laRSA9IFBlcm1hbmVudERlbGVnYXRlTGF5b3V0LnNwYW47XG5leHBvcnQgZnVuY3Rpb24gZ2V0UGVybWFuZW50RGVsZWdhdGUobWludCkge1xuICAgIGNvbnN0IGV4dGVuc2lvbkRhdGEgPSBnZXRFeHRlbnNpb25EYXRhKEV4dGVuc2lvblR5cGUuUGVybWFuZW50RGVsZWdhdGUsIG1pbnQudGx2RGF0YSk7XG4gICAgaWYgKGV4dGVuc2lvbkRhdGEgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIFBlcm1hbmVudERlbGVnYXRlTGF5b3V0LmRlY29kZShleHRlbnNpb25EYXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBlcm1hbmVudERlbGVnYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/permanentDelegate.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/actions.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/actions.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transferCheckedWithFee\": function() { return /* binding */ transferCheckedWithFee; },\n/* harmony export */   \"withdrawWithheldTokensFromMint\": function() { return /* binding */ withdrawWithheldTokensFromMint; },\n/* harmony export */   \"withdrawWithheldTokensFromAccounts\": function() { return /* binding */ withdrawWithheldTokensFromAccounts; },\n/* harmony export */   \"harvestWithheldTokensToMint\": function() { return /* binding */ harvestWithheldTokensToMint; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _actions_internal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/internal.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/instructions.js\");\n\n\n\n\n/**\n * Transfer tokens from one account to another, asserting the transfer fee, token mint, and decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param source         Source account\n * @param mint           Mint for the account\n * @param destination    Destination account\n * @param owner          Owner of the source account\n * @param amount         Number of tokens to transfer\n * @param decimals       Number of decimals in transfer amount\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function transferCheckedWithFee(connection, payer, source, mint, destination, owner, amount, decimals, fee, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(owner, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createTransferCheckedWithFeeInstruction)(source, mint, destination, ownerPublicKey, amount, decimals, fee, multiSigners, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n/**\n * Withdraw withheld tokens from mint\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           The token mint\n * @param destination    The destination account\n * @param authority      The mint's withdraw withheld tokens authority\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function withdrawWithheldTokensFromMint(connection, payer, mint, destination, authority, multiSigners = [], confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createWithdrawWithheldTokensFromMintInstruction)(mint, destination, authorityPublicKey, signers, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n/**\n * Withdraw withheld tokens from accounts\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           The token mint\n * @param destination    The destination account\n * @param authority      The mint's withdraw withheld tokens authority\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param sources        Source accounts from which to withdraw withheld fees\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function withdrawWithheldTokensFromAccounts(connection, payer, mint, destination, authority, multiSigners, sources, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0,_actions_internal_js__WEBPACK_IMPORTED_MODULE_2__.getSigners)(authority, multiSigners);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createWithdrawWithheldTokensFromAccountsInstruction)(mint, destination, authorityPublicKey, signers, sources, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n}\n/**\n * Harvest withheld tokens from accounts to the mint\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           The token mint\n * @param sources        Source accounts from which to withdraw withheld fees\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Signature of the confirmed transaction\n */\nasync function harvestWithheldTokensToMint(connection, payer, mint, sources, confirmOptions, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_2022_PROGRAM_ID) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction().add((0,_instructions_js__WEBPACK_IMPORTED_MODULE_3__.createHarvestWithheldTokensToMintInstruction)(mint, sources, programId));\n    return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n}\n//# sourceMappingURL=actions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL3RyYW5zZmVyRmVlL2FjdGlvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBeUU7QUFDbEI7QUFDSTtBQUNzSztBQUNqTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUtBQWlLLGdFQUFxQjtBQUM3TCxzQ0FBc0MsZ0VBQVU7QUFDaEQsNEJBQTRCLHdEQUFXLE9BQU8seUZBQXVDO0FBQ3JGLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOElBQThJLGdFQUFxQjtBQUMxSywwQ0FBMEMsZ0VBQVU7QUFDcEQsNEJBQTRCLHdEQUFXLE9BQU8saUdBQStDO0FBQzdGLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzSkFBc0osZ0VBQXFCO0FBQ2xMLDBDQUEwQyxnRUFBVTtBQUNwRCw0QkFBNEIsd0RBQVcsT0FBTyxxR0FBbUQ7QUFDakcsaUJBQWlCLDBFQUF5QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlHQUF5RyxnRUFBcUI7QUFDckksNEJBQTRCLHdEQUFXLE9BQU8sOEZBQTRDO0FBQzFGLGlCQUFpQiwwRUFBeUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL3RyYW5zZmVyRmVlL2FjdGlvbnMuanM/ZTNmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBnZXRTaWduZXJzIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUT0tFTl8yMDIyX1BST0dSQU1fSUQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlSGFydmVzdFdpdGhoZWxkVG9rZW5zVG9NaW50SW5zdHJ1Y3Rpb24sIGNyZWF0ZVRyYW5zZmVyQ2hlY2tlZFdpdGhGZWVJbnN0cnVjdGlvbiwgY3JlYXRlV2l0aGRyYXdXaXRoaGVsZFRva2Vuc0Zyb21BY2NvdW50c0luc3RydWN0aW9uLCBjcmVhdGVXaXRoZHJhd1dpdGhoZWxkVG9rZW5zRnJvbU1pbnRJbnN0cnVjdGlvbiwgfSBmcm9tICcuL2luc3RydWN0aW9ucy5qcyc7XG4vKipcbiAqIFRyYW5zZmVyIHRva2VucyBmcm9tIG9uZSBhY2NvdW50IHRvIGFub3RoZXIsIGFzc2VydGluZyB0aGUgdHJhbnNmZXIgZmVlLCB0b2tlbiBtaW50LCBhbmQgZGVjaW1hbHNcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIHNvdXJjZSAgICAgICAgIFNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgTWludCBmb3IgdGhlIGFjY291bnRcbiAqIEBwYXJhbSBkZXN0aW5hdGlvbiAgICBEZXN0aW5hdGlvbiBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgICAgT3duZXIgb2YgdGhlIHNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgICAgTnVtYmVyIG9mIHRva2VucyB0byB0cmFuc2ZlclxuICogQHBhcmFtIGRlY2ltYWxzICAgICAgIE51bWJlciBvZiBkZWNpbWFscyBpbiB0cmFuc2ZlciBhbW91bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIGNvbmZpcm1PcHRpb25zIE9wdGlvbnMgZm9yIGNvbmZpcm1pbmcgdGhlIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gU2lnbmF0dXJlIG9mIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRyYW5zZmVyQ2hlY2tlZFdpdGhGZWUoY29ubmVjdGlvbiwgcGF5ZXIsIHNvdXJjZSwgbWludCwgZGVzdGluYXRpb24sIG93bmVyLCBhbW91bnQsIGRlY2ltYWxzLCBmZWUsIG11bHRpU2lnbmVycyA9IFtdLCBjb25maXJtT3B0aW9ucywgcHJvZ3JhbUlkID0gVE9LRU5fMjAyMl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgW293bmVyUHVibGljS2V5LCBzaWduZXJzXSA9IGdldFNpZ25lcnMob3duZXIsIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlVHJhbnNmZXJDaGVja2VkV2l0aEZlZUluc3RydWN0aW9uKHNvdXJjZSwgbWludCwgZGVzdGluYXRpb24sIG93bmVyUHVibGljS2V5LCBhbW91bnQsIGRlY2ltYWxzLCBmZWUsIG11bHRpU2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8qKlxuICogV2l0aGRyYXcgd2l0aGhlbGQgdG9rZW5zIGZyb20gbWludFxuICpcbiAqIEBwYXJhbSBjb25uZWN0aW9uICAgICBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIHBheWVyICAgICAgICAgIFBheWVyIG9mIHRoZSB0cmFuc2FjdGlvbiBmZWVzXG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgVGhlIHRva2VuIG1pbnRcbiAqIEBwYXJhbSBkZXN0aW5hdGlvbiAgICBUaGUgZGVzdGluYXRpb24gYWNjb3VudFxuICogQHBhcmFtIGF1dGhvcml0eSAgICAgIFRoZSBtaW50J3Mgd2l0aGRyYXcgd2l0aGhlbGQgdG9rZW5zIGF1dGhvcml0eVxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgIFNpZ25pbmcgYWNjb3VudHMgaWYgYG93bmVyYCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gY29uZmlybU9wdGlvbnMgT3B0aW9ucyBmb3IgY29uZmlybWluZyB0aGUgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBTaWduYXR1cmUgb2YgdGhlIGNvbmZpcm1lZCB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2l0aGRyYXdXaXRoaGVsZFRva2Vuc0Zyb21NaW50KGNvbm5lY3Rpb24sIHBheWVyLCBtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMgPSBbXSwgY29uZmlybU9wdGlvbnMsIHByb2dyYW1JZCA9IFRPS0VOXzIwMjJfUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IFthdXRob3JpdHlQdWJsaWNLZXksIHNpZ25lcnNdID0gZ2V0U2lnbmVycyhhdXRob3JpdHksIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKS5hZGQoY3JlYXRlV2l0aGRyYXdXaXRoaGVsZFRva2Vuc0Zyb21NaW50SW5zdHJ1Y3Rpb24obWludCwgZGVzdGluYXRpb24sIGF1dGhvcml0eVB1YmxpY0tleSwgc2lnbmVycywgcHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGF3YWl0IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtwYXllciwgLi4uc2lnbmVyc10sIGNvbmZpcm1PcHRpb25zKTtcbn1cbi8qKlxuICogV2l0aGRyYXcgd2l0aGhlbGQgdG9rZW5zIGZyb20gYWNjb3VudHNcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiAgICAgQ29ubmVjdGlvbiB0byB1c2VcbiAqIEBwYXJhbSBwYXllciAgICAgICAgICBQYXllciBvZiB0aGUgdHJhbnNhY3Rpb24gZmVlc1xuICogQHBhcmFtIG1pbnQgICAgICAgICAgIFRoZSB0b2tlbiBtaW50XG4gKiBAcGFyYW0gZGVzdGluYXRpb24gICAgVGhlIGRlc3RpbmF0aW9uIGFjY291bnRcbiAqIEBwYXJhbSBhdXRob3JpdHkgICAgICBUaGUgbWludCdzIHdpdGhkcmF3IHdpdGhoZWxkIHRva2VucyBhdXRob3JpdHlcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgICBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIHNvdXJjZXMgICAgICAgIFNvdXJjZSBhY2NvdW50cyBmcm9tIHdoaWNoIHRvIHdpdGhkcmF3IHdpdGhoZWxkIGZlZXNcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3aXRoZHJhd1dpdGhoZWxkVG9rZW5zRnJvbUFjY291bnRzKGNvbm5lY3Rpb24sIHBheWVyLCBtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMsIHNvdXJjZXMsIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBbYXV0aG9yaXR5UHVibGljS2V5LCBzaWduZXJzXSA9IGdldFNpZ25lcnMoYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCkuYWRkKGNyZWF0ZVdpdGhkcmF3V2l0aGhlbGRUb2tlbnNGcm9tQWNjb3VudHNJbnN0cnVjdGlvbihtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5UHVibGljS2V5LCBzaWduZXJzLCBzb3VyY2VzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyLCAuLi5zaWduZXJzXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLyoqXG4gKiBIYXJ2ZXN0IHdpdGhoZWxkIHRva2VucyBmcm9tIGFjY291bnRzIHRvIHRoZSBtaW50XG4gKlxuICogQHBhcmFtIGNvbm5lY3Rpb24gICAgIENvbm5lY3Rpb24gdG8gdXNlXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgUGF5ZXIgb2YgdGhlIHRyYW5zYWN0aW9uIGZlZXNcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBUaGUgdG9rZW4gbWludFxuICogQHBhcmFtIHNvdXJjZXMgICAgICAgIFNvdXJjZSBhY2NvdW50cyBmcm9tIHdoaWNoIHRvIHdpdGhkcmF3IHdpdGhoZWxkIGZlZXNcbiAqIEBwYXJhbSBjb25maXJtT3B0aW9ucyBPcHRpb25zIGZvciBjb25maXJtaW5nIHRoZSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIFNpZ25hdHVyZSBvZiB0aGUgY29uZmlybWVkIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYXJ2ZXN0V2l0aGhlbGRUb2tlbnNUb01pbnQoY29ubmVjdGlvbiwgcGF5ZXIsIG1pbnQsIHNvdXJjZXMsIGNvbmZpcm1PcHRpb25zLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpLmFkZChjcmVhdGVIYXJ2ZXN0V2l0aGhlbGRUb2tlbnNUb01pbnRJbnN0cnVjdGlvbihtaW50LCBzb3VyY2VzLCBwcm9ncmFtSWQpKTtcbiAgICByZXR1cm4gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgW3BheWVyXSwgY29uZmlybU9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/actions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/index.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/actions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _actions_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _actions_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _instructions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instructions.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/instructions.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _instructions_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _instructions_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/state.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _state_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _state_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL3RyYW5zZmVyRmVlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDSztBQUNQO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2V4dGVuc2lvbnMvdHJhbnNmZXJGZWUvaW5kZXguanM/ZWI5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FjdGlvbnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbnN0cnVjdGlvbnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zdGF0ZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/instructions.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/instructions.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TransferFeeInstruction\": function() { return /* binding */ TransferFeeInstruction; },\n/* harmony export */   \"initializeTransferFeeConfigInstructionData\": function() { return /* binding */ initializeTransferFeeConfigInstructionData; },\n/* harmony export */   \"createInitializeTransferFeeConfigInstruction\": function() { return /* binding */ createInitializeTransferFeeConfigInstruction; },\n/* harmony export */   \"decodeInitializeTransferFeeConfigInstruction\": function() { return /* binding */ decodeInitializeTransferFeeConfigInstruction; },\n/* harmony export */   \"decodeInitializeTransferFeeConfigInstructionUnchecked\": function() { return /* binding */ decodeInitializeTransferFeeConfigInstructionUnchecked; },\n/* harmony export */   \"transferCheckedWithFeeInstructionData\": function() { return /* binding */ transferCheckedWithFeeInstructionData; },\n/* harmony export */   \"createTransferCheckedWithFeeInstruction\": function() { return /* binding */ createTransferCheckedWithFeeInstruction; },\n/* harmony export */   \"decodeTransferCheckedWithFeeInstruction\": function() { return /* binding */ decodeTransferCheckedWithFeeInstruction; },\n/* harmony export */   \"decodeTransferCheckedWithFeeInstructionUnchecked\": function() { return /* binding */ decodeTransferCheckedWithFeeInstructionUnchecked; },\n/* harmony export */   \"withdrawWithheldTokensFromMintInstructionData\": function() { return /* binding */ withdrawWithheldTokensFromMintInstructionData; },\n/* harmony export */   \"createWithdrawWithheldTokensFromMintInstruction\": function() { return /* binding */ createWithdrawWithheldTokensFromMintInstruction; },\n/* harmony export */   \"decodeWithdrawWithheldTokensFromMintInstruction\": function() { return /* binding */ decodeWithdrawWithheldTokensFromMintInstruction; },\n/* harmony export */   \"decodeWithdrawWithheldTokensFromMintInstructionUnchecked\": function() { return /* binding */ decodeWithdrawWithheldTokensFromMintInstructionUnchecked; },\n/* harmony export */   \"withdrawWithheldTokensFromAccountsInstructionData\": function() { return /* binding */ withdrawWithheldTokensFromAccountsInstructionData; },\n/* harmony export */   \"createWithdrawWithheldTokensFromAccountsInstruction\": function() { return /* binding */ createWithdrawWithheldTokensFromAccountsInstruction; },\n/* harmony export */   \"decodeWithdrawWithheldTokensFromAccountsInstruction\": function() { return /* binding */ decodeWithdrawWithheldTokensFromAccountsInstruction; },\n/* harmony export */   \"decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked\": function() { return /* binding */ decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked; },\n/* harmony export */   \"harvestWithheldTokensToMintInstructionData\": function() { return /* binding */ harvestWithheldTokensToMintInstructionData; },\n/* harmony export */   \"createHarvestWithheldTokensToMintInstruction\": function() { return /* binding */ createHarvestWithheldTokensToMintInstruction; },\n/* harmony export */   \"decodeHarvestWithheldTokensToMintInstruction\": function() { return /* binding */ decodeHarvestWithheldTokensToMintInstruction; },\n/* harmony export */   \"decodeHarvestWithheldTokensToMintInstructionUnchecked\": function() { return /* binding */ decodeHarvestWithheldTokensToMintInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _instructions_internal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../instructions/internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instructions/types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\nvar TransferFeeInstruction;\n(function (TransferFeeInstruction) {\n    TransferFeeInstruction[TransferFeeInstruction[\"InitializeTransferFeeConfig\"] = 0] = \"InitializeTransferFeeConfig\";\n    TransferFeeInstruction[TransferFeeInstruction[\"TransferCheckedWithFee\"] = 1] = \"TransferCheckedWithFee\";\n    TransferFeeInstruction[TransferFeeInstruction[\"WithdrawWithheldTokensFromMint\"] = 2] = \"WithdrawWithheldTokensFromMint\";\n    TransferFeeInstruction[TransferFeeInstruction[\"WithdrawWithheldTokensFromAccounts\"] = 3] = \"WithdrawWithheldTokensFromAccounts\";\n    TransferFeeInstruction[TransferFeeInstruction[\"HarvestWithheldTokensToMint\"] = 4] = \"HarvestWithheldTokensToMint\";\n    TransferFeeInstruction[TransferFeeInstruction[\"SetTransferFee\"] = 5] = \"SetTransferFee\";\n})(TransferFeeInstruction || (TransferFeeInstruction = {}));\n/** TODO: docs */\nconst initializeTransferFeeConfigInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('transferFeeInstruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('transferFeeConfigAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('transferFeeConfigAuthority'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('withdrawWithheldAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('withdrawWithheldAuthority'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u16)('transferFeeBasisPoints'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('maximumFee'),\n]);\n/**\n * Construct an InitializeTransferFeeConfig instruction\n *\n * @param mint            Token mint account\n * @param transferFeeConfigAuthority  Optional authority that can update the fees\n * @param withdrawWithheldAuthority Optional authority that can withdraw fees\n * @param transferFeeBasisPoints Amount of transfer collected as fees, expressed as basis points of the transfer amount\n * @param maximumFee        Maximum fee assessed on transfers\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeTransferFeeConfigInstruction(mint, transferFeeConfigAuthority, withdrawWithheldAuthority, transferFeeBasisPoints, maximumFee, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeTransferFeeConfigInstructionData.span);\n    initializeTransferFeeConfigInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.InitializeTransferFeeConfig,\n        transferFeeConfigAuthorityOption: transferFeeConfigAuthority ? 1 : 0,\n        transferFeeConfigAuthority: transferFeeConfigAuthority || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n        withdrawWithheldAuthorityOption: withdrawWithheldAuthority ? 1 : 0,\n        withdrawWithheldAuthority: withdrawWithheldAuthority || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n        transferFeeBasisPoints: transferFeeBasisPoints,\n        maximumFee: maximumFee,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeTransferFeeConfig instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeTransferFeeConfigInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeTransferFeeConfigInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializeTransferFeeConfigInstructionUnchecked(instruction);\n    if (data.instruction !== _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.InitializeTransferFeeConfig)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeTransferFeeConfig instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeTransferFeeConfigInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, transferFeeInstruction, transferFeeConfigAuthorityOption, transferFeeConfigAuthority, withdrawWithheldAuthorityOption, withdrawWithheldAuthority, transferFeeBasisPoints, maximumFee, } = initializeTransferFeeConfigInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            transferFeeConfigAuthority: transferFeeConfigAuthorityOption ? transferFeeConfigAuthority : null,\n            withdrawWithheldAuthority: withdrawWithheldAuthorityOption ? withdrawWithheldAuthority : null,\n            transferFeeBasisPoints,\n            maximumFee,\n        },\n    };\n}\nconst transferCheckedWithFeeInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('transferFeeInstruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('fee'),\n]);\n/**\n * Construct an TransferCheckedWithFee instruction\n *\n * @param source          The source account\n * @param mint            The token mint\n * @param destination     The destination account\n * @param authority       The source account's owner/delegate\n * @param signers         The signer account(s)\n * @param amount          The amount of tokens to transfer\n * @param decimals        The expected number of base 10 digits to the right of the decimal place\n * @param fee             The expected fee assesed on this transfer, calculated off-chain based on the transferFeeBasisPoints and maximumFee of the mint.\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createTransferCheckedWithFeeInstruction(source, mint, destination, authority, amount, decimals, fee, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(transferCheckedWithFeeInstructionData.span);\n    transferCheckedWithFeeInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.TransferCheckedWithFee,\n        amount,\n        decimals,\n        fee,\n    }, data);\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_6__.addSigners)([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a TransferCheckedWithFee instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeTransferCheckedWithFeeInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferCheckedWithFeeInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { source, mint, destination, authority, signers }, data, } = decodeTransferCheckedWithFeeInstructionUnchecked(instruction);\n    if (data.instruction !== _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.TransferCheckedWithFee)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            authority,\n            signers: signers ? signers : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a TransferCheckedWithFees instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeTransferCheckedWithFeeInstructionUnchecked({ programId, keys: [source, mint, destination, authority, ...signers], data, }) {\n    const { instruction, transferFeeInstruction, amount, decimals, fee } = transferCheckedWithFeeInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            authority,\n            signers,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            amount,\n            decimals,\n            fee,\n        },\n    };\n}\nconst withdrawWithheldTokensFromMintInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('transferFeeInstruction'),\n]);\n/**\n * Construct a WithdrawWithheldTokensFromMint instruction\n *\n * @param mint              The token mint\n * @param destination       The destination account\n * @param authority         The source account's owner/delegate\n * @param signers           The signer account(s)\n * @param programID         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createWithdrawWithheldTokensFromMintInstruction(mint, destination, authority, signers = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(withdrawWithheldTokensFromMintInstructionData.span);\n    withdrawWithheldTokensFromMintInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.WithdrawWithheldTokensFromMint,\n    }, data);\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_6__.addSigners)([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, signers);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a WithdrawWithheldTokensFromMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeWithdrawWithheldTokensFromMintInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== withdrawWithheldTokensFromMintInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, signers }, data, } = decodeWithdrawWithheldTokensFromMintInstructionUnchecked(instruction);\n    if (data.instruction !== _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.WithdrawWithheldTokensFromMint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers: signers ? signers : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a WithdrawWithheldTokensFromMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeWithdrawWithheldTokensFromMintInstructionUnchecked({ programId, keys: [mint, destination, authority, ...signers], data, }) {\n    const { instruction, transferFeeInstruction } = withdrawWithheldTokensFromMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n        },\n    };\n}\nconst withdrawWithheldTokensFromAccountsInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('transferFeeInstruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('numTokenAccounts'),\n]);\n/**\n * Construct a WithdrawWithheldTokensFromAccounts instruction\n *\n * @param mint              The token mint\n * @param destination       The destination account\n * @param authority         The source account's owner/delegate\n * @param signers           The signer account(s)\n * @param sources           The source accounts to withdraw from\n * @param programID         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createWithdrawWithheldTokensFromAccountsInstruction(mint, destination, authority, signers, sources, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(withdrawWithheldTokensFromAccountsInstructionData.span);\n    withdrawWithheldTokensFromAccountsInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.WithdrawWithheldTokensFromAccounts,\n        numTokenAccounts: sources.length,\n    }, data);\n    const keys = (0,_instructions_internal_js__WEBPACK_IMPORTED_MODULE_6__.addSigners)([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, signers);\n    for (const source of sources) {\n        keys.push({ pubkey: source, isSigner: false, isWritable: true });\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a WithdrawWithheldTokensFromAccounts instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeWithdrawWithheldTokensFromAccountsInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== withdrawWithheldTokensFromAccountsInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, signers, sources }, data, } = decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked(instruction);\n    if (data.instruction !== _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.WithdrawWithheldTokensFromAccounts)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers: signers ? signers : null,\n            sources: sources ? sources : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a WithdrawWithheldTokensFromAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked({ programId, keys, data, }) {\n    const { instruction, transferFeeInstruction, numTokenAccounts } = withdrawWithheldTokensFromAccountsInstructionData.decode(data);\n    const [mint, destination, authority, signers, sources] = [\n        keys[0],\n        keys[1],\n        keys[2],\n        keys.slice(3, 3 + numTokenAccounts),\n        keys.slice(-1 * numTokenAccounts),\n    ];\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers,\n            sources,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            numTokenAccounts,\n        },\n    };\n}\nconst harvestWithheldTokensToMintInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('transferFeeInstruction'),\n]);\n/**\n * Construct a HarvestWithheldTokensToMint instruction\n *\n * @param mint              The token mint\n * @param sources           The source accounts to withdraw from\n * @param programID         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createHarvestWithheldTokensToMintInstruction(mint, sources, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(harvestWithheldTokensToMintInstructionData.span);\n    harvestWithheldTokensToMintInstructionData.encode({\n        instruction: _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.HarvestWithheldTokensToMint,\n    }, data);\n    const keys = [];\n    keys.push({ pubkey: mint, isSigner: false, isWritable: true });\n    for (const source of sources) {\n        keys.push({ pubkey: source, isSigner: false, isWritable: true });\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a HarvestWithheldTokensToMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeHarvestWithheldTokensToMintInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== harvestWithheldTokensToMintInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint, sources }, data, } = decodeHarvestWithheldTokensToMintInstructionUnchecked(instruction);\n    if (data.instruction !== _instructions_types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.HarvestWithheldTokensToMint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            sources,\n        },\n        data,\n    };\n}\n/**\n * Decode a HarvestWithheldTokensToMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeHarvestWithheldTokensToMintInstructionUnchecked({ programId, keys: [mint, ...sources], data, }) {\n    const { instruction, transferFeeInstruction } = harvestWithheldTokensToMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            sources,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n        },\n    };\n}\n//# sourceMappingURL=instructions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/instructions.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/state.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/state.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MAX_FEE_BASIS_POINTS\": function() { return /* binding */ MAX_FEE_BASIS_POINTS; },\n/* harmony export */   \"ONE_IN_BASIS_POINTS\": function() { return /* binding */ ONE_IN_BASIS_POINTS; },\n/* harmony export */   \"transferFeeLayout\": function() { return /* binding */ transferFeeLayout; },\n/* harmony export */   \"TransferFeeConfigLayout\": function() { return /* binding */ TransferFeeConfigLayout; },\n/* harmony export */   \"TRANSFER_FEE_CONFIG_SIZE\": function() { return /* binding */ TRANSFER_FEE_CONFIG_SIZE; },\n/* harmony export */   \"TransferFeeAmountLayout\": function() { return /* binding */ TransferFeeAmountLayout; },\n/* harmony export */   \"TRANSFER_FEE_AMOUNT_SIZE\": function() { return /* binding */ TRANSFER_FEE_AMOUNT_SIZE; },\n/* harmony export */   \"getTransferFeeConfig\": function() { return /* binding */ getTransferFeeConfig; },\n/* harmony export */   \"getTransferFeeAmount\": function() { return /* binding */ getTransferFeeAmount; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _extensionType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n\n\n\nconst MAX_FEE_BASIS_POINTS = 10000;\nconst ONE_IN_BASIS_POINTS = MAX_FEE_BASIS_POINTS;\n/** Buffer layout for de/serializing a transfer fee */\nfunction transferFeeLayout(property) {\n    return (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('epoch'), (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('maximumFee'), (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u16)('transferFeeBasisPoints')], property);\n}\n/** Buffer layout for de/serializing a transfer fee config extension */\nconst TransferFeeConfigLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('transferFeeConfigAuthority'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('withdrawWithheldAuthority'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('withheldAmount'),\n    transferFeeLayout('olderTransferFee'),\n    transferFeeLayout('newerTransferFee'),\n]);\nconst TRANSFER_FEE_CONFIG_SIZE = TransferFeeConfigLayout.span;\n/** Buffer layout for de/serializing */\nconst TransferFeeAmountLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('withheldAmount')]);\nconst TRANSFER_FEE_AMOUNT_SIZE = TransferFeeAmountLayout.span;\nfunction getTransferFeeConfig(mint) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.TransferFeeConfig, mint.tlvData);\n    if (extensionData !== null) {\n        return TransferFeeConfigLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\nfunction getTransferFeeAmount(account) {\n    const extensionData = (0,_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.getExtensionData)(_extensionType_js__WEBPACK_IMPORTED_MODULE_2__.ExtensionType.TransferFeeAmount, account.tlvData);\n    if (extensionData !== null) {\n        return TransferFeeAmountLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL3RyYW5zZmVyRmVlL3N0YXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFvRDtBQUNTO0FBQ1M7QUFDL0Q7QUFDQTtBQUNQO0FBQ087QUFDUCxXQUFXLDZEQUFNLEVBQUUsZ0VBQUcsV0FBVyxnRUFBRyxnQkFBZ0IsMERBQUc7QUFDdkQ7QUFDQTtBQUNPLGdDQUFnQyw2REFBTTtBQUM3QyxJQUFJLHNFQUFTO0FBQ2IsSUFBSSxzRUFBUztBQUNiLElBQUksZ0VBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ08sZ0NBQWdDLDZEQUFNLEVBQUUsZ0VBQUc7QUFDM0M7QUFDQTtBQUNQLDBCQUEwQixtRUFBZ0IsQ0FBQyw4RUFBK0I7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDBCQUEwQixtRUFBZ0IsQ0FBQyw4RUFBK0I7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9leHRlbnNpb25zL3RyYW5zZmVyRmVlL3N0YXRlLmpzPzY0OWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1MTYgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgcHVibGljS2V5LCB1NjQgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgRXh0ZW5zaW9uVHlwZSwgZ2V0RXh0ZW5zaW9uRGF0YSB9IGZyb20gJy4uL2V4dGVuc2lvblR5cGUuanMnO1xuZXhwb3J0IGNvbnN0IE1BWF9GRUVfQkFTSVNfUE9JTlRTID0gMTAwMDA7XG5leHBvcnQgY29uc3QgT05FX0lOX0JBU0lTX1BPSU5UUyA9IE1BWF9GRUVfQkFTSVNfUE9JTlRTO1xuLyoqIEJ1ZmZlciBsYXlvdXQgZm9yIGRlL3NlcmlhbGl6aW5nIGEgdHJhbnNmZXIgZmVlICovXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmZXJGZWVMYXlvdXQocHJvcGVydHkpIHtcbiAgICByZXR1cm4gc3RydWN0KFt1NjQoJ2Vwb2NoJyksIHU2NCgnbWF4aW11bUZlZScpLCB1MTYoJ3RyYW5zZmVyRmVlQmFzaXNQb2ludHMnKV0sIHByb3BlcnR5KTtcbn1cbi8qKiBCdWZmZXIgbGF5b3V0IGZvciBkZS9zZXJpYWxpemluZyBhIHRyYW5zZmVyIGZlZSBjb25maWcgZXh0ZW5zaW9uICovXG5leHBvcnQgY29uc3QgVHJhbnNmZXJGZWVDb25maWdMYXlvdXQgPSBzdHJ1Y3QoW1xuICAgIHB1YmxpY0tleSgndHJhbnNmZXJGZWVDb25maWdBdXRob3JpdHknKSxcbiAgICBwdWJsaWNLZXkoJ3dpdGhkcmF3V2l0aGhlbGRBdXRob3JpdHknKSxcbiAgICB1NjQoJ3dpdGhoZWxkQW1vdW50JyksXG4gICAgdHJhbnNmZXJGZWVMYXlvdXQoJ29sZGVyVHJhbnNmZXJGZWUnKSxcbiAgICB0cmFuc2ZlckZlZUxheW91dCgnbmV3ZXJUcmFuc2ZlckZlZScpLFxuXSk7XG5leHBvcnQgY29uc3QgVFJBTlNGRVJfRkVFX0NPTkZJR19TSVpFID0gVHJhbnNmZXJGZWVDb25maWdMYXlvdXQuc3Bhbjtcbi8qKiBCdWZmZXIgbGF5b3V0IGZvciBkZS9zZXJpYWxpemluZyAqL1xuZXhwb3J0IGNvbnN0IFRyYW5zZmVyRmVlQW1vdW50TGF5b3V0ID0gc3RydWN0KFt1NjQoJ3dpdGhoZWxkQW1vdW50JyldKTtcbmV4cG9ydCBjb25zdCBUUkFOU0ZFUl9GRUVfQU1PVU5UX1NJWkUgPSBUcmFuc2ZlckZlZUFtb3VudExheW91dC5zcGFuO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRyYW5zZmVyRmVlQ29uZmlnKG1pbnQpIHtcbiAgICBjb25zdCBleHRlbnNpb25EYXRhID0gZ2V0RXh0ZW5zaW9uRGF0YShFeHRlbnNpb25UeXBlLlRyYW5zZmVyRmVlQ29uZmlnLCBtaW50LnRsdkRhdGEpO1xuICAgIGlmIChleHRlbnNpb25EYXRhICE9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBUcmFuc2ZlckZlZUNvbmZpZ0xheW91dC5kZWNvZGUoZXh0ZW5zaW9uRGF0YSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJhbnNmZXJGZWVBbW91bnQoYWNjb3VudCkge1xuICAgIGNvbnN0IGV4dGVuc2lvbkRhdGEgPSBnZXRFeHRlbnNpb25EYXRhKEV4dGVuc2lvblR5cGUuVHJhbnNmZXJGZWVBbW91bnQsIGFjY291bnQudGx2RGF0YSk7XG4gICAgaWYgKGV4dGVuc2lvbkRhdGEgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIFRyYW5zZmVyRmVlQW1vdW50TGF5b3V0LmRlY29kZShleHRlbnNpb25EYXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/extensions/transferFee/state.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _actions_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions/index.js */ \"./node_modules/@solana/spl-token/lib/esm/actions/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _actions_index_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _actions_index_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _constants_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _errors_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _errors_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _extensions_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensions/index.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _extensions_index_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _extensions_index_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _instructions_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instructions/index.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _instructions_index_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _instructions_index_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _state_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./state/index.js */ \"./node_modules/@solana/spl-token/lib/esm/state/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _state_index_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _state_index_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW1DO0FBQ0o7QUFDSDtBQUNVO0FBQ0U7QUFDUDtBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbmRleC5qcz8yM2MyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Vycm9ycy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2V4dGVuc2lvbnMvaW5kZXguanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbnN0cnVjdGlvbnMvaW5kZXguanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zdGF0ZS9pbmRleC5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"amountToUiAmountInstructionData\": function() { return /* binding */ amountToUiAmountInstructionData; },\n/* harmony export */   \"createAmountToUiAmountInstruction\": function() { return /* binding */ createAmountToUiAmountInstruction; },\n/* harmony export */   \"decodeAmountToUiAmountInstruction\": function() { return /* binding */ decodeAmountToUiAmountInstruction; },\n/* harmony export */   \"decodeAmountToUiAmountInstructionUnchecked\": function() { return /* binding */ decodeAmountToUiAmountInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst amountToUiAmountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n]);\n/**\n * Construct a AmountToUiAmount instruction\n *\n * @param mint         Public key of the mint\n * @param amount       Amount of tokens to be converted to UiAmount\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createAmountToUiAmountInstruction(mint, amount, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: false }];\n    const data = Buffer.alloc(amountToUiAmountInstructionData.span);\n    amountToUiAmountInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.AmountToUiAmount,\n        amount: BigInt(amount),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a AmountToUiAmount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeAmountToUiAmountInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== amountToUiAmountInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeAmountToUiAmountInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.AmountToUiAmount)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode a AmountToUiAmount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeAmountToUiAmountInstructionUnchecked({ programId, keys: [mint], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: amountToUiAmountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=amountToUiAmount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYW1vdW50VG9VaUFtb3VudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNEO0FBQ087QUFDTjtBQUN1SDtBQUM1SDtBQUM5QztBQUNPLHdDQUF3Qyw2REFBTTtBQUNyRCxJQUFJLHlEQUFFO0FBQ04sSUFBSSxnRUFBRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUVBQXFFLDJEQUFnQjtBQUM1RixvQkFBb0Isa0RBQWtEO0FBQ3RFLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0EscUJBQXFCLHdFQUFpQztBQUN0RDtBQUNBLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxvRUFBb0UsMkRBQWdCO0FBQzNGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLE1BQU0sVUFBVTtBQUNwQyw2QkFBNkIsd0VBQWlDO0FBQzlELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0RBQXNELGdDQUFnQztBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYW1vdW50VG9VaUFtb3VudC5qcz85NmE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgdTY0IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIFRPRE86IGRvY3MgKi9cbmV4cG9ydCBjb25zdCBhbW91bnRUb1VpQW1vdW50SW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFtcbiAgICB1OCgnaW5zdHJ1Y3Rpb24nKSxcbiAgICB1NjQoJ2Ftb3VudCcpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhIEFtb3VudFRvVWlBbW91bnQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gbWludCAgICAgICAgIFB1YmxpYyBrZXkgb2YgdGhlIG1pbnRcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgQW1vdW50IG9mIHRva2VucyB0byBiZSBjb252ZXJ0ZWQgdG8gVWlBbW91bnRcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFtb3VudFRvVWlBbW91bnRJbnN0cnVjdGlvbihtaW50LCBhbW91bnQsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBrZXlzID0gW3sgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH1dO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoYW1vdW50VG9VaUFtb3VudEluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBhbW91bnRUb1VpQW1vdW50SW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkFtb3VudFRvVWlBbW91bnQsXG4gICAgICAgIGFtb3VudDogQmlnSW50KGFtb3VudCksXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBBbW91bnRUb1VpQW1vdW50IGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQW1vdW50VG9VaUFtb3VudEluc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFpbnN0cnVjdGlvbi5wcm9ncmFtSWQuZXF1YWxzKHByb2dyYW1JZCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvcigpO1xuICAgIGlmIChpbnN0cnVjdGlvbi5kYXRhLmxlbmd0aCAhPT0gYW1vdW50VG9VaUFtb3VudEluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgbWludCB9LCBkYXRhLCB9ID0gZGVjb2RlQW1vdW50VG9VaUFtb3VudEluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5BbW91bnRUb1VpQW1vdW50KVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIW1pbnQpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgbWludCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWNvZGUgYSBBbW91bnRUb1VpQW1vdW50IGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFtb3VudFRvVWlBbW91bnRJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW21pbnRdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBhbW91bnRUb1VpQW1vdW50SW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW1vdW50VG9VaUFtb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/approve.js":
/*!************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/approve.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"approveInstructionData\": function() { return /* binding */ approveInstructionData; },\n/* harmony export */   \"createApproveInstruction\": function() { return /* binding */ createApproveInstruction; },\n/* harmony export */   \"decodeApproveInstruction\": function() { return /* binding */ decodeApproveInstruction; },\n/* harmony export */   \"decodeApproveInstructionUnchecked\": function() { return /* binding */ decodeApproveInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst approveInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'), (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeApproveInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Approve)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYXBwcm92ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDRDtBQUNPO0FBQ047QUFDdUg7QUFDL0g7QUFDRztBQUM5QztBQUNPLCtCQUErQiw2REFBTSxFQUFFLHlEQUFFLGlCQUFpQixnRUFBRztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtR0FBbUcsMkRBQWdCO0FBQzFILGlCQUFpQix3REFBVTtBQUMzQixVQUFVLG9EQUFvRDtBQUM5RCxVQUFVLHNEQUFzRDtBQUNoRTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0EscUJBQXFCLCtEQUF3QjtBQUM3QztBQUNBLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyREFBMkQsMkRBQWdCO0FBQ2xGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLHdDQUF3QyxVQUFVO0FBQ3RFLDZCQUE2QiwrREFBd0I7QUFDckQsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZDQUE2QyxxRUFBcUU7QUFDekg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL2FwcHJvdmUuanM/MDczYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHU2NCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgYXBwcm92ZUluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbdTgoJ2luc3RydWN0aW9uJyksIHU2NCgnYW1vdW50JyldKTtcbi8qKlxuICogQ29uc3RydWN0IGFuIEFwcHJvdmUgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgIEFjY291bnQgdG8gc2V0IHRoZSBkZWxlZ2F0ZSBmb3JcbiAqIEBwYXJhbSBkZWxlZ2F0ZSAgICAgQWNjb3VudCBhdXRob3JpemVkIHRvIHRyYW5zZmVyIHRva2VucyBmcm9tIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgIE1heGltdW0gbnVtYmVyIG9mIHRva2VucyB0aGUgZGVsZWdhdGUgbWF5IHRyYW5zZmVyXG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzIFNpZ25pbmcgYWNjb3VudHMgaWYgYG93bmVyYCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBcHByb3ZlSW5zdHJ1Y3Rpb24oYWNjb3VudCwgZGVsZWdhdGUsIG93bmVyLCBhbW91bnQsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IGFkZFNpZ25lcnMoW1xuICAgICAgICB7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBkZWxlZ2F0ZSwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgIF0sIG93bmVyLCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoYXBwcm92ZUluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBhcHByb3ZlSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkFwcHJvdmUsXG4gICAgICAgIGFtb3VudDogQmlnSW50KGFtb3VudCksXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gQXBwcm92ZSBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFwcHJvdmVJbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IGFwcHJvdmVJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIGRlbGVnYXRlLCBvd25lciwgbXVsdGlTaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVBcHByb3ZlSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLkFwcHJvdmUpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudCB8fCAhZGVsZWdhdGUgfHwgIW93bmVyKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IoKTtcbiAgICAvLyBUT0RPOiBrZXkgY2hlY2tzP1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIGRlbGVnYXRlLFxuICAgICAgICAgICAgb3duZXIsXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGFuIEFwcHJvdmUgaW5zdHJ1Y3Rpb24gd2l0aG91dCB2YWxpZGF0aW5nIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgbm9uLXZhbGlkYXRlZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXBwcm92ZUluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgZGVsZWdhdGUsIG93bmVyLCAuLi5tdWx0aVNpZ25lcnNdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgZGVsZWdhdGUsXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogYXBwcm92ZUluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcHJvdmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/approve.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"approveCheckedInstructionData\": function() { return /* binding */ approveCheckedInstructionData; },\n/* harmony export */   \"createApproveCheckedInstruction\": function() { return /* binding */ createApproveCheckedInstruction; },\n/* harmony export */   \"decodeApproveCheckedInstruction\": function() { return /* binding */ decodeApproveCheckedInstruction; },\n/* harmony export */   \"decodeApproveCheckedInstructionUnchecked\": function() { return /* binding */ decodeApproveCheckedInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst approveCheckedInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n]);\n/**\n * Construct an ApproveChecked instruction\n *\n * @param account      Account to set the delegate for\n * @param mint         Mint account\n * @param delegate     Account authorized to transfer of tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param decimals     Number of decimals in approve amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createApproveCheckedInstruction(account, mint, delegate, owner, amount, decimals, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveCheckedInstructionData.span);\n    approveCheckedInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.ApproveChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an ApproveChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeApproveCheckedInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveCheckedInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, delegate, owner, multiSigners }, data, } = decodeApproveCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.ApproveChecked)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !delegate || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an ApproveChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeApproveCheckedInstructionUnchecked({ programId, keys: [account, mint, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approveChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYXBwcm92ZUNoZWNrZWQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0Q7QUFDTztBQUNOO0FBQ3VIO0FBQy9IO0FBQ0c7QUFDOUM7QUFDTyxzQ0FBc0MsNkRBQU07QUFDbkQsSUFBSSx5REFBRTtBQUNOLElBQUksZ0VBQUc7QUFDUCxJQUFJLHlEQUFFO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMEhBQTBILDJEQUFnQjtBQUNqSixpQkFBaUIsd0RBQVU7QUFDM0IsVUFBVSxvREFBb0Q7QUFDOUQsVUFBVSxrREFBa0Q7QUFDNUQsVUFBVSxzREFBc0Q7QUFDaEU7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQixzRUFBK0I7QUFDcEQ7QUFDQTtBQUNBLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrRUFBa0UsMkRBQWdCO0FBQ3pGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLDhDQUE4QyxVQUFVO0FBQzVFLDZCQUE2QixzRUFBK0I7QUFDNUQsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0RBQW9ELDJFQUEyRTtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9hcHByb3ZlQ2hlY2tlZC5qcz85YTQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgdTY0IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgYWRkU2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIFRPRE86IGRvY3MgKi9cbmV4cG9ydCBjb25zdCBhcHByb3ZlQ2hlY2tlZEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgdTY0KCdhbW91bnQnKSxcbiAgICB1OCgnZGVjaW1hbHMnKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYW4gQXBwcm92ZUNoZWNrZWQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgIEFjY291bnQgdG8gc2V0IHRoZSBkZWxlZ2F0ZSBmb3JcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgTWludCBhY2NvdW50XG4gKiBAcGFyYW0gZGVsZWdhdGUgICAgIEFjY291bnQgYXV0aG9yaXplZCB0byB0cmFuc2ZlciBvZiB0b2tlbnMgZnJvbSB0aGUgYWNjb3VudFxuICogQHBhcmFtIG93bmVyICAgICAgICBPd25lciBvZiB0aGUgYWNjb3VudFxuICogQHBhcmFtIGFtb3VudCAgICAgICBNYXhpbXVtIG51bWJlciBvZiB0b2tlbnMgdGhlIGRlbGVnYXRlIG1heSB0cmFuc2ZlclxuICogQHBhcmFtIGRlY2ltYWxzICAgICBOdW1iZXIgb2YgZGVjaW1hbHMgaW4gYXBwcm92ZSBhbW91bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb24oYWNjb3VudCwgbWludCwgZGVsZWdhdGUsIG93bmVyLCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFtcbiAgICAgICAgeyBwdWJrZXk6IGFjY291bnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgICAgICB7IHB1YmtleTogZGVsZWdhdGUsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogZmFsc2UgfSxcbiAgICBdLCBvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkFwcHJvdmVDaGVja2VkLFxuICAgICAgICBhbW91bnQ6IEJpZ0ludChhbW91bnQpLFxuICAgICAgICBkZWNpbWFscyxcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vKipcbiAqIERlY29kZSBhbiBBcHByb3ZlQ2hlY2tlZCBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBhcHByb3ZlQ2hlY2tlZEluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgYWNjb3VudCwgbWludCwgZGVsZWdhdGUsIG93bmVyLCBtdWx0aVNpZ25lcnMgfSwgZGF0YSwgfSA9IGRlY29kZUFwcHJvdmVDaGVja2VkSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLkFwcHJvdmVDaGVja2VkKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIWFjY291bnQgfHwgIW1pbnQgfHwgIWRlbGVnYXRlIHx8ICFvd25lcilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgZGVsZWdhdGUsXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gQXBwcm92ZUNoZWNrZWQgaW5zdHJ1Y3Rpb24gd2l0aG91dCB2YWxpZGF0aW5nIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgbm9uLXZhbGlkYXRlZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXBwcm92ZUNoZWNrZWRJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW2FjY291bnQsIG1pbnQsIGRlbGVnYXRlLCBvd25lciwgLi4ubXVsdGlTaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgICAgICBkZWxlZ2F0ZSxcbiAgICAgICAgICAgIG93bmVyLFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBhcHByb3ZlQ2hlY2tlZEluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcHJvdmVDaGVja2VkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAssociatedTokenAccountInstruction\": function() { return /* binding */ createAssociatedTokenAccountInstruction; },\n/* harmony export */   \"createAssociatedTokenAccountIdempotentInstruction\": function() { return /* binding */ createAssociatedTokenAccountIdempotentInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3RTtBQUNRO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtHQUFrRywyREFBZ0IsNkJBQTZCLHNFQUEyQjtBQUNqTCx1RkFBdUYsTUFBTTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRHQUE0RywyREFBZ0IsNkJBQTZCLHNFQUEyQjtBQUMzTCx1RkFBdUYsTUFBTTtBQUM3RjtBQUNBLGtIQUFrSCwyREFBZ0IsNkJBQTZCLHNFQUEyQjtBQUMxTDtBQUNBLFVBQVUsaURBQWlEO0FBQzNELFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsbURBQW1EO0FBQzdELFVBQVUsa0RBQWtEO0FBQzVELFVBQVUsUUFBUSxvRUFBdUIsc0NBQXNDO0FBQy9FLFVBQVUsdURBQXVEO0FBQ2pFO0FBQ0EsZUFBZSxtRUFBc0I7QUFDckM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL2Fzc29jaWF0ZWRUb2tlbkFjY291bnQuanM/YzI2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTeXN0ZW1Qcm9ncmFtLCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IEFTU09DSUFURURfVE9LRU5fUFJPR1JBTV9JRCwgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG4vKipcbiAqIENvbnN0cnVjdCBhIENyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgICAgICAgICAgIFBheWVyIG9mIHRoZSBpbml0aWFsaXphdGlvbiBmZWVzXG4gKiBAcGFyYW0gYXNzb2NpYXRlZFRva2VuICAgICAgICAgIE5ldyBhc3NvY2lhdGVkIHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICAgICAgICAgICAgT3duZXIgb2YgdGhlIG5ldyBhY2NvdW50XG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgICAgICAgICAgIFRva2VuIG1pbnQgYWNjb3VudFxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKiBAcGFyYW0gYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkIFNQTCBBc3NvY2lhdGVkIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJbnN0cnVjdGlvbihwYXllciwgYXNzb2NpYXRlZFRva2VuLCBvd25lciwgbWludCwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkID0gQVNTT0NJQVRFRF9UT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgcmV0dXJuIGJ1aWxkQXNzb2NpYXRlZFRva2VuQWNjb3VudEluc3RydWN0aW9uKHBheWVyLCBhc3NvY2lhdGVkVG9rZW4sIG93bmVyLCBtaW50LCBCdWZmZXIuYWxsb2MoMCksIHByb2dyYW1JZCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkKTtcbn1cbi8qKlxuICogQ29uc3RydWN0IGEgQ3JlYXRlQXNzb2NpYXRlZFRva2VuQWNjb3VudElkZW1wb3RlbnQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gcGF5ZXIgICAgICAgICAgICAgICAgICAgIFBheWVyIG9mIHRoZSBpbml0aWFsaXphdGlvbiBmZWVzXG4gKiBAcGFyYW0gYXNzb2NpYXRlZFRva2VuICAgICAgICAgIE5ldyBhc3NvY2lhdGVkIHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBvd25lciAgICAgICAgICAgICAgICAgICAgT3duZXIgb2YgdGhlIG5ldyBhY2NvdW50XG4gKiBAcGFyYW0gbWludCAgICAgICAgICAgICAgICAgICAgIFRva2VuIG1pbnQgYWNjb3VudFxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKiBAcGFyYW0gYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkIFNQTCBBc3NvY2lhdGVkIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFzc29jaWF0ZWRUb2tlbkFjY291bnRJZGVtcG90ZW50SW5zdHJ1Y3Rpb24ocGF5ZXIsIGFzc29jaWF0ZWRUb2tlbiwgb3duZXIsIG1pbnQsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQsIGFzc29jaWF0ZWRUb2tlblByb2dyYW1JZCA9IEFTU09DSUFURURfVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIHJldHVybiBidWlsZEFzc29jaWF0ZWRUb2tlbkFjY291bnRJbnN0cnVjdGlvbihwYXllciwgYXNzb2NpYXRlZFRva2VuLCBvd25lciwgbWludCwgQnVmZmVyLmZyb20oWzFdKSwgcHJvZ3JhbUlkLCBhc3NvY2lhdGVkVG9rZW5Qcm9ncmFtSWQpO1xufVxuZnVuY3Rpb24gYnVpbGRBc3NvY2lhdGVkVG9rZW5BY2NvdW50SW5zdHJ1Y3Rpb24ocGF5ZXIsIGFzc29jaWF0ZWRUb2tlbiwgb3duZXIsIG1pbnQsIGluc3RydWN0aW9uRGF0YSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCwgYXNzb2NpYXRlZFRva2VuUHJvZ3JhbUlkID0gQVNTT0NJQVRFRF9UT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IFtcbiAgICAgICAgeyBwdWJrZXk6IHBheWVyLCBpc1NpZ25lcjogdHJ1ZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogYXNzb2NpYXRlZFRva2VuLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IG93bmVyLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgICAgIHsgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgICAgIHsgcHVia2V5OiBTeXN0ZW1Qcm9ncmFtLnByb2dyYW1JZCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgICAgICB7IHB1YmtleTogcHJvZ3JhbUlkLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgXTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oe1xuICAgICAgICBrZXlzLFxuICAgICAgICBwcm9ncmFtSWQ6IGFzc29jaWF0ZWRUb2tlblByb2dyYW1JZCxcbiAgICAgICAgZGF0YTogaW5zdHJ1Y3Rpb25EYXRhLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXNzb2NpYXRlZFRva2VuQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/burn.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/burn.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"burnInstructionData\": function() { return /* binding */ burnInstructionData; },\n/* harmony export */   \"createBurnInstruction\": function() { return /* binding */ createBurnInstruction; },\n/* harmony export */   \"decodeBurnInstruction\": function() { return /* binding */ decodeBurnInstruction; },\n/* harmony export */   \"decodeBurnInstructionUnchecked\": function() { return /* binding */ decodeBurnInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst burnInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'), (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount')]);\n/**\n * Construct a Burn instruction\n *\n * @param account      Account to burn tokens from\n * @param mint         Mint for the account\n * @param owner        Owner of the account\n * @param amount       Number of tokens to burn\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createBurnInstruction(account, mint, owner, amount, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(burnInstructionData.span);\n    burnInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Burn,\n        amount: BigInt(amount),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Burn instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeBurnInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== burnInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, multiSigners }, data, } = decodeBurnInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Burn)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Burn instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeBurnInstructionUnchecked({ programId, keys: [account, mint, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data: burnInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=burn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYnVybi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDRDtBQUNPO0FBQ047QUFDdUg7QUFDL0g7QUFDRztBQUM5QztBQUNPLDRCQUE0Qiw2REFBTSxFQUFFLHlEQUFFLGlCQUFpQixnRUFBRztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0RkFBNEYsMkRBQWdCO0FBQ25ILGlCQUFpQix3REFBVTtBQUMzQixVQUFVLG9EQUFvRDtBQUM5RCxVQUFVLGlEQUFpRDtBQUMzRDtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0EscUJBQXFCLDREQUFxQjtBQUMxQztBQUNBLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3REFBd0QsMkRBQWdCO0FBQy9FO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLG9DQUFvQyxVQUFVO0FBQ2xFLDZCQUE2Qiw0REFBcUI7QUFDbEQsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQyxpRUFBaUU7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL2J1cm4uanM/YzVjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHU2NCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgYnVybkluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbdTgoJ2luc3RydWN0aW9uJyksIHU2NCgnYW1vdW50JyldKTtcbi8qKlxuICogQ29uc3RydWN0IGEgQnVybiBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgQWNjb3VudCB0byBidXJuIHRva2VucyBmcm9tXG4gKiBAcGFyYW0gbWludCAgICAgICAgIE1pbnQgZm9yIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgIE51bWJlciBvZiB0b2tlbnMgdG8gYnVyblxuICogQHBhcmFtIG11bHRpU2lnbmVycyBTaWduaW5nIGFjY291bnRzIGlmIGBvd25lcmAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIHByb2dyYW1JZCAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQnVybkluc3RydWN0aW9uKGFjY291bnQsIG1pbnQsIG93bmVyLCBhbW91bnQsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IGFkZFNpZ25lcnMoW1xuICAgICAgICB7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICBdLCBvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGJ1cm5JbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgYnVybkluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5CdXJuLFxuICAgICAgICBhbW91bnQ6IEJpZ0ludChhbW91bnQpLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGEgQnVybiBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ1cm5JbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IGJ1cm5JbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG1pbnQsIG93bmVyLCBtdWx0aVNpZ25lcnMgfSwgZGF0YSwgfSA9IGRlY29kZUJ1cm5JbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uQnVybilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFhY2NvdW50IHx8ICFtaW50IHx8ICFvd25lcilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgb3duZXIsXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgQnVybiBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCdXJuSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFthY2NvdW50LCBtaW50LCBvd25lciwgLi4ubXVsdGlTaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogYnVybkluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1cm4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/burn.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"burnCheckedInstructionData\": function() { return /* binding */ burnCheckedInstructionData; },\n/* harmony export */   \"createBurnCheckedInstruction\": function() { return /* binding */ createBurnCheckedInstruction; },\n/* harmony export */   \"decodeBurnCheckedInstruction\": function() { return /* binding */ decodeBurnCheckedInstruction; },\n/* harmony export */   \"decodeBurnCheckedInstructionUnchecked\": function() { return /* binding */ decodeBurnCheckedInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst burnCheckedInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n]);\n/**\n * Construct a BurnChecked instruction\n *\n * @param mint         Mint for the account\n * @param account      Account to burn tokens from\n * @param owner        Owner of the account\n * @param amount       Number of tokens to burn\n * @param decimals     Number of decimals in burn amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createBurnCheckedInstruction(account, mint, owner, amount, decimals, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(burnCheckedInstructionData.span);\n    burnCheckedInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.BurnChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a BurnChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeBurnCheckedInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== burnCheckedInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, multiSigners }, data, } = decodeBurnCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.BurnChecked)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a BurnChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeBurnCheckedInstructionUnchecked({ programId, keys: [account, mint, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data: burnCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=burnChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvYnVybkNoZWNrZWQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0Q7QUFDTztBQUNOO0FBQ3VIO0FBQy9IO0FBQ0c7QUFDOUM7QUFDTyxtQ0FBbUMsNkRBQU07QUFDaEQsSUFBSSx5REFBRTtBQUNOLElBQUksZ0VBQUc7QUFDUCxJQUFJLHlEQUFFO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZHQUE2RywyREFBZ0I7QUFDcEksaUJBQWlCLHdEQUFVO0FBQzNCLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsaURBQWlEO0FBQzNEO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsbUVBQTRCO0FBQ2pEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0RBQStELDJEQUFnQjtBQUN0RjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSxvQ0FBb0MsVUFBVTtBQUNsRSw2QkFBNkIsbUVBQTRCO0FBQ3pELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpREFBaUQsaUVBQWlFO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9idXJuQ2hlY2tlZC5qcz9kOTRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgdTY0IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgYWRkU2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIFRPRE86IGRvY3MgKi9cbmV4cG9ydCBjb25zdCBidXJuQ2hlY2tlZEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgdTY0KCdhbW91bnQnKSxcbiAgICB1OCgnZGVjaW1hbHMnKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSBCdXJuQ2hlY2tlZCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgTWludCBmb3IgdGhlIGFjY291bnRcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgQWNjb3VudCB0byBidXJuIHRva2VucyBmcm9tXG4gKiBAcGFyYW0gb3duZXIgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgIE51bWJlciBvZiB0b2tlbnMgdG8gYnVyblxuICogQHBhcmFtIGRlY2ltYWxzICAgICBOdW1iZXIgb2YgZGVjaW1hbHMgaW4gYnVybiBhbW91bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJ1cm5DaGVja2VkSW5zdHJ1Y3Rpb24oYWNjb3VudCwgbWludCwgb3duZXIsIGFtb3VudCwgZGVjaW1hbHMsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IGFkZFNpZ25lcnMoW1xuICAgICAgICB7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICBdLCBvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGJ1cm5DaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGJ1cm5DaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkJ1cm5DaGVja2VkLFxuICAgICAgICBhbW91bnQ6IEJpZ0ludChhbW91bnQpLFxuICAgICAgICBkZWNpbWFscyxcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vKipcbiAqIERlY29kZSBhIEJ1cm5DaGVja2VkIGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnVybkNoZWNrZWRJbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IGJ1cm5DaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvcigpO1xuICAgIGNvbnN0IHsga2V5czogeyBhY2NvdW50LCBtaW50LCBvd25lciwgbXVsdGlTaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVCdXJuQ2hlY2tlZEluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5CdXJuQ2hlY2tlZClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFhY2NvdW50IHx8ICFtaW50IHx8ICFvd25lcilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgb3duZXIsXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgQnVybkNoZWNrZWQgaW5zdHJ1Y3Rpb24gd2l0aG91dCB2YWxpZGF0aW5nIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgbm9uLXZhbGlkYXRlZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnVybkNoZWNrZWRJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW2FjY291bnQsIG1pbnQsIG93bmVyLCAuLi5tdWx0aVNpZ25lcnNdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgbWludCxcbiAgICAgICAgICAgIG93bmVyLFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBidXJuQ2hlY2tlZEluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1cm5DaGVja2VkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeAccountInstructionData\": function() { return /* binding */ closeAccountInstructionData; },\n/* harmony export */   \"createCloseAccountInstruction\": function() { return /* binding */ createCloseAccountInstruction; },\n/* harmony export */   \"decodeCloseAccountInstruction\": function() { return /* binding */ decodeCloseAccountInstruction; },\n/* harmony export */   \"decodeCloseAccountInstructionUnchecked\": function() { return /* binding */ decodeCloseAccountInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst closeAccountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct a CloseAccount instruction\n *\n * @param account      Account to close\n * @param destination  Account to receive the remaining balance of the closed account\n * @param authority    Account close authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createCloseAccountInstruction(account, destination, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_3__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(closeAccountInstructionData.span);\n    closeAccountInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.CloseAccount }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a CloseAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeCloseAccountInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== closeAccountInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { account, destination, authority, multiSigners }, data, } = decodeCloseAccountInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.CloseAccount)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!account || !destination || !authority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a CloseAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeCloseAccountInstructionUnchecked({ programId, keys: [account, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: closeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=closeAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvY2xvc2VBY2NvdW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ007QUFDTjtBQUN1SDtBQUMvSDtBQUNHO0FBQzlDO0FBQ08sb0NBQW9DLDZEQUFNLEVBQUUseURBQUU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHVHQUF1RywyREFBZ0I7QUFDOUgsaUJBQWlCLHdEQUFVO0FBQzNCLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsd0RBQXdEO0FBQ2xFO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkIseUNBQXlDLGFBQWEsb0VBQTZCLEVBQUU7QUFDckYsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0VBQWdFLDJEQUFnQjtBQUN2RjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSwrQ0FBK0MsVUFBVTtBQUM3RSw2QkFBNkIsb0VBQTZCO0FBQzFELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrREFBa0QsNEVBQTRFO0FBQ3JJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9jbG9zZUFjY291bnQuanM/MDc1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgYWRkU2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIFRPRE86IGRvY3MgKi9cbmV4cG9ydCBjb25zdCBjbG9zZUFjY291bnRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW3U4KCdpbnN0cnVjdGlvbicpXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhIENsb3NlQWNjb3VudCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgICAgQWNjb3VudCB0byBjbG9zZVxuICogQHBhcmFtIGRlc3RpbmF0aW9uICBBY2NvdW50IHRvIHJlY2VpdmUgdGhlIHJlbWFpbmluZyBiYWxhbmNlIG9mIHRoZSBjbG9zZWQgYWNjb3VudFxuICogQHBhcmFtIGF1dGhvcml0eSAgICBBY2NvdW50IGNsb3NlIGF1dGhvcml0eVxuICogQHBhcmFtIG11bHRpU2lnbmVycyBTaWduaW5nIGFjY291bnRzIGlmIGBhdXRob3JpdHlgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNsb3NlQWNjb3VudEluc3RydWN0aW9uKGFjY291bnQsIGRlc3RpbmF0aW9uLCBhdXRob3JpdHksIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IGFkZFNpZ25lcnMoW1xuICAgICAgICB7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBkZXN0aW5hdGlvbiwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgXSwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoY2xvc2VBY2NvdW50SW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGNsb3NlQWNjb3VudEluc3RydWN0aW9uRGF0YS5lbmNvZGUoeyBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5DbG9zZUFjY291bnQgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBDbG9zZUFjY291bnQgaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVDbG9zZUFjY291bnRJbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IGNsb3NlQWNjb3VudEluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgYWNjb3VudCwgZGVzdGluYXRpb24sIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVDbG9zZUFjY291bnRJbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uQ2xvc2VBY2NvdW50KVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIWFjY291bnQgfHwgIWRlc3RpbmF0aW9uIHx8ICFhdXRob3JpdHkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIC8vIFRPRE86IGtleSBjaGVja3M/XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICBhdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgQ2xvc2VBY2NvdW50IGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUNsb3NlQWNjb3VudEluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgZGVzdGluYXRpb24sIGF1dGhvcml0eSwgLi4ubXVsdGlTaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgYXV0aG9yaXR5LFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBjbG9zZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbG9zZUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/createNativeMint.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/createNativeMint.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNativeMintInstructionData\": function() { return /* binding */ createNativeMintInstructionData; },\n/* harmony export */   \"createCreateNativeMintInstruction\": function() { return /* binding */ createCreateNativeMintInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n/** TODO: docs */\nconst createNativeMintInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct a CreateNativeMint instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     Owner of the new account\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createCreateNativeMintInstruction(payer, nativeMintId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.NATIVE_MINT_2022, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: nativeMintId, isSigner: false, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.programId, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(createNativeMintInstructionData.span);\n    createNativeMintInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.CreateNativeMint }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=createNativeMint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvY3JlYXRlTmF0aXZlTWludC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtRDtBQUNxQjtBQUM2QjtBQUNyQztBQUNsQjtBQUM5QztBQUNPLHdDQUF3Qyw2REFBTSxFQUFFLHlEQUFFO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUVBQWlFLDJEQUFnQixjQUFjLGdFQUFxQjtBQUMzSCxTQUFTLHdFQUF5QjtBQUNsQyxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQSxVQUFVLGlEQUFpRDtBQUMzRCxVQUFVLHlEQUF5RDtBQUNuRSxVQUFVLFFBQVEsb0VBQXVCLHNDQUFzQztBQUMvRTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCLDZDQUE2QyxhQUFhLHdFQUFpQyxFQUFFO0FBQzdGLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL2NyZWF0ZU5hdGl2ZU1pbnQuanM/NjIzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFN5c3RlbVByb2dyYW0sIFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgTkFUSVZFX01JTlRfMjAyMiwgcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucywgVE9LRU5fMjAyMl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgY3JlYXRlTmF0aXZlTWludEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbdTgoJ2luc3RydWN0aW9uJyldKTtcbi8qKlxuICogQ29uc3RydWN0IGEgQ3JlYXRlTmF0aXZlTWludCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgTmV3IHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBtaW50ICAgICAgTWludCBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgIE93bmVyIG9mIHRoZSBuZXcgYWNjb3VudFxuICogQHBhcmFtIHByb2dyYW1JZCBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ3JlYXRlTmF0aXZlTWludEluc3RydWN0aW9uKHBheWVyLCBuYXRpdmVNaW50SWQgPSBOQVRJVkVfTUlOVF8yMDIyLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIXByb2dyYW1TdXBwb3J0c0V4dGVuc2lvbnMocHJvZ3JhbUlkKSkge1xuICAgICAgICB0aHJvdyBuZXcgVG9rZW5VbnN1cHBvcnRlZEluc3RydWN0aW9uRXJyb3IoKTtcbiAgICB9XG4gICAgY29uc3Qga2V5cyA9IFtcbiAgICAgICAgeyBwdWJrZXk6IHBheWVyLCBpc1NpZ25lcjogdHJ1ZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogbmF0aXZlTWludElkLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IFN5c3RlbVByb2dyYW0ucHJvZ3JhbUlkLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgXTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGNyZWF0ZU5hdGl2ZU1pbnRJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgY3JlYXRlTmF0aXZlTWludEluc3RydWN0aW9uRGF0YS5lbmNvZGUoeyBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5DcmVhdGVOYXRpdmVNaW50IH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZU5hdGl2ZU1pbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/createNativeMint.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/decode.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/decode.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeInstruction\": function() { return /* binding */ decodeInstruction; },\n/* harmony export */   \"isInitializeMintInstruction\": function() { return /* binding */ isInitializeMintInstruction; },\n/* harmony export */   \"isInitializeAccountInstruction\": function() { return /* binding */ isInitializeAccountInstruction; },\n/* harmony export */   \"isInitializeMultisigInstruction\": function() { return /* binding */ isInitializeMultisigInstruction; },\n/* harmony export */   \"isTransferInstruction\": function() { return /* binding */ isTransferInstruction; },\n/* harmony export */   \"isApproveInstruction\": function() { return /* binding */ isApproveInstruction; },\n/* harmony export */   \"isRevokeInstruction\": function() { return /* binding */ isRevokeInstruction; },\n/* harmony export */   \"isSetAuthorityInstruction\": function() { return /* binding */ isSetAuthorityInstruction; },\n/* harmony export */   \"isMintToInstruction\": function() { return /* binding */ isMintToInstruction; },\n/* harmony export */   \"isBurnInstruction\": function() { return /* binding */ isBurnInstruction; },\n/* harmony export */   \"isCloseAccountInstruction\": function() { return /* binding */ isCloseAccountInstruction; },\n/* harmony export */   \"isFreezeAccountInstruction\": function() { return /* binding */ isFreezeAccountInstruction; },\n/* harmony export */   \"isThawAccountInstruction\": function() { return /* binding */ isThawAccountInstruction; },\n/* harmony export */   \"isTransferCheckedInstruction\": function() { return /* binding */ isTransferCheckedInstruction; },\n/* harmony export */   \"isApproveCheckedInstruction\": function() { return /* binding */ isApproveCheckedInstruction; },\n/* harmony export */   \"isMintToCheckedInstruction\": function() { return /* binding */ isMintToCheckedInstruction; },\n/* harmony export */   \"isBurnCheckedInstruction\": function() { return /* binding */ isBurnCheckedInstruction; },\n/* harmony export */   \"isInitializeAccount2Instruction\": function() { return /* binding */ isInitializeAccount2Instruction; },\n/* harmony export */   \"isSyncNativeInstruction\": function() { return /* binding */ isSyncNativeInstruction; },\n/* harmony export */   \"isInitializeAccount3Instruction\": function() { return /* binding */ isInitializeAccount3Instruction; },\n/* harmony export */   \"isInitializeMint2Instruction\": function() { return /* binding */ isInitializeMint2Instruction; },\n/* harmony export */   \"isAmountToUiAmountInstruction\": function() { return /* binding */ isAmountToUiAmountInstruction; },\n/* harmony export */   \"isUiamountToAmountInstruction\": function() { return /* binding */ isUiamountToAmountInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./amountToUiAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js\");\n/* harmony import */ var _approve_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./approve.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/approve.js\");\n/* harmony import */ var _approveChecked_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./approveChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js\");\n/* harmony import */ var _burn_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./burn.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/burn.js\");\n/* harmony import */ var _burnChecked_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./burnChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js\");\n/* harmony import */ var _closeAccount_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./closeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js\");\n/* harmony import */ var _freezeAccount_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./freezeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js\");\n/* harmony import */ var _initializeAccount_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initializeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js\");\n/* harmony import */ var _initializeAccount2_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./initializeAccount2.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount2.js\");\n/* harmony import */ var _initializeAccount3_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./initializeAccount3.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount3.js\");\n/* harmony import */ var _initializeMint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./initializeMint.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js\");\n/* harmony import */ var _initializeMint2_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./initializeMint2.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js\");\n/* harmony import */ var _initializeMultisig_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./initializeMultisig.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js\");\n/* harmony import */ var _mintTo_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mintTo.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js\");\n/* harmony import */ var _mintToChecked_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./mintToChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js\");\n/* harmony import */ var _revoke_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./revoke.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/revoke.js\");\n/* harmony import */ var _setAuthority_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./setAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js\");\n/* harmony import */ var _syncNative_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./syncNative.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js\");\n/* harmony import */ var _thawAccount_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./thawAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js\");\n/* harmony import */ var _transfer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transfer.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/transfer.js\");\n/* harmony import */ var _transferChecked_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./transferChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* harmony import */ var _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./uiAmountToAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** TODO: docs */\nfunction decodeInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID) {\n    if (!instruction.data.length)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.TokenInvalidInstructionDataError();\n    const type = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)().decode(instruction.data);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMint)\n        return (0,_initializeMint_js__WEBPACK_IMPORTED_MODULE_4__.decodeInitializeMintInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount)\n        return (0,_initializeAccount_js__WEBPACK_IMPORTED_MODULE_5__.decodeInitializeAccountInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMultisig)\n        return (0,_initializeMultisig_js__WEBPACK_IMPORTED_MODULE_6__.decodeInitializeMultisigInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Transfer)\n        return (0,_transfer_js__WEBPACK_IMPORTED_MODULE_7__.decodeTransferInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Approve)\n        return (0,_approve_js__WEBPACK_IMPORTED_MODULE_8__.decodeApproveInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Revoke)\n        return (0,_revoke_js__WEBPACK_IMPORTED_MODULE_9__.decodeRevokeInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.SetAuthority)\n        return (0,_setAuthority_js__WEBPACK_IMPORTED_MODULE_10__.decodeSetAuthorityInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.MintTo)\n        return (0,_mintTo_js__WEBPACK_IMPORTED_MODULE_11__.decodeMintToInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Burn)\n        return (0,_burn_js__WEBPACK_IMPORTED_MODULE_12__.decodeBurnInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.CloseAccount)\n        return (0,_closeAccount_js__WEBPACK_IMPORTED_MODULE_13__.decodeCloseAccountInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.FreezeAccount)\n        return (0,_freezeAccount_js__WEBPACK_IMPORTED_MODULE_14__.decodeFreezeAccountInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.ThawAccount)\n        return (0,_thawAccount_js__WEBPACK_IMPORTED_MODULE_15__.decodeThawAccountInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.TransferChecked)\n        return (0,_transferChecked_js__WEBPACK_IMPORTED_MODULE_16__.decodeTransferCheckedInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.ApproveChecked)\n        return (0,_approveChecked_js__WEBPACK_IMPORTED_MODULE_17__.decodeApproveCheckedInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.MintToChecked)\n        return (0,_mintToChecked_js__WEBPACK_IMPORTED_MODULE_18__.decodeMintToCheckedInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.BurnChecked)\n        return (0,_burnChecked_js__WEBPACK_IMPORTED_MODULE_19__.decodeBurnCheckedInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount2)\n        return (0,_initializeAccount2_js__WEBPACK_IMPORTED_MODULE_20__.decodeInitializeAccount2Instruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.SyncNative)\n        return (0,_syncNative_js__WEBPACK_IMPORTED_MODULE_21__.decodeSyncNativeInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount3)\n        return (0,_initializeAccount3_js__WEBPACK_IMPORTED_MODULE_22__.decodeInitializeAccount3Instruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMint2)\n        return (0,_initializeMint2_js__WEBPACK_IMPORTED_MODULE_23__.decodeInitializeMint2Instruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.AmountToUiAmount)\n        return (0,_amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_24__.decodeAmountToUiAmountInstruction)(instruction, programId);\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.UiAmountToAmount)\n        return (0,_uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_25__.decodeUiAmountToAmountInstruction)(instruction, programId);\n    // TODO: implement\n    if (type === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMultisig2)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.TokenInvalidInstructionTypeError();\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.TokenInvalidInstructionTypeError();\n}\n/** TODO: docs */\nfunction isInitializeMintInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMint;\n}\n/** TODO: docs */\nfunction isInitializeAccountInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount;\n}\n/** TODO: docs */\nfunction isInitializeMultisigInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMultisig;\n}\n/** TODO: docs */\nfunction isTransferInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Transfer;\n}\n/** TODO: docs */\nfunction isApproveInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Approve;\n}\n/** TODO: docs */\nfunction isRevokeInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Revoke;\n}\n/** TODO: docs */\nfunction isSetAuthorityInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.SetAuthority;\n}\n/** TODO: docs */\nfunction isMintToInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.MintTo;\n}\n/** TODO: docs */\nfunction isBurnInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.Burn;\n}\n/** TODO: docs */\nfunction isCloseAccountInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.CloseAccount;\n}\n/** TODO: docs */\nfunction isFreezeAccountInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.FreezeAccount;\n}\n/** TODO: docs */\nfunction isThawAccountInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.ThawAccount;\n}\n/** TODO: docs */\nfunction isTransferCheckedInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.TransferChecked;\n}\n/** TODO: docs */\nfunction isApproveCheckedInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.ApproveChecked;\n}\n/** TODO: docs */\nfunction isMintToCheckedInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.MintToChecked;\n}\n/** TODO: docs */\nfunction isBurnCheckedInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.BurnChecked;\n}\n/** TODO: docs */\nfunction isInitializeAccount2Instruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount2;\n}\n/** TODO: docs */\nfunction isSyncNativeInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.SyncNative;\n}\n/** TODO: docs */\nfunction isInitializeAccount3Instruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount3;\n}\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n/** TODO: docs */\nfunction isInitializeMint2Instruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMint2;\n}\n/** TODO: docs */\nfunction isAmountToUiAmountInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.AmountToUiAmount;\n}\n/** TODO: docs */\nfunction isUiamountToAmountInstruction(decoded) {\n    return decoded.data.instruction === _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.UiAmountToAmount;\n}\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/decode.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"freezeAccountInstructionData\": function() { return /* binding */ freezeAccountInstructionData; },\n/* harmony export */   \"createFreezeAccountInstruction\": function() { return /* binding */ createFreezeAccountInstruction; },\n/* harmony export */   \"decodeFreezeAccountInstruction\": function() { return /* binding */ decodeFreezeAccountInstruction; },\n/* harmony export */   \"decodeFreezeAccountInstructionUnchecked\": function() { return /* binding */ decodeFreezeAccountInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst freezeAccountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct a FreezeAccount instruction\n *\n * @param account      Account to freeze\n * @param mint         Mint account\n * @param authority    Mint freeze authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createFreezeAccountInstruction(account, mint, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_3__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(freezeAccountInstructionData.span);\n    freezeAccountInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.FreezeAccount }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a FreezeAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeFreezeAccountInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== freezeAccountInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, authority, multiSigners }, data, } = decodeFreezeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.FreezeAccount)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a FreezeAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeFreezeAccountInstructionUnchecked({ programId, keys: [account, mint, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data: freezeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=freezeAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvZnJlZXplQWNjb3VudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNNO0FBQ047QUFDdUg7QUFDL0g7QUFDRztBQUM5QztBQUNPLHFDQUFxQyw2REFBTSxFQUFFLHlEQUFFO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpR0FBaUcsMkRBQWdCO0FBQ3hILGlCQUFpQix3REFBVTtBQUMzQixVQUFVLG9EQUFvRDtBQUM5RCxVQUFVLGtEQUFrRDtBQUM1RDtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCLDBDQUEwQyxhQUFhLHFFQUE4QixFQUFFO0FBQ3ZGLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlFQUFpRSwyREFBZ0I7QUFDeEY7QUFDQSxrQkFBa0IsMkVBQW1DO0FBQ3JEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRCxZQUFZLFFBQVEsd0NBQXdDLFVBQVU7QUFDdEUsNkJBQTZCLHFFQUE4QjtBQUMzRCxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbURBQW1ELHFFQUFxRTtBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvZnJlZXplQWNjb3VudC5qcz8wMDQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBhZGRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IGZyZWV6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW3U4KCdpbnN0cnVjdGlvbicpXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhIEZyZWV6ZUFjY291bnQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgIEFjY291bnQgdG8gZnJlZXplXG4gKiBAcGFyYW0gbWludCAgICAgICAgIE1pbnQgYWNjb3VudFxuICogQHBhcmFtIGF1dGhvcml0eSAgICBNaW50IGZyZWV6ZSBhdXRob3JpdHlcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgYXV0aG9yaXR5YCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGcmVlemVBY2NvdW50SW5zdHJ1Y3Rpb24oYWNjb3VudCwgbWludCwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFtcbiAgICAgICAgeyBwdWJrZXk6IGFjY291bnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgIF0sIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGZyZWV6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgZnJlZXplQWNjb3VudEluc3RydWN0aW9uRGF0YS5lbmNvZGUoeyBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5GcmVlemVBY2NvdW50IH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGEgRnJlZXplQWNjb3VudCBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUZyZWV6ZUFjY291bnRJbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IGZyZWV6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG1pbnQsIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVGcmVlemVBY2NvdW50SW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLkZyZWV6ZUFjY291bnQpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudCB8fCAhbWludCB8fCAhYXV0aG9yaXR5KVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IoKTtcbiAgICAvLyBUT0RPOiBrZXkgY2hlY2tzP1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgICAgICBhdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgRnJlZXplQWNjb3VudCBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVGcmVlemVBY2NvdW50SW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFthY2NvdW50LCBtaW50LCBhdXRob3JpdHksIC4uLm11bHRpU2lnbmVyc10sIGRhdGEsIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgYXV0aG9yaXR5LFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBmcmVlemVBY2NvdW50SW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnJlZXplQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./associatedTokenAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _associatedTokenAccount_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/decode.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _decode_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _decode_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _types_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _types_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeMint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initializeMint.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeMint_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeMint_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeAccount_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./initializeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeAccount_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeAccount_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeMultisig_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initializeMultisig.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeMultisig_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeMultisig_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _transfer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transfer.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/transfer.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _transfer_js__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _transfer_js__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _approve_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./approve.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/approve.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _approve_js__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _approve_js__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _revoke_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./revoke.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/revoke.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _revoke_js__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _revoke_js__WEBPACK_IMPORTED_MODULE_8__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _setAuthority_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./setAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _setAuthority_js__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _setAuthority_js__WEBPACK_IMPORTED_MODULE_9__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _mintTo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./mintTo.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _mintTo_js__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _mintTo_js__WEBPACK_IMPORTED_MODULE_10__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _burn_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./burn.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/burn.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _burn_js__WEBPACK_IMPORTED_MODULE_11__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _burn_js__WEBPACK_IMPORTED_MODULE_11__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _closeAccount_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./closeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _closeAccount_js__WEBPACK_IMPORTED_MODULE_12__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _closeAccount_js__WEBPACK_IMPORTED_MODULE_12__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _freezeAccount_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./freezeAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _freezeAccount_js__WEBPACK_IMPORTED_MODULE_13__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _freezeAccount_js__WEBPACK_IMPORTED_MODULE_13__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _thawAccount_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./thawAccount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _thawAccount_js__WEBPACK_IMPORTED_MODULE_14__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _thawAccount_js__WEBPACK_IMPORTED_MODULE_14__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _transferChecked_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./transferChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _transferChecked_js__WEBPACK_IMPORTED_MODULE_15__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _transferChecked_js__WEBPACK_IMPORTED_MODULE_15__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _approveChecked_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./approveChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _approveChecked_js__WEBPACK_IMPORTED_MODULE_16__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _approveChecked_js__WEBPACK_IMPORTED_MODULE_16__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _mintToChecked_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./mintToChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _mintToChecked_js__WEBPACK_IMPORTED_MODULE_17__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _mintToChecked_js__WEBPACK_IMPORTED_MODULE_17__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _burnChecked_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./burnChecked.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _burnChecked_js__WEBPACK_IMPORTED_MODULE_18__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _burnChecked_js__WEBPACK_IMPORTED_MODULE_18__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeAccount2_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./initializeAccount2.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount2.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeAccount2_js__WEBPACK_IMPORTED_MODULE_19__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeAccount2_js__WEBPACK_IMPORTED_MODULE_19__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _syncNative_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./syncNative.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _syncNative_js__WEBPACK_IMPORTED_MODULE_20__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _syncNative_js__WEBPACK_IMPORTED_MODULE_20__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeAccount3_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./initializeAccount3.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount3.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeAccount3_js__WEBPACK_IMPORTED_MODULE_21__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeAccount3_js__WEBPACK_IMPORTED_MODULE_21__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeMultisig2_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./initializeMultisig2.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig2.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeMultisig2_js__WEBPACK_IMPORTED_MODULE_22__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeMultisig2_js__WEBPACK_IMPORTED_MODULE_22__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeMint2_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./initializeMint2.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeMint2_js__WEBPACK_IMPORTED_MODULE_23__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeMint2_js__WEBPACK_IMPORTED_MODULE_23__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeImmutableOwner_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./initializeImmutableOwner.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeImmutableOwner.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeImmutableOwner_js__WEBPACK_IMPORTED_MODULE_24__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeImmutableOwner_js__WEBPACK_IMPORTED_MODULE_24__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./amountToUiAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_25__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _amountToUiAmount_js__WEBPACK_IMPORTED_MODULE_25__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./uiAmountToAmount.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_26__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _uiAmountToAmount_js__WEBPACK_IMPORTED_MODULE_26__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeMintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./initializeMintCloseAuthority.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeMintCloseAuthority.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeMintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_27__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeMintCloseAuthority_js__WEBPACK_IMPORTED_MODULE_27__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _reallocate_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./reallocate.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/reallocate.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _reallocate_js__WEBPACK_IMPORTED_MODULE_28__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _reallocate_js__WEBPACK_IMPORTED_MODULE_28__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createNativeMint_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./createNativeMint.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/createNativeMint.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _createNativeMint_js__WEBPACK_IMPORTED_MODULE_29__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _createNativeMint_js__WEBPACK_IMPORTED_MODULE_29__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializeNonTransferableMint_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./initializeNonTransferableMint.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializeNonTransferableMint.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializeNonTransferableMint_js__WEBPACK_IMPORTED_MODULE_30__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializeNonTransferableMint_js__WEBPACK_IMPORTED_MODULE_30__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _initializePermanentDelegate_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./initializePermanentDelegate.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/initializePermanentDelegate.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _initializePermanentDelegate_js__WEBPACK_IMPORTED_MODULE_31__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _initializePermanentDelegate_js__WEBPACK_IMPORTED_MODULE_31__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n //                 0\n //              1\n //             2\n //                       3\n //                        4\n //                         5\n //                   6\n //                         7\n //                           8\n //                   9\n //                 10\n //                   11\n //               12\n //                13\n //                 14\n //                   15\n //            16\n //                    17\n //            18\n //           19\n //               20\n //      22\n //              23\n //              24\n //  25\n //                    29\n //              31\n // 32\n //   35\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ2hCO0FBQ0Q7QUFDUyxDQUFDO0FBQ0UsQ0FBQztBQUNBLENBQUM7QUFDWCxDQUFDO0FBQ0YsQ0FBQztBQUNGLENBQUM7QUFDSyxDQUFDO0FBQ1AsQ0FBQztBQUNILENBQUM7QUFDTyxDQUFDO0FBQ0EsQ0FBQztBQUNILENBQUM7QUFDRyxDQUFDO0FBQ0YsQ0FBQztBQUNGLENBQUM7QUFDSCxDQUFDO0FBQ00sQ0FBQztBQUNULENBQUM7QUFDTyxDQUFDO0FBQ0EsQ0FBQztBQUNMLENBQUM7QUFDUSxDQUFDO0FBQ1QsQ0FBQztBQUNELENBQUM7QUFDVyxDQUFDO0FBQ25CLENBQUM7QUFDSyxDQUFDO0FBQ1ksQ0FBQztBQUNILENBQUM7QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL2luZGV4LmpzPzMwYjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9hc3NvY2lhdGVkVG9rZW5BY2NvdW50LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZGVjb2RlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbml0aWFsaXplTWludC5qcyc7IC8vICAgICAgICAgICAgICAgICAwXG5leHBvcnQgKiBmcm9tICcuL2luaXRpYWxpemVBY2NvdW50LmpzJzsgLy8gICAgICAgICAgICAgIDFcbmV4cG9ydCAqIGZyb20gJy4vaW5pdGlhbGl6ZU11bHRpc2lnLmpzJzsgLy8gICAgICAgICAgICAgMlxuZXhwb3J0ICogZnJvbSAnLi90cmFuc2Zlci5qcyc7IC8vICAgICAgICAgICAgICAgICAgICAgICAzXG5leHBvcnQgKiBmcm9tICcuL2FwcHJvdmUuanMnOyAvLyAgICAgICAgICAgICAgICAgICAgICAgIDRcbmV4cG9ydCAqIGZyb20gJy4vcmV2b2tlLmpzJzsgLy8gICAgICAgICAgICAgICAgICAgICAgICAgNVxuZXhwb3J0ICogZnJvbSAnLi9zZXRBdXRob3JpdHkuanMnOyAvLyAgICAgICAgICAgICAgICAgICA2XG5leHBvcnQgKiBmcm9tICcuL21pbnRUby5qcyc7IC8vICAgICAgICAgICAgICAgICAgICAgICAgIDdcbmV4cG9ydCAqIGZyb20gJy4vYnVybi5qcyc7IC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgOFxuZXhwb3J0ICogZnJvbSAnLi9jbG9zZUFjY291bnQuanMnOyAvLyAgICAgICAgICAgICAgICAgICA5XG5leHBvcnQgKiBmcm9tICcuL2ZyZWV6ZUFjY291bnQuanMnOyAvLyAgICAgICAgICAgICAgICAgMTBcbmV4cG9ydCAqIGZyb20gJy4vdGhhd0FjY291bnQuanMnOyAvLyAgICAgICAgICAgICAgICAgICAxMVxuZXhwb3J0ICogZnJvbSAnLi90cmFuc2ZlckNoZWNrZWQuanMnOyAvLyAgICAgICAgICAgICAgIDEyXG5leHBvcnQgKiBmcm9tICcuL2FwcHJvdmVDaGVja2VkLmpzJzsgLy8gICAgICAgICAgICAgICAgMTNcbmV4cG9ydCAqIGZyb20gJy4vbWludFRvQ2hlY2tlZC5qcyc7IC8vICAgICAgICAgICAgICAgICAxNFxuZXhwb3J0ICogZnJvbSAnLi9idXJuQ2hlY2tlZC5qcyc7IC8vICAgICAgICAgICAgICAgICAgIDE1XG5leHBvcnQgKiBmcm9tICcuL2luaXRpYWxpemVBY2NvdW50Mi5qcyc7IC8vICAgICAgICAgICAgMTZcbmV4cG9ydCAqIGZyb20gJy4vc3luY05hdGl2ZS5qcyc7IC8vICAgICAgICAgICAgICAgICAgICAxN1xuZXhwb3J0ICogZnJvbSAnLi9pbml0aWFsaXplQWNjb3VudDMuanMnOyAvLyAgICAgICAgICAgIDE4XG5leHBvcnQgKiBmcm9tICcuL2luaXRpYWxpemVNdWx0aXNpZzIuanMnOyAvLyAgICAgICAgICAgMTlcbmV4cG9ydCAqIGZyb20gJy4vaW5pdGlhbGl6ZU1pbnQyLmpzJzsgLy8gICAgICAgICAgICAgICAyMFxuZXhwb3J0ICogZnJvbSAnLi9pbml0aWFsaXplSW1tdXRhYmxlT3duZXIuanMnOyAvLyAgICAgIDIyXG5leHBvcnQgKiBmcm9tICcuL2Ftb3VudFRvVWlBbW91bnQuanMnOyAvLyAgICAgICAgICAgICAgMjNcbmV4cG9ydCAqIGZyb20gJy4vdWlBbW91bnRUb0Ftb3VudC5qcyc7IC8vICAgICAgICAgICAgICAyNFxuZXhwb3J0ICogZnJvbSAnLi9pbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5LmpzJzsgLy8gIDI1XG5leHBvcnQgKiBmcm9tICcuL3JlYWxsb2NhdGUuanMnOyAvLyAgICAgICAgICAgICAgICAgICAgMjlcbmV4cG9ydCAqIGZyb20gJy4vY3JlYXRlTmF0aXZlTWludC5qcyc7IC8vICAgICAgICAgICAgICAzMVxuZXhwb3J0ICogZnJvbSAnLi9pbml0aWFsaXplTm9uVHJhbnNmZXJhYmxlTWludC5qcyc7IC8vIDMyXG5leHBvcnQgKiBmcm9tICcuL2luaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZS5qcyc7IC8vICAgMzVcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeAccountInstructionData\": function() { return /* binding */ initializeAccountInstructionData; },\n/* harmony export */   \"createInitializeAccountInstruction\": function() { return /* binding */ createInitializeAccountInstruction; },\n/* harmony export */   \"decodeInitializeAccountInstruction\": function() { return /* binding */ decodeInitializeAccountInstruction; },\n/* harmony export */   \"decodeInitializeAccountInstructionUnchecked\": function() { return /* binding */ decodeInitializeAccountInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n/** TODO: docs */\nconst initializeAccountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct an InitializeAccount instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     Owner of the new account\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeAccountInstruction(account, mint, owner, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccountInstructionData.span);\n    initializeAccountInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeAccountInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccountInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, rent }, data, } = decodeInitializeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeAccount)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner || !rent)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeAccountInstructionUnchecked({ programId, keys: [account, mint, owner, rent], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            rent,\n        },\n        data: initializeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZUFjY291bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUMwQjtBQUMxQjtBQUN1SDtBQUM1SDtBQUM5QztBQUNPLHlDQUF5Qyw2REFBTSxFQUFFLHlEQUFFO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEVBQThFLDJEQUFnQjtBQUNyRztBQUNBLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsa0RBQWtEO0FBQzVELFVBQVUsbURBQW1EO0FBQzdELFVBQVUsUUFBUSwrREFBa0Isc0NBQXNDO0FBQzFFO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkIsOENBQThDLGFBQWEseUVBQWtDLEVBQUU7QUFDL0YsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUVBQXFFLDJEQUFnQjtBQUM1RjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSw0QkFBNEIsVUFBVTtBQUMxRCw2QkFBNkIseUVBQWtDO0FBQy9ELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1REFBdUQsc0RBQXNEO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9pbml0aWFsaXplQWNjb3VudC5qcz8zNjQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgU1lTVkFSX1JFTlRfUFVCS0VZLCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW3U4KCdpbnN0cnVjdGlvbicpXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBJbml0aWFsaXplQWNjb3VudCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgTmV3IHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBtaW50ICAgICAgTWludCBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgIE93bmVyIG9mIHRoZSBuZXcgYWNjb3VudFxuICogQHBhcmFtIHByb2dyYW1JZCBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZUFjY291bnRJbnN0cnVjdGlvbihhY2NvdW50LCBtaW50LCBvd25lciwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBbXG4gICAgICAgIHsgcHVia2V5OiBhY2NvdW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IG1pbnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogZmFsc2UgfSxcbiAgICAgICAgeyBwdWJrZXk6IG93bmVyLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgICAgIHsgcHVia2V5OiBTWVNWQVJfUkVOVF9QVUJLRVksIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogZmFsc2UgfSxcbiAgICBdO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoaW5pdGlhbGl6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgaW5pdGlhbGl6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHsgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uSW5pdGlhbGl6ZUFjY291bnQgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZUFjY291bnQgaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVJbml0aWFsaXplQWNjb3VudEluc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFpbnN0cnVjdGlvbi5wcm9ncmFtSWQuZXF1YWxzKHByb2dyYW1JZCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvcigpO1xuICAgIGlmIChpbnN0cnVjdGlvbi5kYXRhLmxlbmd0aCAhPT0gaW5pdGlhbGl6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG1pbnQsIG93bmVyLCByZW50IH0sIGRhdGEsIH0gPSBkZWNvZGVJbml0aWFsaXplQWNjb3VudEluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5Jbml0aWFsaXplQWNjb3VudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFhY2NvdW50IHx8ICFtaW50IHx8ICFvd25lciB8fCAhcmVudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgb3duZXIsXG4gICAgICAgICAgICByZW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplQWNjb3VudCBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVJbml0aWFsaXplQWNjb3VudEluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgbWludCwgb3duZXIsIHJlbnRdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgbWludCxcbiAgICAgICAgICAgIG93bmVyLFxuICAgICAgICAgICAgcmVudCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogaW5pdGlhbGl6ZUFjY291bnRJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbml0aWFsaXplQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount2.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount2.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeAccount2InstructionData\": function() { return /* binding */ initializeAccount2InstructionData; },\n/* harmony export */   \"createInitializeAccount2Instruction\": function() { return /* binding */ createInitializeAccount2Instruction; },\n/* harmony export */   \"decodeInitializeAccount2Instruction\": function() { return /* binding */ decodeInitializeAccount2Instruction; },\n/* harmony export */   \"decodeInitializeAccount2InstructionUnchecked\": function() { return /* binding */ decodeInitializeAccount2InstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\nconst initializeAccount2InstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('owner'),\n]);\n/**\n * Construct an InitializeAccount2 instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     New account's owner/multisignature\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeAccount2Instruction(account, mint, owner, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccount2InstructionData.span);\n    initializeAccount2InstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeAccount2, owner }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount2 instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeAccount2Instruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccount2InstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, rent }, data, } = decodeInitializeAccount2InstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeAccount2)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !rent)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount2 instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeAccount2InstructionUnchecked({ programId, keys: [account, mint, rent], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            rent,\n        },\n        data: initializeAccount2InstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZUFjY291bnQyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0s7QUFDcUI7QUFDMUI7QUFDdUg7QUFDNUg7QUFDdkMsMENBQTBDLDZEQUFNO0FBQ3ZELElBQUkseURBQUU7QUFDTixJQUFJLHNFQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtFQUErRSwyREFBZ0I7QUFDdEc7QUFDQSxVQUFVLG9EQUFvRDtBQUM5RCxVQUFVLGtEQUFrRDtBQUM1RCxVQUFVLFFBQVEsK0RBQWtCLHNDQUFzQztBQUMxRTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCLCtDQUErQyxhQUFhLDBFQUFtQyxTQUFTO0FBQ3hHLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNFQUFzRSwyREFBZ0I7QUFDN0Y7QUFDQSxrQkFBa0IsMkVBQW1DO0FBQ3JEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRCxZQUFZLFFBQVEscUJBQXFCLFVBQVU7QUFDbkQsNkJBQTZCLDBFQUFtQztBQUNoRSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdEQUF3RCwrQ0FBK0M7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9pbml0aWFsaXplQWNjb3VudDIuanM/MzRjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBTWVNWQVJfUkVOVF9QVUJLRVksIFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVBY2NvdW50Mkluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgcHVibGljS2V5KCdvd25lcicpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBJbml0aWFsaXplQWNjb3VudDIgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgIE5ldyB0b2tlbiBhY2NvdW50XG4gKiBAcGFyYW0gbWludCAgICAgIE1pbnQgYWNjb3VudFxuICogQHBhcmFtIG93bmVyICAgICBOZXcgYWNjb3VudCdzIG93bmVyL211bHRpc2lnbmF0dXJlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbml0aWFsaXplQWNjb3VudDJJbnN0cnVjdGlvbihhY2NvdW50LCBtaW50LCBvd25lciwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBbXG4gICAgICAgIHsgcHVia2V5OiBhY2NvdW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IG1pbnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogZmFsc2UgfSxcbiAgICAgICAgeyBwdWJrZXk6IFNZU1ZBUl9SRU5UX1BVQktFWSwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgIF07XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhpbml0aWFsaXplQWNjb3VudDJJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgaW5pdGlhbGl6ZUFjY291bnQySW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7IGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVBY2NvdW50Miwgb3duZXIgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZUFjY291bnQyIGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZUFjY291bnQySW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBpbml0aWFsaXplQWNjb3VudDJJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG1pbnQsIHJlbnQgfSwgZGF0YSwgfSA9IGRlY29kZUluaXRpYWxpemVBY2NvdW50Mkluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5Jbml0aWFsaXplQWNjb3VudDIpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudCB8fCAhbWludCB8fCAhcmVudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgcmVudCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZUFjY291bnQyIGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVBY2NvdW50Mkluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgbWludCwgcmVudF0sIGRhdGEsIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgcmVudCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogaW5pdGlhbGl6ZUFjY291bnQySW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5pdGlhbGl6ZUFjY291bnQyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount2.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount3.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount3.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeAccount3InstructionData\": function() { return /* binding */ initializeAccount3InstructionData; },\n/* harmony export */   \"createInitializeAccount3Instruction\": function() { return /* binding */ createInitializeAccount3Instruction; },\n/* harmony export */   \"decodeInitializeAccount3Instruction\": function() { return /* binding */ decodeInitializeAccount3Instruction; },\n/* harmony export */   \"decodeInitializeAccount3InstructionUnchecked\": function() { return /* binding */ decodeInitializeAccount3InstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\nconst initializeAccount3InstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('owner'),\n]);\n/**\n * Construct an InitializeAccount3 instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     New account's owner/multisignature\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeAccount3Instruction(account, mint, owner, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccount3InstructionData.span);\n    initializeAccount3InstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeAccount3, owner }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount3 instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeAccount3Instruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccount3InstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint }, data, } = decodeInitializeAccount3InstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeAccount3)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!account || !mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount3 instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeAccount3InstructionUnchecked({ programId, keys: [account, mint], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n        },\n        data: initializeAccount3InstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZUFjY291bnQzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0s7QUFDQztBQUNOO0FBQ3VIO0FBQzVIO0FBQ3ZDLDBDQUEwQyw2REFBTTtBQUN2RCxJQUFJLHlEQUFFO0FBQ04sSUFBSSxzRUFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrRUFBK0UsMkRBQWdCO0FBQ3RHO0FBQ0EsVUFBVSxvREFBb0Q7QUFDOUQsVUFBVSxrREFBa0Q7QUFDNUQ7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QiwrQ0FBK0MsYUFBYSwwRUFBbUMsU0FBUztBQUN4RyxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzRUFBc0UsMkRBQWdCO0FBQzdGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLGVBQWUsVUFBVTtBQUM3Qyw2QkFBNkIsMEVBQW1DO0FBQ2hFLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdEQUF3RCx5Q0FBeUM7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZUFjY291bnQzLmpzPzIwMDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUFjY291bnQzSW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFtcbiAgICB1OCgnaW5zdHJ1Y3Rpb24nKSxcbiAgICBwdWJsaWNLZXkoJ293bmVyJyksXG5dKTtcbi8qKlxuICogQ29uc3RydWN0IGFuIEluaXRpYWxpemVBY2NvdW50MyBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBhY2NvdW50ICAgTmV3IHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBtaW50ICAgICAgTWludCBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgIE5ldyBhY2NvdW50J3Mgb3duZXIvbXVsdGlzaWduYXR1cmVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxpemVBY2NvdW50M0luc3RydWN0aW9uKGFjY291bnQsIG1pbnQsIG93bmVyLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IFtcbiAgICAgICAgeyBwdWJrZXk6IGFjY291bnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgIF07XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhpbml0aWFsaXplQWNjb3VudDNJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgaW5pdGlhbGl6ZUFjY291bnQzSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7IGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVBY2NvdW50Mywgb3duZXIgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZUFjY291bnQzIGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZUFjY291bnQzSW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBpbml0aWFsaXplQWNjb3VudDNJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG1pbnQgfSwgZGF0YSwgfSA9IGRlY29kZUluaXRpYWxpemVBY2NvdW50M0luc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5Jbml0aWFsaXplQWNjb3VudDMpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudCB8fCAhbWludClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplQWNjb3VudDMgaW5zdHJ1Y3Rpb24gd2l0aG91dCB2YWxpZGF0aW5nIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgbm9uLXZhbGlkYXRlZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZUFjY291bnQzSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFthY2NvdW50LCBtaW50XSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IGluaXRpYWxpemVBY2NvdW50M0luc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXRpYWxpemVBY2NvdW50My5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount3.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeImmutableOwner.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeImmutableOwner.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeImmutableOwnerInstructionData\": function() { return /* binding */ initializeImmutableOwnerInstructionData; },\n/* harmony export */   \"createInitializeImmutableOwnerInstruction\": function() { return /* binding */ createInitializeImmutableOwnerInstruction; },\n/* harmony export */   \"decodeInitializeImmutableOwnerInstruction\": function() { return /* binding */ decodeInitializeImmutableOwnerInstruction; },\n/* harmony export */   \"decodeInitializeImmutableOwnerInstructionUnchecked\": function() { return /* binding */ decodeInitializeImmutableOwnerInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n/** The struct that represents the instruction data as it is read by the program */\nconst initializeImmutableOwnerInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n]);\n/**\n * Construct an InitializeImmutableOwner instruction\n *\n * @param account           Immutable Owner Account\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeImmutableOwnerInstruction(account, programId) {\n    const keys = [{ pubkey: account, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeImmutableOwnerInstructionData.span);\n    initializeImmutableOwnerInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_2__.TokenInstruction.InitializeImmutableOwner,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeImmutableOwner instruction and validate it\n *\n * @param instruction InitializeImmutableOwner instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeImmutableOwnerInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeImmutableOwnerInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenInvalidInstructionDataError();\n    const { keys: { account }, data, } = decodeInitializeImmutableOwnerInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_2__.TokenInstruction.InitializeImmutableOwner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenInvalidInstructionTypeError();\n    if (!account)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeImmutableOwner instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeImmutableOwnerInstructionUnchecked({ programId, keys: [account], data, }) {\n    const { instruction } = initializeImmutableOwnerInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            account: account,\n        },\n        data: {\n            instruction,\n        },\n    };\n}\n//# sourceMappingURL=initializeImmutableOwner.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZUltbXV0YWJsZU93bmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNNO0FBQ2lIO0FBQzVIO0FBQzlDO0FBQ08sZ0RBQWdELDZEQUFNO0FBQzdELElBQUkseURBQUU7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQixvREFBb0Q7QUFDeEUsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsZ0ZBQXlDO0FBQzlELEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLFNBQVMsVUFBVTtBQUN2Qyw2QkFBNkIsZ0ZBQXlDO0FBQ3RFLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOERBQThELG1DQUFtQztBQUN4RyxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL2luaXRpYWxpemVJbW11dGFibGVPd25lci5qcz8zYzBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIFRoZSBzdHJ1Y3QgdGhhdCByZXByZXNlbnRzIHRoZSBpbnN0cnVjdGlvbiBkYXRhIGFzIGl0IGlzIHJlYWQgYnkgdGhlIHByb2dyYW0gKi9cbmV4cG9ydCBjb25zdCBpbml0aWFsaXplSW1tdXRhYmxlT3duZXJJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBJbml0aWFsaXplSW1tdXRhYmxlT3duZXIgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgICAgSW1tdXRhYmxlIE93bmVyIEFjY291bnRcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZUltbXV0YWJsZU93bmVySW5zdHJ1Y3Rpb24oYWNjb3VudCwgcHJvZ3JhbUlkKSB7XG4gICAgY29uc3Qga2V5cyA9IFt7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH1dO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoaW5pdGlhbGl6ZUltbXV0YWJsZU93bmVySW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGluaXRpYWxpemVJbW11dGFibGVPd25lckluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5Jbml0aWFsaXplSW1tdXRhYmxlT3duZXIsXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZUltbXV0YWJsZU93bmVyIGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBJbml0aWFsaXplSW1tdXRhYmxlT3duZXIgaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVJbW11dGFibGVPd25lckluc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBpbml0aWFsaXplSW1tdXRhYmxlT3duZXJJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQgfSwgZGF0YSwgfSA9IGRlY29kZUluaXRpYWxpemVJbW11dGFibGVPd25lckluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5Jbml0aWFsaXplSW1tdXRhYmxlT3duZXIpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplSW1tdXRhYmxlT3duZXIgaW5zdHJ1Y3Rpb24gd2l0aG91dCB2YWxpZGF0aW5nIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgbm9uLXZhbGlkYXRlZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZUltbXV0YWJsZU93bmVySW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFthY2NvdW50XSwgZGF0YSwgfSkge1xuICAgIGNvbnN0IHsgaW5zdHJ1Y3Rpb24gfSA9IGluaXRpYWxpemVJbW11dGFibGVPd25lckluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50OiBhY2NvdW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBpbnN0cnVjdGlvbixcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5pdGlhbGl6ZUltbXV0YWJsZU93bmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeImmutableOwner.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeMintInstructionData\": function() { return /* binding */ initializeMintInstructionData; },\n/* harmony export */   \"createInitializeMintInstruction\": function() { return /* binding */ createInitializeMintInstruction; },\n/* harmony export */   \"decodeInitializeMintInstruction\": function() { return /* binding */ decodeInitializeMintInstruction; },\n/* harmony export */   \"decodeInitializeMintInstructionUnchecked\": function() { return /* binding */ decodeInitializeMintInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst initializeMintInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('mintAuthority'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('freezeAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('freezeAuthority'),\n]);\n/**\n * Construct an InitializeMint instruction\n *\n * @param mint            Token mint account\n * @param decimals        Number of decimals in token account amounts\n * @param mintAuthority   Minting authority\n * @param freezeAuthority Optional authority that can freeze token accounts\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeMintInstruction(mint, decimals, mintAuthority, freezeAuthority, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeMintInstructionData.span);\n    initializeMintInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeMint,\n        decimals,\n        mintAuthority,\n        freezeAuthorityOption: freezeAuthority ? 1 : 0,\n        freezeAuthority: freezeAuthority || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeMintInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMintInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { mint, rent }, data, } = decodeInitializeMintInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeMint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!mint || !rent)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeMintInstructionUnchecked({ programId, keys: [mint, rent], data, }) {\n    const { instruction, decimals, mintAuthority, freezeAuthorityOption, freezeAuthority } = initializeMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            rent,\n        },\n        data: {\n            instruction,\n            decimals,\n            mintAuthority,\n            freezeAuthority: freezeAuthorityOption ? freezeAuthority : null,\n        },\n    };\n}\n//# sourceMappingURL=initializeMint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU1pbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDSztBQUNnQztBQUNyQztBQUN1SDtBQUM1SDtBQUM5QztBQUNPLHNDQUFzQyw2REFBTTtBQUNuRCxJQUFJLHlEQUFFO0FBQ04sSUFBSSx5REFBRTtBQUNOLElBQUksc0VBQVM7QUFDYixJQUFJLHlEQUFFO0FBQ04sSUFBSSxzRUFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFHQUFxRywyREFBZ0I7QUFDNUg7QUFDQSxVQUFVLGlEQUFpRDtBQUMzRCxVQUFVLFFBQVEsK0RBQWtCLHNDQUFzQztBQUMxRTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0EscUJBQXFCLHNFQUErQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsc0RBQVM7QUFDekQsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtFQUFrRSwyREFBZ0I7QUFDekY7QUFDQSxrQkFBa0IsMkVBQW1DO0FBQ3JEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRCxZQUFZLFFBQVEsWUFBWSxVQUFVO0FBQzFDLDZCQUE2QixzRUFBK0I7QUFDNUQsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0RBQW9ELHNDQUFzQztBQUNqRyxZQUFZLCtFQUErRTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9pbml0aWFsaXplTWludC5qcz81MjBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgcHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IFB1YmxpY0tleSwgU1lTVkFSX1JFTlRfUFVCS0VZLCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZU1pbnRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgIHU4KCdkZWNpbWFscycpLFxuICAgIHB1YmxpY0tleSgnbWludEF1dGhvcml0eScpLFxuICAgIHU4KCdmcmVlemVBdXRob3JpdHlPcHRpb24nKSxcbiAgICBwdWJsaWNLZXkoJ2ZyZWV6ZUF1dGhvcml0eScpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBJbml0aWFsaXplTWludCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICAgVG9rZW4gbWludCBhY2NvdW50XG4gKiBAcGFyYW0gZGVjaW1hbHMgICAgICAgIE51bWJlciBvZiBkZWNpbWFscyBpbiB0b2tlbiBhY2NvdW50IGFtb3VudHNcbiAqIEBwYXJhbSBtaW50QXV0aG9yaXR5ICAgTWludGluZyBhdXRob3JpdHlcbiAqIEBwYXJhbSBmcmVlemVBdXRob3JpdHkgT3B0aW9uYWwgYXV0aG9yaXR5IHRoYXQgY2FuIGZyZWV6ZSB0b2tlbiBhY2NvdW50c1xuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZU1pbnRJbnN0cnVjdGlvbihtaW50LCBkZWNpbWFscywgbWludEF1dGhvcml0eSwgZnJlZXplQXV0aG9yaXR5LCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IFtcbiAgICAgICAgeyBwdWJrZXk6IG1pbnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogU1lTVkFSX1JFTlRfUFVCS0VZLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgXTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGluaXRpYWxpemVNaW50SW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGluaXRpYWxpemVNaW50SW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVNaW50LFxuICAgICAgICBkZWNpbWFscyxcbiAgICAgICAgbWludEF1dGhvcml0eSxcbiAgICAgICAgZnJlZXplQXV0aG9yaXR5T3B0aW9uOiBmcmVlemVBdXRob3JpdHkgPyAxIDogMCxcbiAgICAgICAgZnJlZXplQXV0aG9yaXR5OiBmcmVlemVBdXRob3JpdHkgfHwgbmV3IFB1YmxpY0tleSgwKSxcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplTWludCBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVNaW50SW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBpbml0aWFsaXplTWludEluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgbWludCwgcmVudCB9LCBkYXRhLCB9ID0gZGVjb2RlSW5pdGlhbGl6ZU1pbnRJbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uSW5pdGlhbGl6ZU1pbnQpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghbWludCB8fCAhcmVudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgICAgICByZW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplTWludCBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVJbml0aWFsaXplTWludEluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbbWludCwgcmVudF0sIGRhdGEsIH0pIHtcbiAgICBjb25zdCB7IGluc3RydWN0aW9uLCBkZWNpbWFscywgbWludEF1dGhvcml0eSwgZnJlZXplQXV0aG9yaXR5T3B0aW9uLCBmcmVlemVBdXRob3JpdHkgfSA9IGluaXRpYWxpemVNaW50SW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgICAgICByZW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBpbnN0cnVjdGlvbixcbiAgICAgICAgICAgIGRlY2ltYWxzLFxuICAgICAgICAgICAgbWludEF1dGhvcml0eSxcbiAgICAgICAgICAgIGZyZWV6ZUF1dGhvcml0eTogZnJlZXplQXV0aG9yaXR5T3B0aW9uID8gZnJlZXplQXV0aG9yaXR5IDogbnVsbCxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5pdGlhbGl6ZU1pbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeMint2InstructionData\": function() { return /* binding */ initializeMint2InstructionData; },\n/* harmony export */   \"createInitializeMint2Instruction\": function() { return /* binding */ createInitializeMint2Instruction; },\n/* harmony export */   \"decodeInitializeMint2Instruction\": function() { return /* binding */ decodeInitializeMint2Instruction; },\n/* harmony export */   \"decodeInitializeMint2InstructionUnchecked\": function() { return /* binding */ decodeInitializeMint2InstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst initializeMint2InstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('mintAuthority'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('freezeAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('freezeAuthority'),\n]);\n/**\n * Construct an InitializeMint2 instruction\n *\n * @param mint            Token mint account\n * @param decimals        Number of decimals in token account amounts\n * @param mintAuthority   Minting authority\n * @param freezeAuthority Optional authority that can freeze token accounts\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeMint2Instruction(mint, decimals, mintAuthority, freezeAuthority, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeMint2InstructionData.span);\n    initializeMint2InstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeMint2,\n        decimals,\n        mintAuthority,\n        freezeAuthorityOption: freezeAuthority ? 1 : 0,\n        freezeAuthority: freezeAuthority || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMint2 instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeMint2Instruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMint2InstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializeMint2InstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeMint2)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMint2 instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeMint2InstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, decimals, mintAuthority, freezeAuthorityOption, freezeAuthority } = initializeMint2InstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            decimals,\n            mintAuthority,\n            freezeAuthority: freezeAuthorityOption ? freezeAuthority : null,\n        },\n    };\n}\n//# sourceMappingURL=initializeMint2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU1pbnQyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0s7QUFDWTtBQUNqQjtBQUN1SDtBQUM1SDtBQUM5QztBQUNPLHVDQUF1Qyw2REFBTTtBQUNwRCxJQUFJLHlEQUFFO0FBQ04sSUFBSSx5REFBRTtBQUNOLElBQUksc0VBQVM7QUFDYixJQUFJLHlEQUFFO0FBQ04sSUFBSSxzRUFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNHQUFzRywyREFBZ0I7QUFDN0gsb0JBQW9CLGlEQUFpRDtBQUNyRSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQix1RUFBZ0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELHNEQUFTO0FBQ3pELEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtRUFBbUUsMkRBQWdCO0FBQzFGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLE1BQU0sVUFBVTtBQUNwQyw2QkFBNkIsdUVBQWdDO0FBQzdELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scURBQXFELGdDQUFnQztBQUM1RixZQUFZLCtFQUErRTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU1pbnQyLmpzPzUzOTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgUHVibGljS2V5LCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZU1pbnQySW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFtcbiAgICB1OCgnaW5zdHJ1Y3Rpb24nKSxcbiAgICB1OCgnZGVjaW1hbHMnKSxcbiAgICBwdWJsaWNLZXkoJ21pbnRBdXRob3JpdHknKSxcbiAgICB1OCgnZnJlZXplQXV0aG9yaXR5T3B0aW9uJyksXG4gICAgcHVibGljS2V5KCdmcmVlemVBdXRob3JpdHknKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYW4gSW5pdGlhbGl6ZU1pbnQyIGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIG1pbnQgICAgICAgICAgICBUb2tlbiBtaW50IGFjY291bnRcbiAqIEBwYXJhbSBkZWNpbWFscyAgICAgICAgTnVtYmVyIG9mIGRlY2ltYWxzIGluIHRva2VuIGFjY291bnQgYW1vdW50c1xuICogQHBhcmFtIG1pbnRBdXRob3JpdHkgICBNaW50aW5nIGF1dGhvcml0eVxuICogQHBhcmFtIGZyZWV6ZUF1dGhvcml0eSBPcHRpb25hbCBhdXRob3JpdHkgdGhhdCBjYW4gZnJlZXplIHRva2VuIGFjY291bnRzXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbml0aWFsaXplTWludDJJbnN0cnVjdGlvbihtaW50LCBkZWNpbWFscywgbWludEF1dGhvcml0eSwgZnJlZXplQXV0aG9yaXR5LCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IFt7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH1dO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoaW5pdGlhbGl6ZU1pbnQySW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGluaXRpYWxpemVNaW50Mkluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5Jbml0aWFsaXplTWludDIsXG4gICAgICAgIGRlY2ltYWxzLFxuICAgICAgICBtaW50QXV0aG9yaXR5LFxuICAgICAgICBmcmVlemVBdXRob3JpdHlPcHRpb246IGZyZWV6ZUF1dGhvcml0eSA/IDEgOiAwLFxuICAgICAgICBmcmVlemVBdXRob3JpdHk6IGZyZWV6ZUF1dGhvcml0eSB8fCBuZXcgUHVibGljS2V5KDApLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGFuIEluaXRpYWxpemVNaW50MiBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVNaW50Mkluc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFpbnN0cnVjdGlvbi5wcm9ncmFtSWQuZXF1YWxzKHByb2dyYW1JZCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvcigpO1xuICAgIGlmIChpbnN0cnVjdGlvbi5kYXRhLmxlbmd0aCAhPT0gaW5pdGlhbGl6ZU1pbnQySW5zdHJ1Y3Rpb25EYXRhLnNwYW4pXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvcigpO1xuICAgIGNvbnN0IHsga2V5czogeyBtaW50IH0sIGRhdGEsIH0gPSBkZWNvZGVJbml0aWFsaXplTWludDJJbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uSW5pdGlhbGl6ZU1pbnQyKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIW1pbnQpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgbWludCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZU1pbnQyIGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVNaW50Mkluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbbWludF0sIGRhdGEsIH0pIHtcbiAgICBjb25zdCB7IGluc3RydWN0aW9uLCBkZWNpbWFscywgbWludEF1dGhvcml0eSwgZnJlZXplQXV0aG9yaXR5T3B0aW9uLCBmcmVlemVBdXRob3JpdHkgfSA9IGluaXRpYWxpemVNaW50Mkluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBpbnN0cnVjdGlvbixcbiAgICAgICAgICAgIGRlY2ltYWxzLFxuICAgICAgICAgICAgbWludEF1dGhvcml0eSxcbiAgICAgICAgICAgIGZyZWV6ZUF1dGhvcml0eTogZnJlZXplQXV0aG9yaXR5T3B0aW9uID8gZnJlZXplQXV0aG9yaXR5IDogbnVsbCxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5pdGlhbGl6ZU1pbnQyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeMintCloseAuthority.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeMintCloseAuthority.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeMintCloseAuthorityInstructionData\": function() { return /* binding */ initializeMintCloseAuthorityInstructionData; },\n/* harmony export */   \"createInitializeMintCloseAuthorityInstruction\": function() { return /* binding */ createInitializeMintCloseAuthorityInstruction; },\n/* harmony export */   \"decodeInitializeMintCloseAuthorityInstruction\": function() { return /* binding */ decodeInitializeMintCloseAuthorityInstruction; },\n/* harmony export */   \"decodeInitializeMintCloseAuthorityInstructionUnchecked\": function() { return /* binding */ decodeInitializeMintCloseAuthorityInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst initializeMintCloseAuthorityInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('closeAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('closeAuthority'),\n]);\n/**\n * Construct an InitializeMintCloseAuthority instruction\n *\n * @param mint            Token mint account\n * @param closeAuthority  Optional authority that can close the mint\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeMintCloseAuthorityInstruction(mint, closeAuthority, programId) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeMintCloseAuthorityInstructionData.span);\n    initializeMintCloseAuthorityInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.InitializeMintCloseAuthority,\n        closeAuthorityOption: closeAuthority ? 1 : 0,\n        closeAuthority: closeAuthority || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMintCloseAuthority instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeMintCloseAuthorityInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMintCloseAuthorityInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializeMintCloseAuthorityInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.InitializeMintCloseAuthority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMintCloseAuthority instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeMintCloseAuthorityInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, closeAuthorityOption, closeAuthority } = initializeMintCloseAuthorityInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            closeAuthority: closeAuthorityOption ? closeAuthority : null,\n        },\n    };\n}\n//# sourceMappingURL=initializeMintCloseAuthority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU1pbnRDbG9zZUF1dGhvcml0eS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNLO0FBQ1k7QUFDUjtBQUNnSjtBQUM5SjtBQUM5QztBQUNPLG9EQUFvRCw2REFBTTtBQUNqRSxJQUFJLHlEQUFFO0FBQ04sSUFBSSx5REFBRTtBQUNOLElBQUksc0VBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyx3RUFBeUI7QUFDbEMsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLG9CQUFvQixpREFBaUQ7QUFDckUsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsb0ZBQTZDO0FBQ2xFO0FBQ0EsOENBQThDLHNEQUFTO0FBQ3ZELEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLE1BQU0sVUFBVTtBQUNwQyw2QkFBNkIsb0ZBQTZDO0FBQzFFLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0VBQWtFLGdDQUFnQztBQUN6RyxZQUFZLG9EQUFvRDtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9pbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5LmpzP2U5YzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgUHVibGljS2V5LCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IHByb2dyYW1TdXBwb3J0c0V4dGVuc2lvbnMgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVNaW50Q2xvc2VBdXRob3JpdHlJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgIHU4KCdjbG9zZUF1dGhvcml0eU9wdGlvbicpLFxuICAgIHB1YmxpY0tleSgnY2xvc2VBdXRob3JpdHknKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYW4gSW5pdGlhbGl6ZU1pbnRDbG9zZUF1dGhvcml0eSBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICAgVG9rZW4gbWludCBhY2NvdW50XG4gKiBAcGFyYW0gY2xvc2VBdXRob3JpdHkgIE9wdGlvbmFsIGF1dGhvcml0eSB0aGF0IGNhbiBjbG9zZSB0aGUgbWludFxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZU1pbnRDbG9zZUF1dGhvcml0eUluc3RydWN0aW9uKG1pbnQsIGNsb3NlQXV0aG9yaXR5LCBwcm9ncmFtSWQpIHtcbiAgICBpZiAoIXByb2dyYW1TdXBwb3J0c0V4dGVuc2lvbnMocHJvZ3JhbUlkKSkge1xuICAgICAgICB0aHJvdyBuZXcgVG9rZW5VbnN1cHBvcnRlZEluc3RydWN0aW9uRXJyb3IoKTtcbiAgICB9XG4gICAgY29uc3Qga2V5cyA9IFt7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH1dO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MoaW5pdGlhbGl6ZU1pbnRDbG9zZUF1dGhvcml0eUluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBpbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5SW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVNaW50Q2xvc2VBdXRob3JpdHksXG4gICAgICAgIGNsb3NlQXV0aG9yaXR5T3B0aW9uOiBjbG9zZUF1dGhvcml0eSA/IDEgOiAwLFxuICAgICAgICBjbG9zZUF1dGhvcml0eTogY2xvc2VBdXRob3JpdHkgfHwgbmV3IFB1YmxpY0tleSgwKSxcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5IGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZU1pbnRDbG9zZUF1dGhvcml0eUluc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBpbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5SW5zdHJ1Y3Rpb25EYXRhLnNwYW4pXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvcigpO1xuICAgIGNvbnN0IHsga2V5czogeyBtaW50IH0sIGRhdGEsIH0gPSBkZWNvZGVJbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5SW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVNaW50Q2xvc2VBdXRob3JpdHkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghbWludClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5IGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVNaW50Q2xvc2VBdXRob3JpdHlJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW21pbnRdLCBkYXRhLCB9KSB7XG4gICAgY29uc3QgeyBpbnN0cnVjdGlvbiwgY2xvc2VBdXRob3JpdHlPcHRpb24sIGNsb3NlQXV0aG9yaXR5IH0gPSBpbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5SW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGluc3RydWN0aW9uLFxuICAgICAgICAgICAgY2xvc2VBdXRob3JpdHk6IGNsb3NlQXV0aG9yaXR5T3B0aW9uID8gY2xvc2VBdXRob3JpdHkgOiBudWxsLFxuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeMintCloseAuthority.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeMultisigInstructionData\": function() { return /* binding */ initializeMultisigInstructionData; },\n/* harmony export */   \"createInitializeMultisigInstruction\": function() { return /* binding */ createInitializeMultisigInstruction; },\n/* harmony export */   \"decodeInitializeMultisigInstruction\": function() { return /* binding */ decodeInitializeMultisigInstruction; },\n/* harmony export */   \"decodeInitializeMultisigInstructionUnchecked\": function() { return /* binding */ decodeInitializeMultisigInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n/** TODO: docs */\nconst initializeMultisigInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('m'),\n]);\n/**\n * Construct an InitializeMultisig instruction\n *\n * @param account   Multisig account\n * @param signers   Full set of signers\n * @param m         Number of required signatures\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeMultisigInstruction(account, signers, m, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    for (const signer of signers) {\n        keys.push({\n            pubkey: signer instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey ? signer : signer.publicKey,\n            isSigner: false,\n            isWritable: false,\n        });\n    }\n    const data = Buffer.alloc(initializeMultisigInstructionData.span);\n    initializeMultisigInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMultisig,\n        m,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMultisig instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeMultisigInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMultisigInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { account, rent, signers }, data, } = decodeInitializeMultisigInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.InitializeMultisig)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!account || !rent || !signers.length)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            rent,\n            signers,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMultisig instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeMultisigInstructionUnchecked({ programId, keys: [account, rent, ...signers], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            rent,\n            signers,\n        },\n        data: initializeMultisigInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeMultisig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU11bHRpc2lnLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDcUM7QUFDckM7QUFDdUg7QUFDNUg7QUFDOUM7QUFDTywwQ0FBMEMsNkRBQU07QUFDdkQsSUFBSSx5REFBRTtBQUNOLElBQUkseURBQUU7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEVBQThFLDJEQUFnQjtBQUNyRztBQUNBLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsUUFBUSwrREFBa0Isc0NBQXNDO0FBQzFFO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxzREFBUztBQUMvQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsMEVBQW1DO0FBQ3hEO0FBQ0EsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNFQUFzRSwyREFBZ0I7QUFDN0Y7QUFDQSxrQkFBa0IsMkVBQW1DO0FBQ3JEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRCxZQUFZLFFBQVEsd0JBQXdCLFVBQVU7QUFDdEQsNkJBQTZCLDBFQUFtQztBQUNoRSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdEQUF3RCxxREFBcUQ7QUFDcEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9pbml0aWFsaXplTXVsdGlzaWcuanM/Njk5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IFB1YmxpY0tleSwgU1lTVkFSX1JFTlRfUFVCS0VZLCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZU11bHRpc2lnSW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFtcbiAgICB1OCgnaW5zdHJ1Y3Rpb24nKSxcbiAgICB1OCgnbScpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBJbml0aWFsaXplTXVsdGlzaWcgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgIE11bHRpc2lnIGFjY291bnRcbiAqIEBwYXJhbSBzaWduZXJzICAgRnVsbCBzZXQgb2Ygc2lnbmVyc1xuICogQHBhcmFtIG0gICAgICAgICBOdW1iZXIgb2YgcmVxdWlyZWQgc2lnbmF0dXJlc1xuICogQHBhcmFtIHByb2dyYW1JZCBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZU11bHRpc2lnSW5zdHJ1Y3Rpb24oYWNjb3VudCwgc2lnbmVycywgbSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBbXG4gICAgICAgIHsgcHVia2V5OiBhY2NvdW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IFNZU1ZBUl9SRU5UX1BVQktFWSwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgIF07XG4gICAgZm9yIChjb25zdCBzaWduZXIgb2Ygc2lnbmVycykge1xuICAgICAgICBrZXlzLnB1c2goe1xuICAgICAgICAgICAgcHVia2V5OiBzaWduZXIgaW5zdGFuY2VvZiBQdWJsaWNLZXkgPyBzaWduZXIgOiBzaWduZXIucHVibGljS2V5LFxuICAgICAgICAgICAgaXNTaWduZXI6IGZhbHNlLFxuICAgICAgICAgICAgaXNXcml0YWJsZTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGluaXRpYWxpemVNdWx0aXNpZ0luc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBpbml0aWFsaXplTXVsdGlzaWdJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uSW5pdGlhbGl6ZU11bHRpc2lnLFxuICAgICAgICBtLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGFuIEluaXRpYWxpemVNdWx0aXNpZyBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUluaXRpYWxpemVNdWx0aXNpZ0luc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFpbnN0cnVjdGlvbi5wcm9ncmFtSWQuZXF1YWxzKHByb2dyYW1JZCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvcigpO1xuICAgIGlmIChpbnN0cnVjdGlvbi5kYXRhLmxlbmd0aCAhPT0gaW5pdGlhbGl6ZU11bHRpc2lnSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvcigpO1xuICAgIGNvbnN0IHsga2V5czogeyBhY2NvdW50LCByZW50LCBzaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVJbml0aWFsaXplTXVsdGlzaWdJbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uSW5pdGlhbGl6ZU11bHRpc2lnKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIWFjY291bnQgfHwgIXJlbnQgfHwgIXNpZ25lcnMubGVuZ3RoKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IoKTtcbiAgICAvLyBUT0RPOiBrZXkgY2hlY2tzP1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIHJlbnQsXG4gICAgICAgICAgICBzaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhbiBJbml0aWFsaXplTXVsdGlzaWcgaW5zdHJ1Y3Rpb24gd2l0aG91dCB2YWxpZGF0aW5nIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgbm9uLXZhbGlkYXRlZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZU11bHRpc2lnSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFthY2NvdW50LCByZW50LCAuLi5zaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIHJlbnQsXG4gICAgICAgICAgICBzaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBpbml0aWFsaXplTXVsdGlzaWdJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbml0aWFsaXplTXVsdGlzaWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig2.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig2.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=initializeMultisig2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU11bHRpc2lnMi5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU11bHRpc2lnMi5qcz8wOTdiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXRpYWxpemVNdWx0aXNpZzIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig2.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializeNonTransferableMint.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializeNonTransferableMint.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeNonTransferableMintInstructionData\": function() { return /* binding */ initializeNonTransferableMintInstructionData; },\n/* harmony export */   \"createInitializeNonTransferableMintInstruction\": function() { return /* binding */ createInitializeNonTransferableMintInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n/** The struct that represents the instruction data as it is read by the program */\nconst initializeNonTransferableMintInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n]);\n/**\n * Construct an InitializeNonTransferableMint instruction\n *\n * @param mint           Mint Account to make non-transferable\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeNonTransferableMintInstruction(mint, programId) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeNonTransferableMintInstructionData.span);\n    initializeNonTransferableMintInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.InitializeNonTransferableMint,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=initializeNonTransferableMint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZU5vblRyYW5zZmVyYWJsZU1pbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDTTtBQUNHO0FBQ0k7QUFDbEI7QUFDOUM7QUFDTyxxREFBcUQsNkRBQU07QUFDbEUsSUFBSSx5REFBRTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyx3RUFBeUI7QUFDbEMsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLG9CQUFvQixpREFBaUQ7QUFDckUsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIscUZBQThDO0FBQ25FLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9pbml0aWFsaXplTm9uVHJhbnNmZXJhYmxlTWludC5qcz8xMzk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBwcm9ncmFtU3VwcG9ydHNFeHRlbnNpb25zIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUaGUgc3RydWN0IHRoYXQgcmVwcmVzZW50cyB0aGUgaW5zdHJ1Y3Rpb24gZGF0YSBhcyBpdCBpcyByZWFkIGJ5IHRoZSBwcm9ncmFtICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZU5vblRyYW5zZmVyYWJsZU1pbnRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW1xuICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhbiBJbml0aWFsaXplTm9uVHJhbnNmZXJhYmxlTWludCBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICBNaW50IEFjY291bnQgdG8gbWFrZSBub24tdHJhbnNmZXJhYmxlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxpemVOb25UcmFuc2ZlcmFibGVNaW50SW5zdHJ1Y3Rpb24obWludCwgcHJvZ3JhbUlkKSB7XG4gICAgaWYgKCFwcm9ncmFtU3VwcG9ydHNFeHRlbnNpb25zKHByb2dyYW1JZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuVW5zdXBwb3J0ZWRJbnN0cnVjdGlvbkVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBbeyBwdWJrZXk6IG1pbnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9XTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKGluaXRpYWxpemVOb25UcmFuc2ZlcmFibGVNaW50SW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIGluaXRpYWxpemVOb25UcmFuc2ZlcmFibGVNaW50SW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVOb25UcmFuc2ZlcmFibGVNaW50LFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXRpYWxpemVOb25UcmFuc2ZlcmFibGVNaW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializeNonTransferableMint.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/initializePermanentDelegate.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/initializePermanentDelegate.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializePermanentDelegateInstructionData\": function() { return /* binding */ initializePermanentDelegateInstructionData; },\n/* harmony export */   \"createInitializePermanentDelegateInstruction\": function() { return /* binding */ createInitializePermanentDelegateInstruction; },\n/* harmony export */   \"decodeInitializePermanentDelegateInstruction\": function() { return /* binding */ decodeInitializePermanentDelegateInstruction; },\n/* harmony export */   \"decodeInitializePermanentDelegateInstructionUnchecked\": function() { return /* binding */ decodeInitializePermanentDelegateInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst initializePermanentDelegateInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('delegate'),\n]);\n/**\n * Construct an InitializePermanentDelegate instruction\n *\n * @param mint               Token mint account\n * @param permanentDelegate  Authority that may sign for `Transfer`s and `Burn`s on any account\n * @param programId          SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializePermanentDelegateInstruction(mint, permanentDelegate, programId) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializePermanentDelegateInstructionData.span);\n    initializePermanentDelegateInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.InitializePermanentDelegate,\n        delegate: permanentDelegate || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializePermanentDelegate instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializePermanentDelegateInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializePermanentDelegateInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializePermanentDelegateInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.InitializePermanentDelegate)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializePermanentDelegate instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializePermanentDelegateInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, delegate } = initializePermanentDelegateInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            delegate,\n        },\n    };\n}\n//# sourceMappingURL=initializePermanentDelegate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0s7QUFDWjtBQUNhO0FBQ0c7QUFDZ0o7QUFDOUo7QUFDOUM7QUFDTyxtREFBbUQsNkRBQU07QUFDaEUsSUFBSSx5REFBRTtBQUNOLElBQUksc0VBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyx3RUFBeUI7QUFDbEMsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLG9CQUFvQixpREFBaUQ7QUFDckUsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsbUZBQTRDO0FBQ2pFLDJDQUEyQyxzREFBUztBQUNwRCxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSxNQUFNLFVBQVU7QUFDcEMsNkJBQTZCLG1GQUE0QztBQUN6RSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlFQUFpRSxnQ0FBZ0M7QUFDeEcsWUFBWSx3QkFBd0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlLmpzP2IwYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucyB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgVG9rZW5VbnN1cHBvcnRlZEluc3RydWN0aW9uRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlSW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFtcbiAgICB1OCgnaW5zdHJ1Y3Rpb24nKSxcbiAgICBwdWJsaWNLZXkoJ2RlbGVnYXRlJyksXG5dKTtcbi8qKlxuICogQ29uc3RydWN0IGFuIEluaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZSBpbnN0cnVjdGlvblxuICpcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgICAgICAgVG9rZW4gbWludCBhY2NvdW50XG4gKiBAcGFyYW0gcGVybWFuZW50RGVsZWdhdGUgIEF1dGhvcml0eSB0aGF0IG1heSBzaWduIGZvciBgVHJhbnNmZXJgcyBhbmQgYEJ1cm5gcyBvbiBhbnkgYWNjb3VudFxuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlSW5zdHJ1Y3Rpb24obWludCwgcGVybWFuZW50RGVsZWdhdGUsIHByb2dyYW1JZCkge1xuICAgIGlmICghcHJvZ3JhbVN1cHBvcnRzRXh0ZW5zaW9ucyhwcm9ncmFtSWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUb2tlblVuc3VwcG9ydGVkSW5zdHJ1Y3Rpb25FcnJvcigpO1xuICAgIH1cbiAgICBjb25zdCBrZXlzID0gW3sgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfV07XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhpbml0aWFsaXplUGVybWFuZW50RGVsZWdhdGVJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgaW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZSxcbiAgICAgICAgZGVsZWdhdGU6IHBlcm1hbmVudERlbGVnYXRlIHx8IG5ldyBQdWJsaWNLZXkoMCksXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYW4gSW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlIGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlSW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IGluaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZUluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgbWludCB9LCBkYXRhLCB9ID0gZGVjb2RlSW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLkluaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFtaW50KVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGFuIEluaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZSBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVJbml0aWFsaXplUGVybWFuZW50RGVsZWdhdGVJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW21pbnRdLCBkYXRhLCB9KSB7XG4gICAgY29uc3QgeyBpbnN0cnVjdGlvbiwgZGVsZWdhdGUgfSA9IGluaXRpYWxpemVQZXJtYW5lbnREZWxlZ2F0ZUluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBpbnN0cnVjdGlvbixcbiAgICAgICAgICAgIGRlbGVnYXRlLFxuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbml0aWFsaXplUGVybWFuZW50RGVsZWdhdGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/initializePermanentDelegate.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/internal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/internal.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addSigners\": function() { return /* binding */ addSigners; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n\n/** @internal */\nfunction addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW50ZXJuYWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDNUM7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLDhEQUE4RDtBQUNsRjtBQUNBO0FBQ0EsMENBQTBDLHNEQUFTO0FBQ25EO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZEQUE2RDtBQUNqRjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvaW50ZXJuYWwuanM/MDNjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZFNpZ25lcnMoa2V5cywgb3duZXJPckF1dGhvcml0eSwgbXVsdGlTaWduZXJzKSB7XG4gICAgaWYgKG11bHRpU2lnbmVycy5sZW5ndGgpIHtcbiAgICAgICAga2V5cy5wdXNoKHsgcHVia2V5OiBvd25lck9yQXV0aG9yaXR5LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0pO1xuICAgICAgICBmb3IgKGNvbnN0IHNpZ25lciBvZiBtdWx0aVNpZ25lcnMpIHtcbiAgICAgICAgICAgIGtleXMucHVzaCh7XG4gICAgICAgICAgICAgICAgcHVia2V5OiBzaWduZXIgaW5zdGFuY2VvZiBQdWJsaWNLZXkgPyBzaWduZXIgOiBzaWduZXIucHVibGljS2V5LFxuICAgICAgICAgICAgICAgIGlzU2lnbmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzV3JpdGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGtleXMucHVzaCh7IHB1YmtleTogb3duZXJPckF1dGhvcml0eSwgaXNTaWduZXI6IHRydWUsIGlzV3JpdGFibGU6IGZhbHNlIH0pO1xuICAgIH1cbiAgICByZXR1cm4ga2V5cztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mintToInstructionData\": function() { return /* binding */ mintToInstructionData; },\n/* harmony export */   \"createMintToInstruction\": function() { return /* binding */ createMintToInstruction; },\n/* harmony export */   \"decodeMintToInstruction\": function() { return /* binding */ decodeMintToInstruction; },\n/* harmony export */   \"decodeMintToInstructionUnchecked\": function() { return /* binding */ decodeMintToInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst mintToInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'), (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount')]);\n/**\n * Construct a MintTo instruction\n *\n * @param mint         Public key of the mint\n * @param destination  Address of the token account to mint to\n * @param authority    The mint authority\n * @param amount       Amount to mint\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createMintToInstruction(mint, destination, authority, amount, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(mintToInstructionData.span);\n    mintToInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.MintTo,\n        amount: BigInt(amount),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a MintTo instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeMintToInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, multiSigners }, data, } = decodeMintToInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.MintTo)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a MintTo instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeMintToInstructionUnchecked({ programId, keys: [mint, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: mintToInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=mintTo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvbWludFRvLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNEO0FBQ087QUFDTjtBQUN1SDtBQUMvSDtBQUNHO0FBQzlDO0FBQ08sOEJBQThCLDZEQUFNLEVBQUUseURBQUUsaUJBQWlCLGdFQUFHO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNHQUFzRywyREFBZ0I7QUFDN0gsaUJBQWlCLHdEQUFVO0FBQzNCLFVBQVUsaURBQWlEO0FBQzNELFVBQVUsd0RBQXdEO0FBQ2xFO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsOERBQXVCO0FBQzVDO0FBQ0EsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBEQUEwRCwyREFBZ0I7QUFDakY7QUFDQSxrQkFBa0IsMkVBQW1DO0FBQ3JEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRCxZQUFZLFFBQVEsNENBQTRDLFVBQVU7QUFDMUUsNkJBQTZCLDhEQUF1QjtBQUNwRCxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNENBQTRDLHlFQUF5RTtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvbWludFRvLmpzP2Y0MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyB1NjQgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBhZGRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IG1pbnRUb0luc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbdTgoJ2luc3RydWN0aW9uJyksIHU2NCgnYW1vdW50JyldKTtcbi8qKlxuICogQ29uc3RydWN0IGEgTWludFRvIGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIG1pbnQgICAgICAgICBQdWJsaWMga2V5IG9mIHRoZSBtaW50XG4gKiBAcGFyYW0gZGVzdGluYXRpb24gIEFkZHJlc3Mgb2YgdGhlIHRva2VuIGFjY291bnQgdG8gbWludCB0b1xuICogQHBhcmFtIGF1dGhvcml0eSAgICBUaGUgbWludCBhdXRob3JpdHlcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgQW1vdW50IHRvIG1pbnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgYXV0aG9yaXR5YCBpcyBhIG11bHRpc2lnXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNaW50VG9JbnN0cnVjdGlvbihtaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5LCBhbW91bnQsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IGFkZFNpZ25lcnMoW1xuICAgICAgICB7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBkZXN0aW5hdGlvbiwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgXSwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MobWludFRvSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIG1pbnRUb0luc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5NaW50VG8sXG4gICAgICAgIGFtb3VudDogQmlnSW50KGFtb3VudCksXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBNaW50VG8gaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNaW50VG9JbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IG1pbnRUb0luc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgbWludCwgZGVzdGluYXRpb24sIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVNaW50VG9JbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uTWludFRvKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIW1pbnQgfHwgIWRlc3RpbmF0aW9uIHx8ICFhdXRob3JpdHkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIC8vIFRPRE86IGtleSBjaGVja3M/XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICBhdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgTWludFRvIGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1pbnRUb0luc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbbWludCwgZGVzdGluYXRpb24sIGF1dGhvcml0eSwgLi4ubXVsdGlTaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgbWludCxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgYXV0aG9yaXR5LFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBtaW50VG9JbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taW50VG8uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mintToCheckedInstructionData\": function() { return /* binding */ mintToCheckedInstructionData; },\n/* harmony export */   \"createMintToCheckedInstruction\": function() { return /* binding */ createMintToCheckedInstruction; },\n/* harmony export */   \"decodeMintToCheckedInstruction\": function() { return /* binding */ decodeMintToCheckedInstruction; },\n/* harmony export */   \"decodeMintToCheckedInstructionUnchecked\": function() { return /* binding */ decodeMintToCheckedInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst mintToCheckedInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n]);\n/**\n * Construct a MintToChecked instruction\n *\n * @param mint         Public key of the mint\n * @param destination  Address of the token account to mint to\n * @param authority    The mint authority\n * @param amount       Amount to mint\n * @param decimals     Number of decimals in amount to mint\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createMintToCheckedInstruction(mint, destination, authority, amount, decimals, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(mintToCheckedInstructionData.span);\n    mintToCheckedInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.MintToChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a MintToChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeMintToCheckedInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToCheckedInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, multiSigners }, data, } = decodeMintToCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.MintToChecked)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a MintToChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeMintToCheckedInstructionUnchecked({ programId, keys: [mint, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: mintToCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=mintToChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvbWludFRvQ2hlY2tlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDRDtBQUNPO0FBQ047QUFDdUg7QUFDL0g7QUFDRztBQUM5QztBQUNPLHFDQUFxQyw2REFBTTtBQUNsRCxJQUFJLHlEQUFFO0FBQ04sSUFBSSxnRUFBRztBQUNQLElBQUkseURBQUU7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sdUhBQXVILDJEQUFnQjtBQUM5SSxpQkFBaUIsd0RBQVU7QUFDM0IsVUFBVSxpREFBaUQ7QUFDM0QsVUFBVSx3REFBd0Q7QUFDbEU7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQixxRUFBOEI7QUFDbkQ7QUFDQTtBQUNBLEtBQUs7QUFDTCxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpRUFBaUUsMkRBQWdCO0FBQ3hGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLDRDQUE0QyxVQUFVO0FBQzFFLDZCQUE2QixxRUFBOEI7QUFDM0Qsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1EQUFtRCx5RUFBeUU7QUFDbkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL21pbnRUb0NoZWNrZWQuanM/MTNmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHU2NCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgbWludFRvQ2hlY2tlZEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgdTY0KCdhbW91bnQnKSxcbiAgICB1OCgnZGVjaW1hbHMnKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSBNaW50VG9DaGVja2VkIGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIG1pbnQgICAgICAgICBQdWJsaWMga2V5IG9mIHRoZSBtaW50XG4gKiBAcGFyYW0gZGVzdGluYXRpb24gIEFkZHJlc3Mgb2YgdGhlIHRva2VuIGFjY291bnQgdG8gbWludCB0b1xuICogQHBhcmFtIGF1dGhvcml0eSAgICBUaGUgbWludCBhdXRob3JpdHlcbiAqIEBwYXJhbSBhbW91bnQgICAgICAgQW1vdW50IHRvIG1pbnRcbiAqIEBwYXJhbSBkZWNpbWFscyAgICAgTnVtYmVyIG9mIGRlY2ltYWxzIGluIGFtb3VudCB0byBtaW50XG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzIFNpZ25pbmcgYWNjb3VudHMgaWYgYGF1dGhvcml0eWAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIHByb2dyYW1JZCAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWludFRvQ2hlY2tlZEluc3RydWN0aW9uKG1pbnQsIGRlc3RpbmF0aW9uLCBhdXRob3JpdHksIGFtb3VudCwgZGVjaW1hbHMsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IGFkZFNpZ25lcnMoW1xuICAgICAgICB7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBkZXN0aW5hdGlvbiwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgXSwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2MobWludFRvQ2hlY2tlZEluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBtaW50VG9DaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLk1pbnRUb0NoZWNrZWQsXG4gICAgICAgIGFtb3VudDogQmlnSW50KGFtb3VudCksXG4gICAgICAgIGRlY2ltYWxzLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGEgTWludFRvQ2hlY2tlZCBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1pbnRUb0NoZWNrZWRJbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IG1pbnRUb0NoZWNrZWRJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IG1pbnQsIGRlc3RpbmF0aW9uLCBhdXRob3JpdHksIG11bHRpU2lnbmVycyB9LCBkYXRhLCB9ID0gZGVjb2RlTWludFRvQ2hlY2tlZEluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5NaW50VG9DaGVja2VkKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIW1pbnQgfHwgIWRlc3RpbmF0aW9uIHx8ICFhdXRob3JpdHkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIC8vIFRPRE86IGtleSBjaGVja3M/XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICBhdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgTWludFRvQ2hlY2tlZCBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNaW50VG9DaGVja2VkSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFttaW50LCBkZXN0aW5hdGlvbiwgYXV0aG9yaXR5LCAuLi5tdWx0aVNpZ25lcnNdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICBhdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IG1pbnRUb0NoZWNrZWRJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taW50VG9DaGVja2VkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/reallocate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/reallocate.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createReallocateInstruction\": function() { return /* binding */ createReallocateInstruction; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/**\n * Construct a Reallocate instruction\n *\n * @param account        Address of the token account\n * @param payer          Address paying for the reallocation\n * @param extensionTypes Extensions to reallocate for\n * @param owner          Owner of the account\n * @param multiSigners   Signing accounts if `owner` is a multisig\n * @param programId      SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createReallocateInstruction(account, payer, extensionTypes, owner, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_2022_PROGRAM_ID) {\n    if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.programSupportsExtensions)(programId)) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenUnsupportedInstructionError();\n    }\n    const baseKeys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.programId, isSigner: false, isWritable: false },\n    ];\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)(baseKeys, owner, multiSigners);\n    const reallocateInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.seq)((0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u16)(), extensionTypes.length, 'extensionTypes'),\n    ]);\n    const data = Buffer.alloc(reallocateInstructionData.span);\n    reallocateInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Reallocate, extensionTypes }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=reallocate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvcmVhbGxvY2F0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE2RDtBQUNXO0FBQ1c7QUFDbkI7QUFDckI7QUFDRztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyR0FBMkcsZ0VBQXFCO0FBQ3ZJLFNBQVMsd0VBQXlCO0FBQ2xDLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsaURBQWlEO0FBQzNELFVBQVUsUUFBUSxvRUFBdUIsc0NBQXNDO0FBQy9FO0FBQ0EsaUJBQWlCLHdEQUFVO0FBQzNCLHNDQUFzQyw2REFBTTtBQUM1QyxRQUFRLHlEQUFFO0FBQ1YsUUFBUSwwREFBRyxDQUFDLDBEQUFHO0FBQ2Y7QUFDQSxpQkFBaUIsTUFBTTtBQUN2Qix1Q0FBdUMsYUFBYSxrRUFBMkIsa0JBQWtCO0FBQ2pHLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL3JlYWxsb2NhdGUuanM/ODQ5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXEsIHN0cnVjdCwgdTE2LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBTeXN0ZW1Qcm9ncmFtLCBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IHByb2dyYW1TdXBwb3J0c0V4dGVuc2lvbnMsIFRPS0VOXzIwMjJfUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlblVuc3VwcG9ydGVkSW5zdHJ1Y3Rpb25FcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBhZGRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKipcbiAqIENvbnN0cnVjdCBhIFJlYWxsb2NhdGUgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgQWRkcmVzcyBvZiB0aGUgdG9rZW4gYWNjb3VudFxuICogQHBhcmFtIHBheWVyICAgICAgICAgIEFkZHJlc3MgcGF5aW5nIGZvciB0aGUgcmVhbGxvY2F0aW9uXG4gKiBAcGFyYW0gZXh0ZW5zaW9uVHlwZXMgRXh0ZW5zaW9ucyB0byByZWFsbG9jYXRlIGZvclxuICogQHBhcmFtIG93bmVyICAgICAgICAgIE93bmVyIG9mIHRoZSBhY2NvdW50XG4gKiBAcGFyYW0gbXVsdGlTaWduZXJzICAgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVhbGxvY2F0ZUluc3RydWN0aW9uKGFjY291bnQsIHBheWVyLCBleHRlbnNpb25UeXBlcywgb3duZXIsIG11bHRpU2lnbmVycyA9IFtdLCBwcm9ncmFtSWQgPSBUT0tFTl8yMDIyX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIXByb2dyYW1TdXBwb3J0c0V4dGVuc2lvbnMocHJvZ3JhbUlkKSkge1xuICAgICAgICB0aHJvdyBuZXcgVG9rZW5VbnN1cHBvcnRlZEluc3RydWN0aW9uRXJyb3IoKTtcbiAgICB9XG4gICAgY29uc3QgYmFzZUtleXMgPSBbXG4gICAgICAgIHsgcHVia2V5OiBhY2NvdW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgeyBwdWJrZXk6IHBheWVyLCBpc1NpZ25lcjogdHJ1ZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogU3lzdGVtUHJvZ3JhbS5wcm9ncmFtSWQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogZmFsc2UgfSxcbiAgICBdO1xuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKGJhc2VLZXlzLCBvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCByZWFsbG9jYXRlSW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFtcbiAgICAgICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgICAgIHNlcSh1MTYoKSwgZXh0ZW5zaW9uVHlwZXMubGVuZ3RoLCAnZXh0ZW5zaW9uVHlwZXMnKSxcbiAgICBdKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKHJlYWxsb2NhdGVJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgcmVhbGxvY2F0ZUluc3RydWN0aW9uRGF0YS5lbmNvZGUoeyBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5SZWFsbG9jYXRlLCBleHRlbnNpb25UeXBlcyB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFsbG9jYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/reallocate.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/revoke.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/revoke.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"revokeInstructionData\": function() { return /* binding */ revokeInstructionData; },\n/* harmony export */   \"createRevokeInstruction\": function() { return /* binding */ createRevokeInstruction; },\n/* harmony export */   \"decodeRevokeInstruction\": function() { return /* binding */ decodeRevokeInstruction; },\n/* harmony export */   \"decodeRevokeInstructionUnchecked\": function() { return /* binding */ decodeRevokeInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst revokeInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct a Revoke instruction\n *\n * @param account      Address of the token account\n * @param owner        Owner of the account\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createRevokeInstruction(account, owner, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_3__.addSigners)([{ pubkey: account, isSigner: false, isWritable: true }], owner, multiSigners);\n    const data = Buffer.alloc(revokeInstructionData.span);\n    revokeInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.Revoke }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Revoke instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeRevokeInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== revokeInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { account, owner, multiSigners }, data, } = decodeRevokeInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.Revoke)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!account || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Revoke instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeRevokeInstructionUnchecked({ programId, keys: [account, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            owner,\n            multiSigners,\n        },\n        data: revokeInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=revoke.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvcmV2b2tlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ007QUFDTjtBQUN1SDtBQUMvSDtBQUNHO0FBQzlDO0FBQ08sOEJBQThCLDZEQUFNLEVBQUUseURBQUU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnRkFBZ0YsMkRBQWdCO0FBQ3ZHLGlCQUFpQix3REFBVSxJQUFJLG9EQUFvRDtBQUNuRixpQkFBaUIsTUFBTTtBQUN2QixtQ0FBbUMsYUFBYSw4REFBdUIsRUFBRTtBQUN6RSxlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwREFBMEQsMkRBQWdCO0FBQ2pGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLDhCQUE4QixVQUFVO0FBQzVELDZCQUE2Qiw4REFBdUI7QUFDcEQsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEMsMkRBQTJEO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvcmV2b2tlLmpzP2U0YWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgcmV2b2tlSW5zdHJ1Y3Rpb25EYXRhID0gc3RydWN0KFt1OCgnaW5zdHJ1Y3Rpb24nKV0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSBSZXZva2UgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgIEFkZHJlc3Mgb2YgdGhlIHRva2VuIGFjY291bnRcbiAqIEBwYXJhbSBvd25lciAgICAgICAgT3duZXIgb2YgdGhlIGFjY291bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJldm9rZUluc3RydWN0aW9uKGFjY291bnQsIG93bmVyLCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFt7IHB1YmtleTogYWNjb3VudCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH1dLCBvd25lciwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKHJldm9rZUluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICByZXZva2VJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHsgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uUmV2b2tlIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGEgUmV2b2tlIGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlUmV2b2tlSW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSByZXZva2VJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG93bmVyLCBtdWx0aVNpZ25lcnMgfSwgZGF0YSwgfSA9IGRlY29kZVJldm9rZUluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5SZXZva2UpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudCB8fCAhb3duZXIpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIC8vIFRPRE86IGtleSBjaGVja3M/XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgb3duZXIsXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgUmV2b2tlIGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVJldm9rZUluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgb3duZXIsIC4uLm11bHRpU2lnbmVyc10sIGRhdGEsIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogcmV2b2tlSW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV2b2tlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/revoke.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AuthorityType\": function() { return /* binding */ AuthorityType; },\n/* harmony export */   \"setAuthorityInstructionData\": function() { return /* binding */ setAuthorityInstructionData; },\n/* harmony export */   \"createSetAuthorityInstruction\": function() { return /* binding */ createSetAuthorityInstruction; },\n/* harmony export */   \"decodeSetAuthorityInstruction\": function() { return /* binding */ decodeSetAuthorityInstruction; },\n/* harmony export */   \"decodeSetAuthorityInstructionUnchecked\": function() { return /* binding */ decodeSetAuthorityInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** Authority types defined by the program */\nvar AuthorityType;\n(function (AuthorityType) {\n    AuthorityType[AuthorityType[\"MintTokens\"] = 0] = \"MintTokens\";\n    AuthorityType[AuthorityType[\"FreezeAccount\"] = 1] = \"FreezeAccount\";\n    AuthorityType[AuthorityType[\"AccountOwner\"] = 2] = \"AccountOwner\";\n    AuthorityType[AuthorityType[\"CloseAccount\"] = 3] = \"CloseAccount\";\n})(AuthorityType || (AuthorityType = {}));\n/** TODO: docs */\nconst setAuthorityInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('authorityType'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('newAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('newAuthority'),\n]);\n/**\n * Construct a SetAuthority instruction\n *\n * @param account          Address of the token account\n * @param currentAuthority Current authority of the specified type\n * @param authorityType    Type of authority to set\n * @param newAuthority     New authority of the account\n * @param multiSigners     Signing accounts if `currentAuthority` is a multisig\n * @param programId        SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createSetAuthorityInstruction(account, currentAuthority, authorityType, newAuthority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([{ pubkey: account, isSigner: false, isWritable: true }], currentAuthority, multiSigners);\n    const data = Buffer.alloc(setAuthorityInstructionData.span);\n    setAuthorityInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.SetAuthority,\n        authorityType,\n        newAuthorityOption: newAuthority ? 1 : 0,\n        newAuthority: newAuthority || new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(0),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a SetAuthority instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeSetAuthorityInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== setAuthorityInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { account, currentAuthority, multiSigners }, data, } = decodeSetAuthorityInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.SetAuthority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!account || !currentAuthority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            currentAuthority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a SetAuthority instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeSetAuthorityInstructionUnchecked({ programId, keys: [account, currentAuthority, ...multiSigners], data, }) {\n    const { instruction, authorityType, newAuthorityOption, newAuthority } = setAuthorityInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            account,\n            currentAuthority,\n            multiSigners,\n        },\n        data: {\n            instruction,\n            authorityType,\n            newAuthority: newAuthorityOption ? newAuthority : null,\n        },\n    };\n}\n//# sourceMappingURL=setAuthority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvc2V0QXV0aG9yaXR5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDSztBQUNZO0FBQ2pCO0FBQ3VIO0FBQy9IO0FBQ0c7QUFDOUM7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QztBQUNPLG9DQUFvQyw2REFBTTtBQUNqRCxJQUFJLHlEQUFFO0FBQ04sSUFBSSx5REFBRTtBQUNOLElBQUkseURBQUU7QUFDTixJQUFJLHNFQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw4SEFBOEgsMkRBQWdCO0FBQ3JKLGlCQUFpQix3REFBVSxJQUFJLG9EQUFvRDtBQUNuRixpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQixvRUFBNkI7QUFDbEQ7QUFDQTtBQUNBLDBDQUEwQyxzREFBUztBQUNuRCxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0VBQWdFLDJEQUFnQjtBQUN2RjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSx5Q0FBeUMsVUFBVTtBQUN2RSw2QkFBNkIsb0VBQTZCO0FBQzFELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0RBQWtELHNFQUFzRTtBQUMvSCxZQUFZLCtEQUErRDtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy9zZXRBdXRob3JpdHkuanM/ZTQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJ1Y3QsIHU4IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0JztcbmltcG9ydCB7IHB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dC11dGlscyc7XG5pbXBvcnQgeyBQdWJsaWNLZXksIFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgYWRkU2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIEF1dGhvcml0eSB0eXBlcyBkZWZpbmVkIGJ5IHRoZSBwcm9ncmFtICovXG5leHBvcnQgdmFyIEF1dGhvcml0eVR5cGU7XG4oZnVuY3Rpb24gKEF1dGhvcml0eVR5cGUpIHtcbiAgICBBdXRob3JpdHlUeXBlW0F1dGhvcml0eVR5cGVbXCJNaW50VG9rZW5zXCJdID0gMF0gPSBcIk1pbnRUb2tlbnNcIjtcbiAgICBBdXRob3JpdHlUeXBlW0F1dGhvcml0eVR5cGVbXCJGcmVlemVBY2NvdW50XCJdID0gMV0gPSBcIkZyZWV6ZUFjY291bnRcIjtcbiAgICBBdXRob3JpdHlUeXBlW0F1dGhvcml0eVR5cGVbXCJBY2NvdW50T3duZXJcIl0gPSAyXSA9IFwiQWNjb3VudE93bmVyXCI7XG4gICAgQXV0aG9yaXR5VHlwZVtBdXRob3JpdHlUeXBlW1wiQ2xvc2VBY2NvdW50XCJdID0gM10gPSBcIkNsb3NlQWNjb3VudFwiO1xufSkoQXV0aG9yaXR5VHlwZSB8fCAoQXV0aG9yaXR5VHlwZSA9IHt9KSk7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IHNldEF1dGhvcml0eUluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgdTgoJ2F1dGhvcml0eVR5cGUnKSxcbiAgICB1OCgnbmV3QXV0aG9yaXR5T3B0aW9uJyksXG4gICAgcHVibGljS2V5KCduZXdBdXRob3JpdHknKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSBTZXRBdXRob3JpdHkgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgICAgICAgICBBZGRyZXNzIG9mIHRoZSB0b2tlbiBhY2NvdW50XG4gKiBAcGFyYW0gY3VycmVudEF1dGhvcml0eSBDdXJyZW50IGF1dGhvcml0eSBvZiB0aGUgc3BlY2lmaWVkIHR5cGVcbiAqIEBwYXJhbSBhdXRob3JpdHlUeXBlICAgIFR5cGUgb2YgYXV0aG9yaXR5IHRvIHNldFxuICogQHBhcmFtIG5ld0F1dGhvcml0eSAgICAgTmV3IGF1dGhvcml0eSBvZiB0aGUgYWNjb3VudFxuICogQHBhcmFtIG11bHRpU2lnbmVycyAgICAgU2lnbmluZyBhY2NvdW50cyBpZiBgY3VycmVudEF1dGhvcml0eWAgaXMgYSBtdWx0aXNpZ1xuICogQHBhcmFtIHByb2dyYW1JZCAgICAgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNldEF1dGhvcml0eUluc3RydWN0aW9uKGFjY291bnQsIGN1cnJlbnRBdXRob3JpdHksIGF1dGhvcml0eVR5cGUsIG5ld0F1dGhvcml0eSwgbXVsdGlTaWduZXJzID0gW10sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBrZXlzID0gYWRkU2lnbmVycyhbeyBwdWJrZXk6IGFjY291bnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9XSwgY3VycmVudEF1dGhvcml0eSwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKHNldEF1dGhvcml0eUluc3RydWN0aW9uRGF0YS5zcGFuKTtcbiAgICBzZXRBdXRob3JpdHlJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uU2V0QXV0aG9yaXR5LFxuICAgICAgICBhdXRob3JpdHlUeXBlLFxuICAgICAgICBuZXdBdXRob3JpdHlPcHRpb246IG5ld0F1dGhvcml0eSA/IDEgOiAwLFxuICAgICAgICBuZXdBdXRob3JpdHk6IG5ld0F1dGhvcml0eSB8fCBuZXcgUHVibGljS2V5KDApLFxuICAgIH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGEgU2V0QXV0aG9yaXR5IGluc3RydWN0aW9uIGFuZCB2YWxpZGF0ZSBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBEZWNvZGVkLCB2YWxpZCBpbnN0cnVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU2V0QXV0aG9yaXR5SW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBzZXRBdXRob3JpdHlJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIGN1cnJlbnRBdXRob3JpdHksIG11bHRpU2lnbmVycyB9LCBkYXRhLCB9ID0gZGVjb2RlU2V0QXV0aG9yaXR5SW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLlNldEF1dGhvcml0eSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFhY2NvdW50IHx8ICFjdXJyZW50QXV0aG9yaXR5KVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IoKTtcbiAgICAvLyBUT0RPOiBrZXkgY2hlY2tzP1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIGN1cnJlbnRBdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgU2V0QXV0aG9yaXR5IGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVNldEF1dGhvcml0eUluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgY3VycmVudEF1dGhvcml0eSwgLi4ubXVsdGlTaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIGNvbnN0IHsgaW5zdHJ1Y3Rpb24sIGF1dGhvcml0eVR5cGUsIG5ld0F1dGhvcml0eU9wdGlvbiwgbmV3QXV0aG9yaXR5IH0gPSBzZXRBdXRob3JpdHlJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIGN1cnJlbnRBdXRob3JpdHksXG4gICAgICAgICAgICBtdWx0aVNpZ25lcnMsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGluc3RydWN0aW9uLFxuICAgICAgICAgICAgYXV0aG9yaXR5VHlwZSxcbiAgICAgICAgICAgIG5ld0F1dGhvcml0eTogbmV3QXV0aG9yaXR5T3B0aW9uID8gbmV3QXV0aG9yaXR5IDogbnVsbCxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V0QXV0aG9yaXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"syncNativeInstructionData\": function() { return /* binding */ syncNativeInstructionData; },\n/* harmony export */   \"createSyncNativeInstruction\": function() { return /* binding */ createSyncNativeInstruction; },\n/* harmony export */   \"decodeSyncNativeInstruction\": function() { return /* binding */ decodeSyncNativeInstruction; },\n/* harmony export */   \"decodeSyncNativeInstructionUnchecked\": function() { return /* binding */ decodeSyncNativeInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n/** TODO: docs */\nconst syncNativeInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct a SyncNative instruction\n *\n * @param account   Native account to sync lamports from\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createSyncNativeInstruction(account, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: account, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(syncNativeInstructionData.span);\n    syncNativeInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.SyncNative }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a SyncNative instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeSyncNativeInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== syncNativeInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { account }, data, } = decodeSyncNativeInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.SyncNative)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!account)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data,\n    };\n}\n/**\n * Decode a SyncNative instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeSyncNativeInstructionUnchecked({ programId, keys: [account], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data: syncNativeInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=syncNative.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvc3luY05hdGl2ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ007QUFDTjtBQUN1SDtBQUM1SDtBQUM5QztBQUNPLGtDQUFrQyw2REFBTSxFQUFFLHlEQUFFO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwREFBMEQsMkRBQWdCO0FBQ2pGLG9CQUFvQixvREFBb0Q7QUFDeEUsaUJBQWlCLE1BQU07QUFDdkIsdUNBQXVDLGFBQWEsa0VBQTJCLEVBQUU7QUFDakYsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOERBQThELDJEQUFnQjtBQUNyRjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSxTQUFTLFVBQVU7QUFDdkMsNkJBQTZCLGtFQUEyQjtBQUN4RCxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0RBQWdELG1DQUFtQztBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvc3luY05hdGl2ZS5qcz9iNjY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IHN5bmNOYXRpdmVJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW3U4KCdpbnN0cnVjdGlvbicpXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhIFN5bmNOYXRpdmUgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gYWNjb3VudCAgIE5hdGl2ZSBhY2NvdW50IHRvIHN5bmMgbGFtcG9ydHMgZnJvbVxuICogQHBhcmFtIHByb2dyYW1JZCBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBJbnN0cnVjdGlvbiB0byBhZGQgdG8gYSB0cmFuc2FjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3luY05hdGl2ZUluc3RydWN0aW9uKGFjY291bnQsIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBrZXlzID0gW3sgcHVia2V5OiBhY2NvdW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfV07XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyhzeW5jTmF0aXZlSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIHN5bmNOYXRpdmVJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHsgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uU3luY05hdGl2ZSB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vKipcbiAqIERlY29kZSBhIFN5bmNOYXRpdmUgaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTeW5jTmF0aXZlSW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSBzeW5jTmF0aXZlSW5zdHJ1Y3Rpb25EYXRhLnNwYW4pXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvcigpO1xuICAgIGNvbnN0IHsga2V5czogeyBhY2NvdW50IH0sIGRhdGEsIH0gPSBkZWNvZGVTeW5jTmF0aXZlSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLlN5bmNOYXRpdmUpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghYWNjb3VudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGEsXG4gICAgfTtcbn1cbi8qKlxuICogRGVjb2RlIGEgU3luY05hdGl2ZSBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTeW5jTmF0aXZlSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFthY2NvdW50XSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogc3luY05hdGl2ZUluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bmNOYXRpdmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"thawAccountInstructionData\": function() { return /* binding */ thawAccountInstructionData; },\n/* harmony export */   \"createThawAccountInstruction\": function() { return /* binding */ createThawAccountInstruction; },\n/* harmony export */   \"decodeThawAccountInstruction\": function() { return /* binding */ decodeThawAccountInstruction; },\n/* harmony export */   \"decodeThawAccountInstructionUnchecked\": function() { return /* binding */ decodeThawAccountInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n/** TODO: docs */\nconst thawAccountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction')]);\n/**\n * Construct a ThawAccount instruction\n *\n * @param account      Account to thaw\n * @param mint         Mint account\n * @param authority    Mint freeze authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createThawAccountInstruction(account, mint, authority, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_3__.addSigners)([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(thawAccountInstructionData.span);\n    thawAccountInstructionData.encode({ instruction: _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.ThawAccount }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a ThawAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeThawAccountInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== thawAccountInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionDataError();\n    const { keys: { account, mint, authority, multiSigners }, data, } = decodeThawAccountInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_4__.TokenInstruction.ThawAccount)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a ThawAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeThawAccountInstructionUnchecked({ programId, keys: [account, mint, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data: thawAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=thawAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdGhhd0FjY291bnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDTTtBQUNOO0FBQ3VIO0FBQy9IO0FBQ0c7QUFDOUM7QUFDTyxtQ0FBbUMsNkRBQU0sRUFBRSx5REFBRTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0ZBQStGLDJEQUFnQjtBQUN0SCxpQkFBaUIsd0RBQVU7QUFDM0IsVUFBVSxvREFBb0Q7QUFDOUQsVUFBVSxrREFBa0Q7QUFDNUQ7QUFDQSxpQkFBaUIsTUFBTTtBQUN2Qix3Q0FBd0MsYUFBYSxtRUFBNEIsRUFBRTtBQUNuRixlQUFlLG1FQUFzQixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrREFBK0QsMkRBQWdCO0FBQ3RGO0FBQ0Esa0JBQWtCLDJFQUFtQztBQUNyRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQsWUFBWSxRQUFRLHdDQUF3QyxVQUFVO0FBQ3RFLDZCQUE2QixtRUFBNEI7QUFDekQsa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBLGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlEQUFpRCxxRUFBcUU7QUFDN0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb2xhbmEvc3BsLXRva2VuL2xpYi9lc20vaW5zdHJ1Y3Rpb25zL3RoYXdBY2NvdW50LmpzPzgzNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkluc3RydWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGFkZFNpZ25lcnMgfSBmcm9tICcuL2ludGVybmFsLmpzJztcbmltcG9ydCB7IFRva2VuSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL3R5cGVzLmpzJztcbi8qKiBUT0RPOiBkb2NzICovXG5leHBvcnQgY29uc3QgdGhhd0FjY291bnRJbnN0cnVjdGlvbkRhdGEgPSBzdHJ1Y3QoW3U4KCdpbnN0cnVjdGlvbicpXSk7XG4vKipcbiAqIENvbnN0cnVjdCBhIFRoYXdBY2NvdW50IGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIGFjY291bnQgICAgICBBY2NvdW50IHRvIHRoYXdcbiAqIEBwYXJhbSBtaW50ICAgICAgICAgTWludCBhY2NvdW50XG4gKiBAcGFyYW0gYXV0aG9yaXR5ICAgIE1pbnQgZnJlZXplIGF1dGhvcml0eVxuICogQHBhcmFtIG11bHRpU2lnbmVycyBTaWduaW5nIGFjY291bnRzIGlmIGBhdXRob3JpdHlgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRoYXdBY2NvdW50SW5zdHJ1Y3Rpb24oYWNjb3VudCwgbWludCwgYXV0aG9yaXR5LCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFtcbiAgICAgICAgeyBwdWJrZXk6IGFjY291bnQsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9LFxuICAgIF0sIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKHRoYXdBY2NvdW50SW5zdHJ1Y3Rpb25EYXRhLnNwYW4pO1xuICAgIHRoYXdBY2NvdW50SW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7IGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLlRoYXdBY2NvdW50IH0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IGtleXMsIHByb2dyYW1JZCwgZGF0YSB9KTtcbn1cbi8qKlxuICogRGVjb2RlIGEgVGhhd0FjY291bnQgaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUaGF3QWNjb3VudEluc3RydWN0aW9uKGluc3RydWN0aW9uLCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgaWYgKCFpbnN0cnVjdGlvbi5wcm9ncmFtSWQuZXF1YWxzKHByb2dyYW1JZCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblByb2dyYW1FcnJvcigpO1xuICAgIGlmIChpbnN0cnVjdGlvbi5kYXRhLmxlbmd0aCAhPT0gdGhhd0FjY291bnRJbnN0cnVjdGlvbkRhdGEuc3BhbilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yKCk7XG4gICAgY29uc3QgeyBrZXlzOiB7IGFjY291bnQsIG1pbnQsIGF1dGhvcml0eSwgbXVsdGlTaWduZXJzIH0sIGRhdGEsIH0gPSBkZWNvZGVUaGF3QWNjb3VudEluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5UaGF3QWNjb3VudClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFhY2NvdW50IHx8ICFtaW50IHx8ICFhdXRob3JpdHkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIC8vIFRPRE86IGtleSBjaGVja3M/XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgbWludCxcbiAgICAgICAgICAgIGF1dGhvcml0eSxcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWNvZGUgYSBUaGF3QWNjb3VudCBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUaGF3QWNjb3VudEluc3RydWN0aW9uVW5jaGVja2VkKHsgcHJvZ3JhbUlkLCBrZXlzOiBbYWNjb3VudCwgbWludCwgYXV0aG9yaXR5LCAuLi5tdWx0aVNpZ25lcnNdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgbWludCxcbiAgICAgICAgICAgIGF1dGhvcml0eSxcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogdGhhd0FjY291bnRJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aGF3QWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/transfer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/transfer.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transferInstructionData\": function() { return /* binding */ transferInstructionData; },\n/* harmony export */   \"createTransferInstruction\": function() { return /* binding */ createTransferInstruction; },\n/* harmony export */   \"decodeTransferInstruction\": function() { return /* binding */ decodeTransferInstruction; },\n/* harmony export */   \"decodeTransferInstructionUnchecked\": function() { return /* binding */ decodeTransferInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst transferInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([(0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'), (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount')]);\n/**\n * Construct a Transfer instruction\n *\n * @param source       Source account\n * @param destination  Destination account\n * @param owner        Owner of the source account\n * @param amount       Number of tokens to transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createTransferInstruction(source, destination, owner, amount, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(transferInstructionData.span);\n    transferInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Transfer,\n        amount: BigInt(amount),\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Transfer instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeTransferInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { source, destination, owner, multiSigners }, data, } = decodeTransferInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.Transfer)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!source || !destination || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            source,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Transfer instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeTransferInstructionUnchecked({ programId, keys: [source, destination, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            source,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data: transferInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=transfer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdHJhbnNmZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0Q7QUFDTztBQUNOO0FBQ3VIO0FBQy9IO0FBQ0c7QUFDOUM7QUFDTyxnQ0FBZ0MsNkRBQU0sRUFBRSx5REFBRSxpQkFBaUIsZ0VBQUc7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0dBQXNHLDJEQUFnQjtBQUM3SCxpQkFBaUIsd0RBQVU7QUFDM0IsVUFBVSxtREFBbUQ7QUFDN0QsVUFBVSx3REFBd0Q7QUFDbEU7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLHFCQUFxQixnRUFBeUI7QUFDOUM7QUFDQSxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNERBQTRELDJEQUFnQjtBQUNuRjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSwwQ0FBMEMsVUFBVTtBQUN4RSw2QkFBNkIsZ0VBQXlCO0FBQ3RELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw4Q0FBOEMsdUVBQXVFO0FBQzVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy90cmFuc2Zlci5qcz8wOGJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgdTY0IH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbkRhdGFFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25LZXlzRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgYWRkU2lnbmVycyB9IGZyb20gJy4vaW50ZXJuYWwuanMnO1xuaW1wb3J0IHsgVG9rZW5JbnN0cnVjdGlvbiB9IGZyb20gJy4vdHlwZXMuanMnO1xuLyoqIFRPRE86IGRvY3MgKi9cbmV4cG9ydCBjb25zdCB0cmFuc2Zlckluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbdTgoJ2luc3RydWN0aW9uJyksIHU2NCgnYW1vdW50JyldKTtcbi8qKlxuICogQ29uc3RydWN0IGEgVHJhbnNmZXIgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gc291cmNlICAgICAgIFNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gZGVzdGluYXRpb24gIERlc3RpbmF0aW9uIGFjY291bnRcbiAqIEBwYXJhbSBvd25lciAgICAgICAgT3duZXIgb2YgdGhlIHNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgIE51bWJlciBvZiB0b2tlbnMgdG8gdHJhbnNmZXJcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zZmVySW5zdHJ1Y3Rpb24oc291cmNlLCBkZXN0aW5hdGlvbiwgb3duZXIsIGFtb3VudCwgbXVsdGlTaWduZXJzID0gW10sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBjb25zdCBrZXlzID0gYWRkU2lnbmVycyhbXG4gICAgICAgIHsgcHVia2V5OiBzb3VyY2UsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogZGVzdGluYXRpb24sIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgIF0sIG93bmVyLCBtdWx0aVNpZ25lcnMpO1xuICAgIGNvbnN0IGRhdGEgPSBCdWZmZXIuYWxsb2ModHJhbnNmZXJJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgdHJhbnNmZXJJbnN0cnVjdGlvbkRhdGEuZW5jb2RlKHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IFRva2VuSW5zdHJ1Y3Rpb24uVHJhbnNmZXIsXG4gICAgICAgIGFtb3VudDogQmlnSW50KGFtb3VudCksXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBUcmFuc2ZlciBpbnN0cnVjdGlvbiBhbmQgdmFsaWRhdGUgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gRGVjb2RlZCwgdmFsaWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRyYW5zZmVySW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgaWYgKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoICE9PSB0cmFuc2Zlckluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgc291cmNlLCBkZXN0aW5hdGlvbiwgb3duZXIsIG11bHRpU2lnbmVycyB9LCBkYXRhLCB9ID0gZGVjb2RlVHJhbnNmZXJJbnN0cnVjdGlvblVuY2hlY2tlZChpbnN0cnVjdGlvbik7XG4gICAgaWYgKGRhdGEuaW5zdHJ1Y3Rpb24gIT09IFRva2VuSW5zdHJ1Y3Rpb24uVHJhbnNmZXIpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvblR5cGVFcnJvcigpO1xuICAgIGlmICghc291cmNlIHx8ICFkZXN0aW5hdGlvbiB8fCAhb3duZXIpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIC8vIFRPRE86IGtleSBjaGVja3M/XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBzb3VyY2UsXG4gICAgICAgICAgICBkZXN0aW5hdGlvbixcbiAgICAgICAgICAgIG93bmVyLFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhIFRyYW5zZmVyIGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRyYW5zZmVySW5zdHJ1Y3Rpb25VbmNoZWNrZWQoeyBwcm9ncmFtSWQsIGtleXM6IFtzb3VyY2UsIGRlc3RpbmF0aW9uLCBvd25lciwgLi4ubXVsdGlTaWduZXJzXSwgZGF0YSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgc291cmNlLFxuICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogdHJhbnNmZXJJbnN0cnVjdGlvbkRhdGEuZGVjb2RlKGRhdGEpLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2Zlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/transfer.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transferCheckedInstructionData\": function() { return /* binding */ transferCheckedInstructionData; },\n/* harmony export */   \"createTransferCheckedInstruction\": function() { return /* binding */ createTransferCheckedInstruction; },\n/* harmony export */   \"decodeTransferCheckedInstruction\": function() { return /* binding */ decodeTransferCheckedInstruction; },\n/* harmony export */   \"decodeTransferCheckedInstructionUnchecked\": function() { return /* binding */ decodeTransferCheckedInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _internal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/internal.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** TODO: docs */\nconst transferCheckedInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n]);\n/**\n * Construct a TransferChecked instruction\n *\n * @param source       Source account\n * @param mint         Mint account\n * @param destination  Destination account\n * @param owner        Owner of the source account\n * @param amount       Number of tokens to transfer\n * @param decimals     Number of decimals in transfer amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createTransferCheckedInstruction(source, mint, destination, owner, amount, decimals, multiSigners = [], programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const keys = (0,_internal_js__WEBPACK_IMPORTED_MODULE_4__.addSigners)([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(transferCheckedInstructionData.span);\n    transferCheckedInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a TransferChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeTransferCheckedInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferCheckedInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionDataError();\n    const { keys: { source, mint, destination, owner, multiSigners }, data, } = decodeTransferCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_5__.TokenInstruction.TransferChecked)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionTypeError();\n    if (!source || !mint || !destination || !owner)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a TransferChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeTransferCheckedInstructionUnchecked({ programId, keys: [source, mint, destination, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data: transferCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=transferChecked.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdHJhbnNmZXJDaGVja2VkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNEO0FBQ087QUFDTjtBQUN1SDtBQUMvSDtBQUNHO0FBQzlDO0FBQ08sdUNBQXVDLDZEQUFNO0FBQ3BELElBQUkseURBQUU7QUFDTixJQUFJLGdFQUFHO0FBQ1AsSUFBSSx5REFBRTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZIQUE2SCwyREFBZ0I7QUFDcEosaUJBQWlCLHdEQUFVO0FBQzNCLFVBQVUsbURBQW1EO0FBQzdELFVBQVUsa0RBQWtEO0FBQzVELFVBQVUsd0RBQXdEO0FBQ2xFO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsdUVBQWdDO0FBQ3JEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSxtRUFBc0IsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUVBQW1FLDJEQUFnQjtBQUMxRjtBQUNBLGtCQUFrQiwyRUFBbUM7QUFDckQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSxnREFBZ0QsVUFBVTtBQUM5RSw2QkFBNkIsdUVBQWdDO0FBQzdELGtCQUFrQix3RUFBZ0M7QUFDbEQ7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFEQUFxRCw2RUFBNkU7QUFDekk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdHJhbnNmZXJDaGVja2VkLmpzP2U1YTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyB1NjQgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBhZGRTaWduZXJzIH0gZnJvbSAnLi9pbnRlcm5hbC5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKiogVE9ETzogZG9jcyAqL1xuZXhwb3J0IGNvbnN0IHRyYW5zZmVyQ2hlY2tlZEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgdTgoJ2luc3RydWN0aW9uJyksXG4gICAgdTY0KCdhbW91bnQnKSxcbiAgICB1OCgnZGVjaW1hbHMnKSxcbl0pO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSBUcmFuc2ZlckNoZWNrZWQgaW5zdHJ1Y3Rpb25cbiAqXG4gKiBAcGFyYW0gc291cmNlICAgICAgIFNvdXJjZSBhY2NvdW50XG4gKiBAcGFyYW0gbWludCAgICAgICAgIE1pbnQgYWNjb3VudFxuICogQHBhcmFtIGRlc3RpbmF0aW9uICBEZXN0aW5hdGlvbiBhY2NvdW50XG4gKiBAcGFyYW0gb3duZXIgICAgICAgIE93bmVyIG9mIHRoZSBzb3VyY2UgYWNjb3VudFxuICogQHBhcmFtIGFtb3VudCAgICAgICBOdW1iZXIgb2YgdG9rZW5zIHRvIHRyYW5zZmVyXG4gKiBAcGFyYW0gZGVjaW1hbHMgICAgIE51bWJlciBvZiBkZWNpbWFscyBpbiB0cmFuc2ZlciBhbW91bnRcbiAqIEBwYXJhbSBtdWx0aVNpZ25lcnMgU2lnbmluZyBhY2NvdW50cyBpZiBgb3duZXJgIGlzIGEgbXVsdGlzaWdcbiAqIEBwYXJhbSBwcm9ncmFtSWQgICAgU1BMIFRva2VuIHByb2dyYW0gYWNjb3VudFxuICpcbiAqIEByZXR1cm4gSW5zdHJ1Y3Rpb24gdG8gYWRkIHRvIGEgdHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zZmVyQ2hlY2tlZEluc3RydWN0aW9uKHNvdXJjZSwgbWludCwgZGVzdGluYXRpb24sIG93bmVyLCBhbW91bnQsIGRlY2ltYWxzLCBtdWx0aVNpZ25lcnMgPSBbXSwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGNvbnN0IGtleXMgPSBhZGRTaWduZXJzKFtcbiAgICAgICAgeyBwdWJrZXk6IHNvdXJjZSwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBtaW50LCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IGZhbHNlIH0sXG4gICAgICAgIHsgcHVia2V5OiBkZXN0aW5hdGlvbiwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgXSwgb3duZXIsIG11bHRpU2lnbmVycyk7XG4gICAgY29uc3QgZGF0YSA9IEJ1ZmZlci5hbGxvYyh0cmFuc2ZlckNoZWNrZWRJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgdHJhbnNmZXJDaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLmVuY29kZSh7XG4gICAgICAgIGluc3RydWN0aW9uOiBUb2tlbkluc3RydWN0aW9uLlRyYW5zZmVyQ2hlY2tlZCxcbiAgICAgICAgYW1vdW50OiBCaWdJbnQoYW1vdW50KSxcbiAgICAgICAgZGVjaW1hbHMsXG4gICAgfSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHsga2V5cywgcHJvZ3JhbUlkLCBkYXRhIH0pO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBUcmFuc2ZlckNoZWNrZWQgaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUcmFuc2ZlckNoZWNrZWRJbnN0cnVjdGlvbihpbnN0cnVjdGlvbiwgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5zdHJ1Y3Rpb24ucHJvZ3JhbUlkLmVxdWFscyhwcm9ncmFtSWQpKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IoKTtcbiAgICBpZiAoaW5zdHJ1Y3Rpb24uZGF0YS5sZW5ndGggIT09IHRyYW5zZmVyQ2hlY2tlZEluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgc291cmNlLCBtaW50LCBkZXN0aW5hdGlvbiwgb3duZXIsIG11bHRpU2lnbmVycyB9LCBkYXRhLCB9ID0gZGVjb2RlVHJhbnNmZXJDaGVja2VkSW5zdHJ1Y3Rpb25VbmNoZWNrZWQoaW5zdHJ1Y3Rpb24pO1xuICAgIGlmIChkYXRhLmluc3RydWN0aW9uICE9PSBUb2tlbkluc3RydWN0aW9uLlRyYW5zZmVyQ2hlY2tlZClcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yKCk7XG4gICAgaWYgKCFzb3VyY2UgfHwgIW1pbnQgfHwgIWRlc3RpbmF0aW9uIHx8ICFvd25lcilcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uS2V5c0Vycm9yKCk7XG4gICAgLy8gVE9ETzoga2V5IGNoZWNrcz9cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtSWQsXG4gICAgICAgIGtleXM6IHtcbiAgICAgICAgICAgIHNvdXJjZSxcbiAgICAgICAgICAgIG1pbnQsXG4gICAgICAgICAgICBkZXN0aW5hdGlvbixcbiAgICAgICAgICAgIG93bmVyLFxuICAgICAgICAgICAgbXVsdGlTaWduZXJzLFxuICAgICAgICB9LFxuICAgICAgICBkYXRhLFxuICAgIH07XG59XG4vKipcbiAqIERlY29kZSBhIFRyYW5zZmVyQ2hlY2tlZCBpbnN0cnVjdGlvbiB3aXRob3V0IHZhbGlkYXRpbmcgaXRcbiAqXG4gKiBAcGFyYW0gaW5zdHJ1Y3Rpb24gVHJhbnNhY3Rpb24gaW5zdHJ1Y3Rpb24gdG8gZGVjb2RlXG4gKlxuICogQHJldHVybiBEZWNvZGVkLCBub24tdmFsaWRhdGVkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUcmFuc2ZlckNoZWNrZWRJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW3NvdXJjZSwgbWludCwgZGVzdGluYXRpb24sIG93bmVyLCAuLi5tdWx0aVNpZ25lcnNdLCBkYXRhLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICBzb3VyY2UsXG4gICAgICAgICAgICBtaW50LFxuICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIG11bHRpU2lnbmVycyxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogdHJhbnNmZXJDaGVja2VkSW5zdHJ1Y3Rpb25EYXRhLmRlY29kZShkYXRhKSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNmZXJDaGVja2VkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/types.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/types.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TokenInstruction\": function() { return /* binding */ TokenInstruction; }\n/* harmony export */ });\n/** Instructions defined by the program */\nvar TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL2luc3RydWN0aW9ucy90eXBlcy5qcz9kODczIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBJbnN0cnVjdGlvbnMgZGVmaW5lZCBieSB0aGUgcHJvZ3JhbSAqL1xuZXhwb3J0IHZhciBUb2tlbkluc3RydWN0aW9uO1xuKGZ1bmN0aW9uIChUb2tlbkluc3RydWN0aW9uKSB7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiSW5pdGlhbGl6ZU1pbnRcIl0gPSAwXSA9IFwiSW5pdGlhbGl6ZU1pbnRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJJbml0aWFsaXplQWNjb3VudFwiXSA9IDFdID0gXCJJbml0aWFsaXplQWNjb3VudFwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIkluaXRpYWxpemVNdWx0aXNpZ1wiXSA9IDJdID0gXCJJbml0aWFsaXplTXVsdGlzaWdcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJUcmFuc2ZlclwiXSA9IDNdID0gXCJUcmFuc2ZlclwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIkFwcHJvdmVcIl0gPSA0XSA9IFwiQXBwcm92ZVwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIlJldm9rZVwiXSA9IDVdID0gXCJSZXZva2VcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJTZXRBdXRob3JpdHlcIl0gPSA2XSA9IFwiU2V0QXV0aG9yaXR5XCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiTWludFRvXCJdID0gN10gPSBcIk1pbnRUb1wiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIkJ1cm5cIl0gPSA4XSA9IFwiQnVyblwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIkNsb3NlQWNjb3VudFwiXSA9IDldID0gXCJDbG9zZUFjY291bnRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJGcmVlemVBY2NvdW50XCJdID0gMTBdID0gXCJGcmVlemVBY2NvdW50XCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiVGhhd0FjY291bnRcIl0gPSAxMV0gPSBcIlRoYXdBY2NvdW50XCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiVHJhbnNmZXJDaGVja2VkXCJdID0gMTJdID0gXCJUcmFuc2ZlckNoZWNrZWRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJBcHByb3ZlQ2hlY2tlZFwiXSA9IDEzXSA9IFwiQXBwcm92ZUNoZWNrZWRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJNaW50VG9DaGVja2VkXCJdID0gMTRdID0gXCJNaW50VG9DaGVja2VkXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiQnVybkNoZWNrZWRcIl0gPSAxNV0gPSBcIkJ1cm5DaGVja2VkXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiSW5pdGlhbGl6ZUFjY291bnQyXCJdID0gMTZdID0gXCJJbml0aWFsaXplQWNjb3VudDJcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJTeW5jTmF0aXZlXCJdID0gMTddID0gXCJTeW5jTmF0aXZlXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiSW5pdGlhbGl6ZUFjY291bnQzXCJdID0gMThdID0gXCJJbml0aWFsaXplQWNjb3VudDNcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJJbml0aWFsaXplTXVsdGlzaWcyXCJdID0gMTldID0gXCJJbml0aWFsaXplTXVsdGlzaWcyXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiSW5pdGlhbGl6ZU1pbnQyXCJdID0gMjBdID0gXCJJbml0aWFsaXplTWludDJcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJHZXRBY2NvdW50RGF0YVNpemVcIl0gPSAyMV0gPSBcIkdldEFjY291bnREYXRhU2l6ZVwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIkluaXRpYWxpemVJbW11dGFibGVPd25lclwiXSA9IDIyXSA9IFwiSW5pdGlhbGl6ZUltbXV0YWJsZU93bmVyXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiQW1vdW50VG9VaUFtb3VudFwiXSA9IDIzXSA9IFwiQW1vdW50VG9VaUFtb3VudFwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIlVpQW1vdW50VG9BbW91bnRcIl0gPSAyNF0gPSBcIlVpQW1vdW50VG9BbW91bnRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJJbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5XCJdID0gMjVdID0gXCJJbml0aWFsaXplTWludENsb3NlQXV0aG9yaXR5XCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiVHJhbnNmZXJGZWVFeHRlbnNpb25cIl0gPSAyNl0gPSBcIlRyYW5zZmVyRmVlRXh0ZW5zaW9uXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiQ29uZmlkZW50aWFsVHJhbnNmZXJFeHRlbnNpb25cIl0gPSAyN10gPSBcIkNvbmZpZGVudGlhbFRyYW5zZmVyRXh0ZW5zaW9uXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiRGVmYXVsdEFjY291bnRTdGF0ZUV4dGVuc2lvblwiXSA9IDI4XSA9IFwiRGVmYXVsdEFjY291bnRTdGF0ZUV4dGVuc2lvblwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIlJlYWxsb2NhdGVcIl0gPSAyOV0gPSBcIlJlYWxsb2NhdGVcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJNZW1vVHJhbnNmZXJFeHRlbnNpb25cIl0gPSAzMF0gPSBcIk1lbW9UcmFuc2ZlckV4dGVuc2lvblwiO1xuICAgIFRva2VuSW5zdHJ1Y3Rpb25bVG9rZW5JbnN0cnVjdGlvbltcIkNyZWF0ZU5hdGl2ZU1pbnRcIl0gPSAzMV0gPSBcIkNyZWF0ZU5hdGl2ZU1pbnRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJJbml0aWFsaXplTm9uVHJhbnNmZXJhYmxlTWludFwiXSA9IDMyXSA9IFwiSW5pdGlhbGl6ZU5vblRyYW5zZmVyYWJsZU1pbnRcIjtcbiAgICBUb2tlbkluc3RydWN0aW9uW1Rva2VuSW5zdHJ1Y3Rpb25bXCJJbnRlcmVzdEJlYXJpbmdNaW50RXh0ZW5zaW9uXCJdID0gMzNdID0gXCJJbnRlcmVzdEJlYXJpbmdNaW50RXh0ZW5zaW9uXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiQ3BpR3VhcmRFeHRlbnNpb25cIl0gPSAzNF0gPSBcIkNwaUd1YXJkRXh0ZW5zaW9uXCI7XG4gICAgVG9rZW5JbnN0cnVjdGlvbltUb2tlbkluc3RydWN0aW9uW1wiSW5pdGlhbGl6ZVBlcm1hbmVudERlbGVnYXRlXCJdID0gMzVdID0gXCJJbml0aWFsaXplUGVybWFuZW50RGVsZWdhdGVcIjtcbn0pKFRva2VuSW5zdHJ1Y3Rpb24gfHwgKFRva2VuSW5zdHJ1Y3Rpb24gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/types.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUiAmountToAmountInstruction\": function() { return /* binding */ createUiAmountToAmountInstruction; },\n/* harmony export */   \"decodeUiAmountToAmountInstruction\": function() { return /* binding */ decodeUiAmountToAmountInstruction; },\n/* harmony export */   \"decodeUiAmountToAmountInstructionUnchecked\": function() { return /* binding */ decodeUiAmountToAmountInstructionUnchecked; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@solana/spl-token/lib/esm/instructions/types.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n/** TODO: docs */\n/**\n * Construct a UiAmountToAmount instruction\n *\n * @param mint         Public key of the mint\n * @param amount       UiAmount of tokens to be converted to Amount\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createUiAmountToAmountInstruction(mint, amount, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: false }];\n    const buf = Buffer.from(amount, 'utf8');\n    const uiAmountToAmountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(buf.length, 'amount'),\n    ]);\n    const data = Buffer.alloc(uiAmountToAmountInstructionData.span);\n    uiAmountToAmountInstructionData.encode({\n        instruction: _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.UiAmountToAmount,\n        amount: buf,\n    }, data);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a UiAmountToAmount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeUiAmountToAmountInstruction(instruction, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionProgramError();\n    const uiAmountToAmountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(instruction.data.length - 1, 'amount'),\n    ]);\n    if (instruction.data.length !== uiAmountToAmountInstructionData.span)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeUiAmountToAmountInstructionUnchecked(instruction);\n    if (data.instruction !== _types_js__WEBPACK_IMPORTED_MODULE_3__.TokenInstruction.UiAmountToAmount)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode a UiAmountToAmount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeUiAmountToAmountInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const uiAmountToAmountInstructionData = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('instruction'),\n        (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(data.length - 1, 'amount'),\n    ]);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: uiAmountToAmountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=uiAmountToAmount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdWlBbW91bnRUb0Ftb3VudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDQTtBQUNOO0FBQ3VIO0FBQzVIO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUVBQXFFLDJEQUFnQjtBQUM1RixvQkFBb0Isa0RBQWtEO0FBQ3RFLGdCQUFnQixNQUFNO0FBQ3RCLDRDQUE0Qyw2REFBTTtBQUNsRCxRQUFRLHlEQUFFO0FBQ1YsUUFBUSwyREFBSTtBQUNaO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQSxxQkFBcUIsd0VBQWlDO0FBQ3REO0FBQ0EsS0FBSztBQUNMLGVBQWUsbUVBQXNCLEdBQUcsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9FQUFvRSwyREFBZ0I7QUFDM0Y7QUFDQSxrQkFBa0IsMkVBQW1DO0FBQ3JELDRDQUE0Qyw2REFBTTtBQUNsRCxRQUFRLHlEQUFFO0FBQ1YsUUFBUSwyREFBSTtBQUNaO0FBQ0E7QUFDQSxrQkFBa0Isd0VBQWdDO0FBQ2xELFlBQVksUUFBUSxNQUFNLFVBQVU7QUFDcEMsNkJBQTZCLHdFQUFpQztBQUM5RCxrQkFBa0Isd0VBQWdDO0FBQ2xEO0FBQ0Esa0JBQWtCLHdFQUFnQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNEQUFzRCxnQ0FBZ0M7QUFDN0YsNENBQTRDLDZEQUFNO0FBQ2xELFFBQVEseURBQUU7QUFDVixRQUFRLDJEQUFJO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9pbnN0cnVjdGlvbnMvdWlBbW91bnRUb0Ftb3VudC5qcz9mZjRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJsb2IsIHN0cnVjdCwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lEIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFRva2VuSW52YWxpZEluc3RydWN0aW9uRGF0YUVycm9yLCBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvciwgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25Qcm9ncmFtRXJyb3IsIFRva2VuSW52YWxpZEluc3RydWN0aW9uVHlwZUVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBUb2tlbkluc3RydWN0aW9uIH0gZnJvbSAnLi90eXBlcy5qcyc7XG4vKiogVE9ETzogZG9jcyAqL1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSBVaUFtb3VudFRvQW1vdW50IGluc3RydWN0aW9uXG4gKlxuICogQHBhcmFtIG1pbnQgICAgICAgICBQdWJsaWMga2V5IG9mIHRoZSBtaW50XG4gKiBAcGFyYW0gYW1vdW50ICAgICAgIFVpQW1vdW50IG9mIHRva2VucyB0byBiZSBjb252ZXJ0ZWQgdG8gQW1vdW50XG4gKiBAcGFyYW0gcHJvZ3JhbUlkICAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIEluc3RydWN0aW9uIHRvIGFkZCB0byBhIHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVVaUFtb3VudFRvQW1vdW50SW5zdHJ1Y3Rpb24obWludCwgYW1vdW50LCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3Qga2V5cyA9IFt7IHB1YmtleTogbWludCwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiBmYWxzZSB9XTtcbiAgICBjb25zdCBidWYgPSBCdWZmZXIuZnJvbShhbW91bnQsICd1dGY4Jyk7XG4gICAgY29uc3QgdWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgICAgICBibG9iKGJ1Zi5sZW5ndGgsICdhbW91bnQnKSxcbiAgICBdKTtcbiAgICBjb25zdCBkYXRhID0gQnVmZmVyLmFsbG9jKHVpQW1vdW50VG9BbW91bnRJbnN0cnVjdGlvbkRhdGEuc3Bhbik7XG4gICAgdWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uRGF0YS5lbmNvZGUoe1xuICAgICAgICBpbnN0cnVjdGlvbjogVG9rZW5JbnN0cnVjdGlvbi5VaUFtb3VudFRvQW1vdW50LFxuICAgICAgICBhbW91bnQ6IGJ1ZixcbiAgICB9LCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oeyBrZXlzLCBwcm9ncmFtSWQsIGRhdGEgfSk7XG59XG4vKipcbiAqIERlY29kZSBhIFVpQW1vdW50VG9BbW91bnQgaW5zdHJ1Y3Rpb24gYW5kIHZhbGlkYXRlIGl0XG4gKlxuICogQHBhcmFtIGluc3RydWN0aW9uIFRyYW5zYWN0aW9uIGluc3RydWN0aW9uIHRvIGRlY29kZVxuICogQHBhcmFtIHByb2dyYW1JZCAgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIHZhbGlkIGluc3RydWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVVaUFtb3VudFRvQW1vdW50SW5zdHJ1Y3Rpb24oaW5zdHJ1Y3Rpb24sIHByb2dyYW1JZCA9IFRPS0VOX1BST0dSQU1fSUQpIHtcbiAgICBpZiAoIWluc3RydWN0aW9uLnByb2dyYW1JZC5lcXVhbHMocHJvZ3JhbUlkKSlcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuSW52YWxpZEluc3RydWN0aW9uUHJvZ3JhbUVycm9yKCk7XG4gICAgY29uc3QgdWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgICAgICBibG9iKGluc3RydWN0aW9uLmRhdGEubGVuZ3RoIC0gMSwgJ2Ftb3VudCcpLFxuICAgIF0pO1xuICAgIGlmIChpbnN0cnVjdGlvbi5kYXRhLmxlbmd0aCAhPT0gdWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uRGF0YS5zcGFuKVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25EYXRhRXJyb3IoKTtcbiAgICBjb25zdCB7IGtleXM6IHsgbWludCB9LCBkYXRhLCB9ID0gZGVjb2RlVWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uVW5jaGVja2VkKGluc3RydWN0aW9uKTtcbiAgICBpZiAoZGF0YS5pbnN0cnVjdGlvbiAhPT0gVG9rZW5JbnN0cnVjdGlvbi5VaUFtb3VudFRvQW1vdW50KVxuICAgICAgICB0aHJvdyBuZXcgVG9rZW5JbnZhbGlkSW5zdHJ1Y3Rpb25UeXBlRXJyb3IoKTtcbiAgICBpZiAoIW1pbnQpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRJbnN0cnVjdGlvbktleXNFcnJvcigpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgbWludCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWNvZGUgYSBVaUFtb3VudFRvQW1vdW50IGluc3RydWN0aW9uIHdpdGhvdXQgdmFsaWRhdGluZyBpdFxuICpcbiAqIEBwYXJhbSBpbnN0cnVjdGlvbiBUcmFuc2FjdGlvbiBpbnN0cnVjdGlvbiB0byBkZWNvZGVcbiAqXG4gKiBAcmV0dXJuIERlY29kZWQsIG5vbi12YWxpZGF0ZWQgaW5zdHJ1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVVpQW1vdW50VG9BbW91bnRJbnN0cnVjdGlvblVuY2hlY2tlZCh7IHByb2dyYW1JZCwga2V5czogW21pbnRdLCBkYXRhLCB9KSB7XG4gICAgY29uc3QgdWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uRGF0YSA9IHN0cnVjdChbXG4gICAgICAgIHU4KCdpbnN0cnVjdGlvbicpLFxuICAgICAgICBibG9iKGRhdGEubGVuZ3RoIC0gMSwgJ2Ftb3VudCcpLFxuICAgIF0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czoge1xuICAgICAgICAgICAgbWludCxcbiAgICAgICAgfSxcbiAgICAgICAgZGF0YTogdWlBbW91bnRUb0Ftb3VudEluc3RydWN0aW9uRGF0YS5kZWNvZGUoZGF0YSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpQW1vdW50VG9BbW91bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/state/account.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/state/account.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountState\": function() { return /* binding */ AccountState; },\n/* harmony export */   \"AccountLayout\": function() { return /* binding */ AccountLayout; },\n/* harmony export */   \"ACCOUNT_SIZE\": function() { return /* binding */ ACCOUNT_SIZE; },\n/* harmony export */   \"getAccount\": function() { return /* binding */ getAccount; },\n/* harmony export */   \"getMultipleAccounts\": function() { return /* binding */ getMultipleAccounts; },\n/* harmony export */   \"getMinimumBalanceForRentExemptAccount\": function() { return /* binding */ getMinimumBalanceForRentExemptAccount; },\n/* harmony export */   \"getMinimumBalanceForRentExemptAccountWithExtensions\": function() { return /* binding */ getMinimumBalanceForRentExemptAccountWithExtensions; },\n/* harmony export */   \"unpackAccount\": function() { return /* binding */ unpackAccount; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _extensions_accountType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../extensions/accountType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js\");\n/* harmony import */ var _extensions_extensionType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../extensions/extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n/* harmony import */ var _multisig_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./multisig.js */ \"./node_modules/@solana/spl-token/lib/esm/state/multisig.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n/** Token account state as stored by the program */\nvar AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nconst AccountLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('mint'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('owner'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('amount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32)('delegateOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('delegate'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('state'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32)('isNativeOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('isNative'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('delegatedAmount'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32)('closeAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('closeAuthority'),\n]);\n/** Byte length of a token account */\nconst ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nasync function getAccount(connection, address, commitment, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nasync function getMultipleAccounts(connection, addresses, commitment, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nasync function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nasync function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = (0,_extensions_extensionType_js__WEBPACK_IMPORTED_MODULE_3__.getAccountLen)(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nfunction unpackAccount(address, info, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === _multisig_js__WEBPACK_IMPORTED_MODULE_5__.MULTISIG_SIZE)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != _extensions_accountType_js__WEBPACK_IMPORTED_MODULE_6__.AccountType.Account)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + _extensions_accountType_js__WEBPACK_IMPORTED_MODULE_6__.ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/state/account.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/state/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/state/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./account.js */ \"./node_modules/@solana/spl-token/lib/esm/state/account.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _account_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _account_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _mint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mint.js */ \"./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _mint_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _mint_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _multisig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multisig.js */ \"./node_modules/@solana/spl-token/lib/esm/state/multisig.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _multisig_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _multisig_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9zdGF0ZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTZCO0FBQ0g7QUFDSTtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9zdGF0ZS9pbmRleC5qcz9lOThmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL21pbnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9tdWx0aXNpZy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/state/index.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/state/mint.js":
/*!**************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/state/mint.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MintLayout\": function() { return /* binding */ MintLayout; },\n/* harmony export */   \"MINT_SIZE\": function() { return /* binding */ MINT_SIZE; },\n/* harmony export */   \"getMint\": function() { return /* binding */ getMint; },\n/* harmony export */   \"unpackMint\": function() { return /* binding */ unpackMint; },\n/* harmony export */   \"getMinimumBalanceForRentExemptMint\": function() { return /* binding */ getMinimumBalanceForRentExemptMint; },\n/* harmony export */   \"getMinimumBalanceForRentExemptMintWithExtensions\": function() { return /* binding */ getMinimumBalanceForRentExemptMintWithExtensions; },\n/* harmony export */   \"getAssociatedTokenAddress\": function() { return /* binding */ getAssociatedTokenAddress; },\n/* harmony export */   \"getAssociatedTokenAddressSync\": function() { return /* binding */ getAssociatedTokenAddressSync; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _extensions_accountType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../extensions/accountType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/accountType.js\");\n/* harmony import */ var _extensions_extensionType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../extensions/extensionType.js */ \"./node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account.js */ \"./node_modules/@solana/spl-token/lib/esm/state/account.js\");\n/* harmony import */ var _multisig_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./multisig.js */ \"./node_modules/@solana/spl-token/lib/esm/state/multisig.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n\n\n/** Buffer layout for de/serializing a mint */\nconst MintLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32)('mintAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('mintAuthority'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.u64)('supply'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('decimals'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.bool)('isInitialized'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32)('freezeAuthorityOption'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('freezeAuthority'),\n]);\n/** Byte length of a mint */\nconst MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nasync function getMint(connection, address, commitment, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nfunction unpackMint(address, info, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= _account_js__WEBPACK_IMPORTED_MODULE_5__.ACCOUNT_SIZE)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountSizeError();\n        if (info.data.length === _multisig_js__WEBPACK_IMPORTED_MODULE_6__.MULTISIG_SIZE)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidAccountSizeError();\n        if (info.data[_account_js__WEBPACK_IMPORTED_MODULE_5__.ACCOUNT_SIZE] != _extensions_accountType_js__WEBPACK_IMPORTED_MODULE_7__.AccountType.Mint)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenInvalidMintError();\n        tlvData = info.data.slice(_account_js__WEBPACK_IMPORTED_MODULE_5__.ACCOUNT_SIZE + _extensions_accountType_js__WEBPACK_IMPORTED_MODULE_7__.ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nasync function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nasync function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = (0,_extensions_extensionType_js__WEBPACK_IMPORTED_MODULE_8__.getMintLen)(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nasync function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !_solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.isOnCurve(owner.toBuffer()))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenOwnerOffCurveError();\n    const [address] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nfunction getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants_js__WEBPACK_IMPORTED_MODULE_3__.ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !_solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.isOnCurve(owner.toBuffer()))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.TokenOwnerOffCurveError();\n    const [address] = _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/state/mint.js\n");

/***/ }),

/***/ "./node_modules/@solana/spl-token/lib/esm/state/multisig.js":
/*!******************************************************************!*\
  !*** ./node_modules/@solana/spl-token/lib/esm/state/multisig.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MultisigLayout\": function() { return /* binding */ MultisigLayout; },\n/* harmony export */   \"MULTISIG_SIZE\": function() { return /* binding */ MULTISIG_SIZE; },\n/* harmony export */   \"getMultisig\": function() { return /* binding */ getMultisig; },\n/* harmony export */   \"unpackMultisig\": function() { return /* binding */ unpackMultisig; },\n/* harmony export */   \"getMinimumBalanceForRentExemptMultisig\": function() { return /* binding */ getMinimumBalanceForRentExemptMultisig; }\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/@solana/spl-token/lib/esm/errors.js\");\n\n\n\n\n/** Buffer layout for de/serializing a multisig */\nconst MultisigLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('m'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('n'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.bool)('isInitialized'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer1'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer2'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer3'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer4'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer5'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer6'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer7'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer8'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer9'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer10'),\n    (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.publicKey)('signer11'),\n]);\n/** Byte length of a multisig */\nconst MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nasync function getMultisig(connection, address, commitment, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nfunction unpackMultisig(address, info, programId = _constants_js__WEBPACK_IMPORTED_MODULE_2__.TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nasync function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvbGFuYS9zcGwtdG9rZW4vbGliL2VzbS9zdGF0ZS9tdWx0aXNpZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDVztBQUNYO0FBQ21FO0FBQ3RIO0FBQ08sdUJBQXVCLDZEQUFNO0FBQ3BDLElBQUkseURBQUU7QUFDTixJQUFJLHlEQUFFO0FBQ04sSUFBSSxpRUFBSTtBQUNSLElBQUksc0VBQVM7QUFDYixJQUFJLHNFQUFTO0FBQ2IsSUFBSSxzRUFBUztBQUNiLElBQUksc0VBQVM7QUFDYixJQUFJLHNFQUFTO0FBQ2IsSUFBSSxzRUFBUztBQUNiLElBQUksc0VBQVM7QUFDYixJQUFJLHNFQUFTO0FBQ2IsSUFBSSxzRUFBUztBQUNiLElBQUksc0VBQVM7QUFDYixJQUFJLHNFQUFTO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3RUFBd0UsMkRBQWdCO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1EQUFtRCwyREFBZ0I7QUFDMUU7QUFDQSxrQkFBa0IsaUVBQXlCO0FBQzNDO0FBQ0Esa0JBQWtCLHFFQUE2QjtBQUMvQztBQUNBLGtCQUFrQixvRUFBNEI7QUFDOUM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac29sYW5hL3NwbC10b2tlbi9saWIvZXNtL3N0YXRlL211bHRpc2lnLmpzP2FmNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RydWN0LCB1OCB9IGZyb20gJ0Bzb2xhbmEvYnVmZmVyLWxheW91dCc7XG5pbXBvcnQgeyBib29sLCBwdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgVE9LRU5fUFJPR1JBTV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBUb2tlbkFjY291bnROb3RGb3VuZEVycm9yLCBUb2tlbkludmFsaWRBY2NvdW50T3duZXJFcnJvciwgVG9rZW5JbnZhbGlkQWNjb3VudFNpemVFcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG4vKiogQnVmZmVyIGxheW91dCBmb3IgZGUvc2VyaWFsaXppbmcgYSBtdWx0aXNpZyAqL1xuZXhwb3J0IGNvbnN0IE11bHRpc2lnTGF5b3V0ID0gc3RydWN0KFtcbiAgICB1OCgnbScpLFxuICAgIHU4KCduJyksXG4gICAgYm9vbCgnaXNJbml0aWFsaXplZCcpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyMScpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyMicpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyMycpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyNCcpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyNScpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyNicpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyNycpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyOCcpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyOScpLFxuICAgIHB1YmxpY0tleSgnc2lnbmVyMTAnKSxcbiAgICBwdWJsaWNLZXkoJ3NpZ25lcjExJyksXG5dKTtcbi8qKiBCeXRlIGxlbmd0aCBvZiBhIG11bHRpc2lnICovXG5leHBvcnQgY29uc3QgTVVMVElTSUdfU0laRSA9IE11bHRpc2lnTGF5b3V0LnNwYW47XG4vKipcbiAqIFJldHJpZXZlIGluZm9ybWF0aW9uIGFib3V0IGEgbXVsdGlzaWdcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIGFkZHJlc3MgICAgTXVsdGlzaWcgYWNjb3VudFxuICogQHBhcmFtIGNvbW1pdG1lbnQgRGVzaXJlZCBsZXZlbCBvZiBjb21taXRtZW50IGZvciBxdWVyeWluZyB0aGUgc3RhdGVcbiAqIEBwYXJhbSBwcm9ncmFtSWQgIFNQTCBUb2tlbiBwcm9ncmFtIGFjY291bnRcbiAqXG4gKiBAcmV0dXJuIE11bHRpc2lnIGluZm9ybWF0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNdWx0aXNpZyhjb25uZWN0aW9uLCBhZGRyZXNzLCBjb21taXRtZW50LCBwcm9ncmFtSWQgPSBUT0tFTl9QUk9HUkFNX0lEKSB7XG4gICAgY29uc3QgaW5mbyA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0QWNjb3VudEluZm8oYWRkcmVzcywgY29tbWl0bWVudCk7XG4gICAgcmV0dXJuIHVucGFja011bHRpc2lnKGFkZHJlc3MsIGluZm8sIHByb2dyYW1JZCk7XG59XG4vKipcbiAqIFVucGFjayBhIG11bHRpc2lnXG4gKlxuICogQHBhcmFtIGFkZHJlc3MgICBNdWx0aXNpZyBhY2NvdW50XG4gKiBAcGFyYW0gaW5mbyAgICAgIE11bHRpc2lnIGFjY291bnQgZGF0YVxuICogQHBhcmFtIHByb2dyYW1JZCBTUEwgVG9rZW4gcHJvZ3JhbSBhY2NvdW50XG4gKlxuICogQHJldHVybiBVbnBhY2tlZCBtdWx0aXNpZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gdW5wYWNrTXVsdGlzaWcoYWRkcmVzcywgaW5mbywgcHJvZ3JhbUlkID0gVE9LRU5fUFJPR1JBTV9JRCkge1xuICAgIGlmICghaW5mbylcbiAgICAgICAgdGhyb3cgbmV3IFRva2VuQWNjb3VudE5vdEZvdW5kRXJyb3IoKTtcbiAgICBpZiAoIWluZm8ub3duZXIuZXF1YWxzKHByb2dyYW1JZCkpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRBY2NvdW50T3duZXJFcnJvcigpO1xuICAgIGlmIChpbmZvLmRhdGEubGVuZ3RoICE9IE1VTFRJU0lHX1NJWkUpXG4gICAgICAgIHRocm93IG5ldyBUb2tlbkludmFsaWRBY2NvdW50U2l6ZUVycm9yKCk7XG4gICAgY29uc3QgbXVsdGlzaWcgPSBNdWx0aXNpZ0xheW91dC5kZWNvZGUoaW5mby5kYXRhKTtcbiAgICByZXR1cm4geyBhZGRyZXNzLCAuLi5tdWx0aXNpZyB9O1xufVxuLyoqIEdldCB0aGUgbWluaW11bSBsYW1wb3J0IGJhbGFuY2UgZm9yIGEgbXVsdGlzaWcgdG8gYmUgcmVudCBleGVtcHRcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiBDb25uZWN0aW9uIHRvIHVzZVxuICogQHBhcmFtIGNvbW1pdG1lbnQgRGVzaXJlZCBsZXZlbCBvZiBjb21taXRtZW50IGZvciBxdWVyeWluZyB0aGUgc3RhdGVcbiAqXG4gKiBAcmV0dXJuIEFtb3VudCBvZiBsYW1wb3J0cyByZXF1aXJlZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TWluaW11bUJhbGFuY2VGb3JSZW50RXhlbXB0TXVsdGlzaWcoY29ubmVjdGlvbiwgY29tbWl0bWVudCkge1xuICAgIHJldHVybiBhd2FpdCBjb25uZWN0aW9uLmdldE1pbmltdW1CYWxhbmNlRm9yUmVudEV4ZW1wdGlvbihNVUxUSVNJR19TSVpFLCBjb21taXRtZW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpc2lnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@solana/spl-token/lib/esm/state/multisig.js\n");

/***/ }),

/***/ "./node_modules/bignumber.js/bignumber.mjs":
/*!*************************************************!*\
  !*** ./node_modules/bignumber.js/bignumber.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BigNumber\": function() { return /* binding */ BigNumber; }\n/* harmony export */ });\n/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nvar BigNumber = clone();\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (BigNumber);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bignumber.js/bignumber.mjs\n");

/***/ }),

/***/ "./node_modules/pako/dist/pako.esm.mjs":
/*!*********************************************!*\
  !*** ./node_modules/pako/dist/pako.esm.mjs ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Deflate\": function() { return /* binding */ Deflate_1; },\n/* harmony export */   \"Inflate\": function() { return /* binding */ Inflate_1; },\n/* harmony export */   \"constants\": function() { return /* binding */ constants_1; },\n/* harmony export */   \"default\": function() { return /* binding */ pako; },\n/* harmony export */   \"deflate\": function() { return /* binding */ deflate_1; },\n/* harmony export */   \"deflateRaw\": function() { return /* binding */ deflateRaw_1; },\n/* harmony export */   \"gzip\": function() { return /* binding */ gzip_1; },\n/* harmony export */   \"inflate\": function() { return /* binding */ inflate_1; },\n/* harmony export */   \"inflateRaw\": function() { return /* binding */ inflateRaw_1; },\n/* harmony export */   \"ungzip\": function() { return /* binding */ ungzip_1; }\n/* harmony export */ });\n\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pako/dist/pako.esm.mjs\n");

/***/ }),

/***/ "./src/views/SolanaSwapView/solana-dapp.json":
/*!***************************************************!*\
  !*** ./src/views/SolanaSwapView/solana-dapp.json ***!
  \***************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"version":"0.1.0","name":"solana_swap","instructions":[{"name":"initialize","accounts":[{"name":"controller","isMut":true,"isSigner":false},{"name":"escrow","isMut":true,"isSigner":false},{"name":"signer","isMut":true,"isSigner":true},{"name":"tokenMint","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"movePerSol","type":"u8"},{"name":"decimal","type":"u8"}]},{"name":"buyMove","accounts":[{"name":"user","isMut":true,"isSigner":true},{"name":"tokenMint","isMut":false,"isSigner":false},{"name":"controller","isMut":true,"isSigner":false},{"name":"escrow","isMut":true,"isSigner":false},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"sellMove","accounts":[{"name":"user","isMut":true,"isSigner":true},{"name":"tokenMint","isMut":false,"isSigner":false},{"name":"controller","isMut":true,"isSigner":false},{"name":"escrow","isMut":true,"isSigner":false},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"depositLiquidity","accounts":[{"name":"authorizer","isMut":true,"isSigner":true},{"name":"tokenMint","isMut":false,"isSigner":false},{"name":"controller","isMut":true,"isSigner":false},{"name":"escrow","isMut":true,"isSigner":false},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"removeLiquidity","accounts":[{"name":"authorizer","isMut":true,"isSigner":true},{"name":"tokenMint","isMut":false,"isSigner":false},{"name":"controller","isMut":true,"isSigner":false},{"name":"escrow","isMut":true,"isSigner":false},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]}],"accounts":[{"name":"Controller","type":{"kind":"struct","fields":[{"name":"authorizer","type":"publicKey"},{"name":"movePerSol","type":"u8"},{"name":"decimal","type":"u8"},{"name":"token0Amount","type":"u64"},{"name":"token1Amount","type":"u64"},{"name":"bump","type":"u8"},{"name":"escrowBump","type":"u8"}]}}],"errors":[{"code":6000,"name":"InvalidPrice"},{"code":6001,"name":"InvalidID"},{"code":6002,"name":"InsufficientFund"}],"metadata":{"address":"D4sU4y71tzBCYBeybADxfdowHNMw88txNM1cVxyPy5Qt"}}');

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fnhatminhphan%2FDesktop%2FCode%2FSolana%2Fsolana-swap%2Fapp%2Fsrc%2Fpages%2Findex.tsx!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);